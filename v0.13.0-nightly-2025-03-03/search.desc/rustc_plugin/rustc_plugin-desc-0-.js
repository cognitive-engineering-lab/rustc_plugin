searchState.loadedDescShard("rustc_plugin", 0, "A framework for writing plugins that integrate with the …\nEvery crate in the workspace and all transitive …\nCommand-line arguments passed by the user.\nOnly the crate containing a specific file.\nSpecification of a set of crates.\nJust crates in the workspace.\nInterface between your plugin and the rustc_plugin …\nArguments from your plugin to the rustc_plugin framework.\nParses and returns the CLI arguments for the plugin.\nWhatever CLI arguments you want to pass along.\nThe top-level function that should be called in your …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nThe top-level function that should be called by your …\nReturns the name of your driver binary as it’s installed …\nWhich crates you want to run the plugin on.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptionally modify the <code>cargo</code> command that launches rustc. …\nOptionally modify the <code>cargo</code> command that launches rustc. …\nExecutes the plugin with a set of compiler and plugin args.\nReturns the version of your plugin.")