rd_("DfA <code>\\x</code> prefix. When used without brackets, this form is \xe2\x80\xa6CgThe Unicode scalar value corresponding to this literal.o<code>as</code>n<code>@</code>o<code>do</code>BgThe <code>==</code> operator (equality)n<code>=</code>AmA free-standing function: \xe2\x80\xa6CcA foreign function in an <code>extern</code> block.ChAn associated function within the definition of a trait.BlAn associated function within an impl block.o<code>fn</code>CjThe <code>&gt;=</code> operator (greater than or equal to)Ab<code>&gt;=</code>BmThe <code>&gt;</code> operator (greater than)Aa<code>&gt;</code>DkAn <code>if</code> expression with an optional <code>else</code> block: \xe2\x80\xa6o<code>if</code>o<code>in</code>ChIO Error during execution of <code>cargo metadata</code>ClThe error was caused by a failure to read or write bytes \xe2\x80\xa6Dc<em>Line feed</em> \xe2\x80\x93 a line ending historically used in Unix. \xe2\x80\xa6CgThe <code>&lt;=</code> operator (less than or equal to)Ab<code>&lt;=</code>BjThe <code>&lt;</code> operator (less than)Aa<code>&lt;</code>BkThe <code>!=</code> operator (not equal to)o<code>!=</code>CjRun an unanchored search. This means a match may occur \xe2\x80\xa60CoEquivalent to <code>Ok::&lt;_, anyhow::Error&gt;(value)</code>.AjContains the success value0DcThe output type produced by this <code>Serializer</code> during \xe2\x80\xa60DcMust match the <code>Ok</code> type of our <code>Serializer</code>.0000001100000002222JiSemVer comparison operator: <code>=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>~</code>, <code>^</code>, <code>*</code>.BiThe <code>||</code> operator (logical or)CaA pattern that matches any one of a set of cases.n<code>|</code>CnA type which can be represented in TypeScript. Most of the \xe2\x80\xa6CmDerives TS for a struct or enum. Please take a look at TS \xe2\x80\xa60AiGet the background color.CaGeneric data structure deserialization framework.0BoDeserialize JSON data to a Rust data structure.AlCompare two word separators.AlCompare two wrap algorithms.AiGet the foreground color.BbAn opaque identifier for a package0DeReturns true if <code>E</code> is the type held by this error object.DbForwards to the method defined on the type <code>dyn Error</code>.DjReturns <code>true</code> if the inner type is the same as <code>T</code>.1AeThe actual operation.EcThe type of Unicode op used to associate <code>name</code> with <code>value</code>.AnUtilities for <code>Ty</code>.0BmCreate a new haystack unit from a byte value.DfThe binary interface of a function: <code>extern &quot;C&quot;</code>.BfThe <code>+</code> operator (addition)AlReport all possible matches.CmAll capture states, including those corresponding to both \xe2\x80\xa6CbThe <code>&amp;&amp;</code> operator (logical and)Ab<code>&amp;</code>EgOne arm of a <code>match</code> expression: <code>0..=10 =&gt; { return true; }</code>.ChAn abstract syntax tree for a single regular expression.A`<code>box</code>lA cfg value.CaA cfg expression, like <code>cfg(windows)</code>.ClUse a DFA. Warning: DFAs typically use a large amount of \xe2\x80\xa6BeA DFA implementation of Aho-Corasick.CmA hybrid NFA/DFA (also called a \xe2\x80\x9clazy DFA\xe2\x80\x9d) for regex \xe2\x80\xa6CkA one-pass DFA for executing a subset of anchored regex \xe2\x80\xa6BfThe <code>/</code> operator (division)AnThe \xe2\x80\x9cany character\xe2\x80\x9d class.CjA type describing the different flavors of <code>.</code>.n<code>.</code>A`<code>dyn</code>ClMatch the end of text. Specifically, this matches at the \xe2\x80\xa60ChPseudo-token used for peeking the end of a parse stream.CkThe error was caused by prematurely reaching the end of \xe2\x80\xa6AhContains the error value0BkAn error that visiting an AST might return.BkAn error that visiting an HIR might return.2222A`<code>for</code>ChA high-level intermediate representation (HIR) for a \xe2\x80\xa6AgInternal compiler errorDhRepresents a wrapped value convertable to and from a <code>usize</code>.ChAn integer literal: <code>1</code> or <code>1u16</code>.CiA <code>let</code> guard: <code>let Some(x) = opt</code>.A`<code>let</code>CfA Rust literal such as a string or integer or boolean.EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.BbA literal pattern: <code>0</code>.CjA trait encapsulating the operations required of a logger.AbThe maximum value.0AhThe maximum index value.11BaMaximum value the index can take.0C`The input contained a map that was not expected.0BaRepresents a JSON key/value type.0EaA module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.A`<code>mod</code>BlThe <code>*</code> operator (multiplication)A`<code>mut</code>C`A contiguous NFA implementation of Aho-Corasick.CcA noncontiguous NFA implementation of Aho-Corasick.CeA byte oriented Thompson non-deterministic finite \xe2\x80\xa6BhThe <code>-</code> operator for negationCaThe <code>!</code> operator for logical inversionn<code>!</code>BbA level lower than all log levels.CeFinds all occurrences of a single byte in a haystack.00oOne byte range.CkA pattern in a local binding, function signature, match \xe2\x80\xa6DaA raw pointer type: <code>*const T</code> or <code>*mut T</code>.A`<code>pub</code>A`<code>raw</code>A`<code>ref</code>BeThe <code>%</code> operator (modulus)AgA sequence of literals.CeThe input contained a sequence that was not expected.0BoThe <code>&lt;&lt;</code> operator (shift left)Ae<code>&lt;&lt;</code>C`The <code>&gt;&gt;</code> operator (shift right)Ae<code>&gt;&gt;</code>EiThe input contained a <code>&amp;str</code> or <code>String</code> that was not expected.0CeA UTF-8 string literal: <code>&quot;foo&quot;</code>.BiThe <code>-</code> operator (subtraction)CaTab, spelled <code>\\t</code> (<code>\\x09</code>).CmAn escaped tab character (usually escaped as <code>\\t</code>)BeA try-expression: <code>expr?</code>.A`<code>try</code>CaFinds all occurrences of two bytes in a haystack.00AkTwo successive byte ranges.GgPrefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. \xe2\x80\xa6CnA use declaration: <code>use std::collections::HashMap</code>.A`<code>use</code>CnRun an anchored search. This means that a match must begin \xe2\x80\xa60BkAdd the given pattern to this set to match.BkContains architecture independent routines.CfCreate new storage for the offsets of all matching \xe2\x80\xa6CcDefines an abstract syntax for regular expressions.oThe actual ast.BhThe regular expression under repetition.BeThe regular expression in this group.CeProvides direct access to a DFA implementation of \xe2\x80\xa6CjA module for building and searching with deterministic \xe2\x80\xa6CkToggle whether a fully compiled DFA should be available \xe2\x80\xa6BiTypes and routines specific to lazy DFAs.CgSet the lazy DFA compilation configuration for this \xe2\x80\xa6DcWhether or not this target is documented by <code>cargo doc</code>.AlCreate a \xe2\x80\x9cdot\xe2\x80\x9d AST item.BmReturns an HIR expression for <code>.</code>.BgReturn the end position of this search.BaThe ending position of the match.BfThe end offset of the span, exclusive.CjReturns the byte offset of the end of the match in the \xe2\x80\xa60321BdThe inclusive end of the byte range.AdThe end byte offset.AfThe end of this range.AmReturn the end of this range.0AnEnd of byte range (inclusive).C`Check for remaining elements after passing a \xe2\x80\xa60AnFinish serializing a sequence.AkFinish serializing a tuple.BbFinish serializing a tuple struct.BcFinish serializing a tuple variant.AiFinish serializing a map.AlFinish serializing a struct.BdFinish serializing a struct variant.776543210DfThe <code>Deserializer::end</code> method should be called after a \xe2\x80\xa6CcThe environment variables to add to the compilationCnChecks whether the cursor is currently pointing at the end \xe2\x80\xa6BnCreate a new \xe2\x80\x9cend of input\xe2\x80\x9d haystack unit.ChCreate a unit that represents the \xe2\x80\x9cend of input\xe2\x80\x9d \xe2\x80\xa6BiThe underlying cache error that occurred.CjExtension traits to provide parsing methods on foreign \xe2\x80\xa6BlFormat this value as an identifier fragment.BfShows the original regular expression.000CjFormat an explanation of what data was being expected. \xe2\x80\xa60BaDisplay a JSON value as a string.ClGet a ref to the item at the provided index, or None for \xe2\x80\xa60CmReturns an immutable reference to a value for a given key \xe2\x80\xa60CiReturns an immutable reference to a value for a given \xe2\x80\xa6DgReturns the <code>Match</code> associated with the capture group at \xe2\x80\xa6CiReturns the start and end byte offsets of the capture \xe2\x80\xa610DiReturn the underlying <code>usize</code> value. The returned value is \xe2\x80\xa6BmGet the equivalence class for the given byte.CcReturn a reference to the lazily initialized value.CkGet a value from the pool. The caller is guaranteed to haveDkReturns the cached value for the given key, or runs <code>compute</code>\xe2\x80\xa6000CjReturns a reference to the value corresponding to the key.BkGets a reference to the value in the entry.CnIndex into a JSON array or map. A string index can be used \xe2\x80\xa6BgBorrows the element at the given index.CdThe match semantics for the automaton that was used.0CnDefines a high-level intermediate (HIR) representation for \xe2\x80\xa6BhUtilities for HIR-level data structures.0BjReturns a reference to this entry\xe2\x80\x99s key.CgGets a reference to the key that would be used when \xe2\x80\xa6BiGets a reference to the key in the entry.B`Returns the length of this span.BaReturns the length of this match.CeReturns the number of patterns added to this builder.B`Returns the length of our slice.CdReturns the number of elements in <code>self</code>.BmReturns the number of elements in the domain.BiReturns the number of entries in the map.BjReturns the number of ones in the bit-set.CmReturns the total number of capture groups. This includes \xe2\x80\xa6BlReturns the length, in bytes, of this match.ClReturns the total number of capture groups (even if they \xe2\x80\xa6C`Returns the total number of regexes in this set.CmThe total number of regexes in the set that created these \xe2\x80\xa643210<;CkReturns the total number of pattern identifiers in this \xe2\x80\xa6CnReturns the total number of look-around assertions in this \xe2\x80\xa6CcThe length of the haystack that exceeded the limit.BoReturns the number of codepoints in this range.BjReturns the number of bytes in this range.3CjReturns the number of literals in this sequence if the \xe2\x80\xa6BlReturns the length of this literal in bytes.CcReturns the number of byte ranges in this sequence.AaSize of the cache000BjReturns the number of elements in the map.BkThe number of elements stored in the vectorAmReturns the number of fields.CnReturns the number of syntax tree nodes in this punctuated \xe2\x80\xa6BkReturns the length of this buffer in bytes.BdThe left hand side of the operation.AmA lightweight logging facade.AmLogs the <code>Record</code>.AkThe standard logging macro.BfMap-like collections for indexed keys.BeA map of String to serde_json::Value.BgReturns the most verbose logging level.BnReturns the most verbose logging level filter.BdThe maximum range of the repetition.BdThe minimum range of the repetition.BhUtilities for MIR-level data structures.0CiCreate a new error object from a printable error message.CiCreate a new Aho-Corasick automaton using the default \xe2\x80\xa6ChCreate a new builder for configuring an Aho-Corasick \xe2\x80\xa6BmCreate a new error value with the given kind.CnCreate a new value that is represented by a \xe2\x80\x9csmall index.\xe2\x80\xa6CiCreate a new search configuration for the given haystack.C`Create a new match from a pattern ID and a span.CaCreate a new default configuration. A default \xe2\x80\xa6CiCreate a new builder for constructing a multi-pattern \xe2\x80\xa6CnA convenience function for constructing a searcher from an \xe2\x80\xa65CcCreate a new Aho-Corasick DFA using the default \xe2\x80\xa6CiCreate a new builder for configuring an Aho-Corasick DFA.CnCreate a new Aho-Corasick contiguous NFA using the default \xe2\x80\xa6:CiCreate a new Aho-Corasick noncontiguous NFA using the \xe2\x80\xa6;BnCreate a new error object from any error type.CoDirectly wraps a string slice as a <code>Utf8Path</code> slice.BlAllocates an empty <code>Utf8PathBuf</code>.DcCreate <code>Version</code> with an empty pre-release and build \xe2\x80\xa6DjCreates a default <code>cargo metadata</code> command, which will look \xe2\x80\xa6CgConstruct a new IdxSlice by wrapping an existing slice.AiConstruct a new IndexVec.AhCreates an empty matrix.AkCreates an empty index set.AhCreates an empty domain,C`Constructs an empty map within the given domain.DkConstructs a new map with an initial element of <code>mk_elem(i)</code> \xe2\x80\xa6CnThis is a cheap operation; you don\xe2\x80\x99t need to worry about \xe2\x80\xa6BiConstruct new <code>RecordBuilder</code>.BmConstruct a new <code>MetadataBuilder</code>.CjReturns an iterator over all occurrences of the needle \xe2\x80\xa600ClCreate a new searcher that finds occurrences of the byte \xe2\x80\xa6CkCreate a new searcher that finds occurrences of the two \xe2\x80\xa6CmCreate a new searcher that finds occurrences of the three \xe2\x80\xa6CjCreate a new prefilter that reports possible locations \xe2\x80\xa6CcCreate a new pair of offsets from the given needle.CjCreate a new Rabin-Karp forward searcher for the given \xe2\x80\xa6CjCreate a new Rabin-Karp reverse searcher for the given \xe2\x80\xa6DkCreate a new Shift-Or forward searcher for the given <code>needle</code>\xe2\x80\xa6CiCreate a searcher that finds occurrences of the given \xe2\x80\xa60CnCreate a new searcher that finds occurrences of the needle \xe2\x80\xa600CiCreate a new pair searcher. The searcher returned can \xe2\x80\xa61110BiCreate a new finder for the given needle.CaCreate a new reverse finder for the given needle.CbCreate a new finder builder with default settings.DdReturns an empty <code>TokenStream</code> containing no token trees.DgCreates a new <code>Group</code> with the given delimiter and token \xe2\x80\xa6DfCreates a new <code>Punct</code> from the given character and spacing.EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6CmCreate a new builder with a default configuration for the \xe2\x80\xa60CkCompiles a regular expression. Once compiled, it can be \xe2\x80\xa6CjCreate a new regex set with the given regular expressions.2210CiCreate a new search configuration for the given haystack.ChCreate a new half match from a pattern ID and a byte \xe2\x80\xa6C`Create a new match from a pattern ID and a span.CjCreate a new set of pattern identifiers with the given \xe2\x80\xa6BmCreate a new error value with the given kind.DfBuilds a <code>Regex</code> from a single pattern string using the \xe2\x80\xa6CiCreates a new <code>Cache</code> for use with this regex.CkCreate a new configuration object for a <code>Regex</code>.ClCreates a new builder for configuring and constructing a \xe2\x80\xa6CfParse the given regular expression using a default \xe2\x80\xa6BjCreate a new cache for the given lazy DFA.CdReturn a new default lazy DFA builder configuration.CbCreate a new lazy DFA builder with the default \xe2\x80\xa6ChParse the given regular expression using the default \xe2\x80\xa6CdCreate a new cache for the given <code>Regex</code>.CjCreate a new regex builder with the default configuration.C`Return a new default one-pass DFA configuration.CfCreate a new one-pass DFA builder with the default \xe2\x80\xa64BmCreate a new <code>onepass::DFA</code> cache.BnCreate a new builder for hand-assembling NFAs.CiReturn a new default Thompson NFA compiler configuration.ChCreate a new NFA builder with its default configuration.<BjReturn a new default PikeVM configuration.CkCreate a new PikeVM builder with its default configuration.:BgCreate a new <code>PikeVM</code> cache.BiReturn a new default regex configuration.ClCreate a new BoundedBacktracker builder with its default \xe2\x80\xa6=CcCreate a new <code>BoundedBacktracker</code> cache.CgCreate a new fallible non-overlapping matches iterator.BiCreate a new default start configuration.BjReturn a new default syntax configuration.CkCreate a new <code>NonMaxUsize</code> from the given value.AiCreate a new small index.CnCreate a new value that is represented by a \xe2\x80\x9csmall index.\xe2\x80\xa60CiCreates a new group info from a sequence of patterns, \xe2\x80\xa6CiCreates a new default matcher for look-around assertions.CkCreate a new prefilter from a sequence of needles and a \xe2\x80\xa6DjCreate a new <code>Lazy</code> value that is initialized via the given \xe2\x80\xa6CjCreate a new pool. The given closure is used to create \xe2\x80\xa6CiCreate a new parser builder with a default configuration.CaCreate a new parser with a default configuration.BkCreate a new span with the given positions.CaCreate a new position with the given information.32AeCreate a new printer.BmCreate a new class from a sequence of ranges.CkCreate a new Unicode scalar value range for a character \xe2\x80\xa61BnCreate a new byte range for a character class.CdCreate a new extractor with a default configuration.ClReturns a sequence of exact literals from the given byte \xe2\x80\xa65CbCreate a new translator builder with a default \xe2\x80\xa6ChCreate a new translator using the default configuration.ChCreate a new iterator over UTF-8 byte ranges for the \xe2\x80\xa6CeConstruct this index type from a usize. Alias for \xe2\x80\xa6CiInitialize a compilation from this string of source code.10CnThis is a cheap operation; you don\xe2\x80\x99t need to worry about \xe2\x80\xa6DcCreate <code>Version</code> with an empty pre-release and build \xe2\x80\xa6CiCreate a new borrowed deserializer from the given string.BoCreate a new deserializer from the given bytes.CnCreate a new borrowed deserializer from the given borrowed \xe2\x80\xa6CiConstruct a new <code>MapDeserializer&lt;I, E&gt;</code>.CiConstruct a new <code>SeqDeserializer&lt;I, E&gt;</code>.ClConstruct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.ClConstruct a new <code>MapAccessDeserializer&lt;A&gt;</code>.CmConstruct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.76543210AfMakes a new empty Map.CgCreate a JSON deserializer from one of the possible \xe2\x80\xa6CnCreate a JSON stream deserializer from one of the possible \xe2\x80\xa6CkCreate a JSON input source to read from a std::io input \xe2\x80\xa6CiCreate a JSON input source to read from a slice of bytes.CgCreate a JSON input source to read from a UTF-8 string.AnCreates a new JSON serializer.CiConstruct a pretty printer formatter that defaults to \xe2\x80\xa6AiConstruct an empty vectorDcUsually the <code>ParseStream::error</code> method will be used \xe2\x80\xa6EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6fPanicsCcInterpret a Syn literal from a proc-macro2 literal.DiCreates a <code>TokenBuffer</code> containing all the tokens from the \xe2\x80\xa6BeCreates an empty punctuated sequence.CnCreates a punctuated pair out of a syntax tree node and an \xe2\x80\xa6DhCreate a new writer that satisfies <code>WriteColor</code> but drops \xe2\x80\xa6DdCreate a new writer that satisfies <code>WriteColor</code> using \xe2\x80\xa6CjCreate a new color specification that has no colors or \xe2\x80\xa6ClCreates a new <code>Options</code> with the specified width.AlCreate a new word separator.BeDefault penalties for monospace text.AjCreate new wrap algorithm.CdProvides direct access to NFA implementations of \xe2\x80\xa6CnProvides non-deterministic finite automata (NFA) and regex \xe2\x80\xa6BePackage ID (opaque unique identifier)ChTruncates <code>self</code> to <code>self.parent</code>.D`Pops the last item off, returning it. See <code>Vec::pop</code>.ClRemove an item from the end of the vector and return it, \xe2\x80\xa6CkRemoves the last punctuated pair from this sequence, or \xe2\x80\xa6CgNon-empty pre-release is only allowed if patch is Some.CcConsumes this guard and puts it back into the pool.A`Our wrapped Vec.AfGet the wrapped index.0CaUnsafe functions that mirror the API of the C \xe2\x80\xa6AdThe required versionBeThe right hand side of the operation.CjReturns an iterator over the elements in <code>row</code>.CkExecutes the plugin with a set of compiler and plugin args.0Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsBoGeneric data structure serialization framework.0BoSerialize a Rust data structure into JSON data.BmSet the equivalence class for the given byte.CkThe expression inside the capturing group, which may be \xe2\x80\xa6AnThe expression being repeated.5CjReturns the URI of the hyperlink if one is attached to \xe2\x80\xa6BhVector-like collection for indexed keys.DgSatisfies <code>WriteColor</code> using standard ANSI escape sequences.BjCommand-line arguments passed by the user.0CmAutomatically detect whether a heuristic prefilter should \xe2\x80\xa6Aa<code>auto</code>CjTry to use colors, but don\xe2\x80\x99t force the issue. If the \xe2\x80\xa6CbBell, spelled <code>\\a</code> (<code>\\x07</code>).CjThe input contained a boolean value that was not expected.0AjRepresents a JSON boolean.0CkA boolean literal: <code>true</code> or <code>false</code>.BnSupport both anchored and unanchored searches.BjA byte literal: <code>b&#39;f&#39;</code>.n<code>R</code>De<em>Carriage return and line feed</em> \xe2\x80\x93 a line ending sequence \xe2\x80\xa6DaA nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.CfA function call expression: <code>invoke(a, b)</code>.BkA cast expression: <code>foo as f64</code>.CnThe input contained a <code>char</code> that was not expected.0BnA character literal: <code>&#39;a&#39;</code>.ClThe error was caused by input data that was semantically \xe2\x80\xa6CfThe storage of a struct, enum or union data structure.C`Prefix <code>C:</code> for the given disk drive.Aa<code>else</code>CbThe input contained an enum that was not expected.0DeAn enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.Aa<code>enum</code>o<code>==</code>AbA Rust expression.BoExpression, with or without trailing semicolon.CnA state that cannot be transitioned out of. This is useful \xe2\x80\xa6BdA complete file of Rust source code.nA single flag.AiA single flag in a group.AlFour successive byte ranges.oThe entire span0CiA glob import in a <code>use</code> item: <code>*</code>.dHelpCfAn impl block providing trait or associated items: \xe2\x80\xa6Aa<code>impl</code>AeThe \xe2\x80\x9cinfo\xe2\x80\x9d level.BoCorresponds to the <code>Info</code> log level.CiAn item, which can be a single literal, range, nested \xe2\x80\xa6BcThe type of the array\xe2\x80\x99s elements.CiThings that can appear directly inside of a module or \xe2\x80\xa6AcAn item definition.FdAn iterator over the <code>Utf8Component</code>s of a <code>Utf8Path</code>, as <code>str</code> \xe2\x80\xa6BoAn iterator over a serde_json::Map\xe2\x80\x99s entries.CmAn iterator over borrowed values of type <code>&amp;T</code>.CjDeserialization error (structure of json did not match \xe2\x80\xa6BlAn iterator over a serde_json::Map\xe2\x80\x99s keys.EaA lazily initialized value that implements <code>Deref</code> for <code>T</code>.BoA structured list within an attribute, like \xe2\x80\xa6CkA conditional epsilon transition satisfied via some sort ofAhA look-around assertion.CdThe high-level intermediate representation for a \xe2\x80\xa6CkA look-around assertion. A look-around match always has \xe2\x80\xa6BnConditionless loop: <code>loop { ... }</code>.Aa<code>loop</code>CeThe literal is written as an escape because it is \xe2\x80\xa6BoContent of a compile-time structured attribute.Aa<code>move</code>BjA named cfg value, like <code>unix</code>.ChA named platform, like <code>x86_64-apple-darwin</code>.DhAn identifier imported by a <code>use</code> item: <code>HashMap</code>.AnA node in a dependencies graphCeNo match was found. Since false negatives are not \xe2\x80\xa6BkNever used a prefilter in substring search.Ah<code>\xe2\x88\x85 ... \xe2\x88\x85</code>CeNo capture states are compiled into the Thompson NFA.gNo span0dNoteAmRepresents a JSON null value.0o<code>|=</code>o<code>||</code>CkA pair of byte offsets into a needle to use as a predicate.DdA single syntax tree node of type <code>T</code> followed by its \xe2\x80\xa6CbA path at which a named item is exported (e.g. \xe2\x80\xa6DjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6DkA path prefix of imports in a <code>use</code> item: <code>std::...</code>.DhA path pattern like <code>Color::Red</code>, optionally qualified with aDjA path like <code>std::slice::Iter</code>, optionally qualified with a \xe2\x80\xa6CfTypes that can be parsed by looking at just one token.DaA perl character class, e.g., <code>\\d</code> or <code>\\W</code>.n<code>+</code>DdA thread safe pool that works in an <code>alloc</code>-only context.Aa<code>priv</code>CdThe search saw a \xe2\x80\x9cquit\xe2\x80\x9d byte at which it was \xe2\x80\xa6CjAn error that occurs when a starting configuration\xe2\x80\x99s \xe2\x80\xa6ClTrait used by the deserializer for iterating over input. \xe2\x80\xa6CnThe dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.CgThe number of bytes that a single value uses in memory.0CiThe number of bytes that a single small index uses in \xe2\x80\xa611DjA <code>VersionReq</code> with no constraint on the version numbers it \xe2\x80\xa60n<code>;</code>BjA representation of a range in a haystack.CgA region of source code, along with macro expansion \xe2\x80\xa6CfA representation of a span reported by a regex engine.ClSpan represents the position information of a single AST \xe2\x80\xa6n<code>*</code>BkA statement, usually ending in a semicolon.C`The possible types that a Rust value could have.CmA generic type parameter: <code>T: Into&lt;String&gt;</code>.CdA type predicate in a <code>where</code> clause: \xe2\x80\xa6AaA type alias: \xe2\x80\xa6DgA foreign type in an <code>extern</code> block: <code>type void</code>.CdAn associated type within the definition of a trait.BhAn associated type within an impl block.CaA type ascription pattern: <code>foo: f64</code>.A`A type argument.AnA particular type is returned.Aa<code>type</code>DaA unary operator: <code>*</code>, <code>!</code>, <code>-</code>.CkUnit represents a single unit of haystack for DFA based \xe2\x80\xa6DaThe input contained a unit <code>()</code> that was not expected.0CfUnit struct or unit variant such as <code>None</code>.ChOutput of <code>cargo metadata</code> was not valid utf8AeThe \xe2\x80\x9cwarn\xe2\x80\x9d level.BoCorresponds to the <code>Warn</code> log level.CaA pattern that matches any value: <code>_</code>.A`Word characters.Ai<code>[0-9A-Za-z_]</code>CeA piece of wrappable text, including any trailing \xe2\x80\xa6oThe zero value.0AeThe zero index value.11AhZero value of the index.0CmAn unconditional epsilon transition to another NFA state. \xe2\x80\xa60C`Create a buffer that uses ANSI escape sequences.ChA module with low-level architecture dependent routines.AaThe message body.AfSet <code>args</code>.CdParses and returns the CLI arguments for the plugin.BnWhatever CLI arguments you want to pass along.10BbThe alternate regular expressions.BfThe concatenation regular expressions.DkAlgorithms for the <code>x86_64</code> target using 256-bit vectors via \xe2\x80\xa6AkReturn early with an error.CmThe underlying representation this set is exposed to make \xe2\x80\xa60B`Utilities for <code>Body</code>.0B`Get whether this is bold or not.AmThe quit byte that was found.CiThe \xe2\x80\x9cquit\xe2\x80\x9d byte that was observed that caused the \xe2\x80\xa6DjIf this literal was written as a <code>\\x</code> hex escape, then this \xe2\x80\xa6CjCalls the given parser function to parse a syntax tree \xe2\x80\xa6ChVarious <code>--cfg</code> flags to pass to the compilerA`The code itself.BmThe associated error code for this diagnosticCdBuilding blocks for advanced wrapping functionality.CaThis configures CRLF mode for the entire pattern.CbThis configures CRLF mode for all of the patterns.10CfEnable or disable the \xe2\x80\x9cCRLF mode\xe2\x80\x9d flag by default.C`Enable or disable the CRLF mode flag by default.DaEnable or disable the CRLF mode flag (<code>R</code>) by default.BbDeclaration of this type, e.g. \xe2\x80\xa6BdDependencies in a structured format.EeRuns configured <code>cargo metadata</code> and returns parsed <code>Metadata</code>.ClReturns an HIR expression that can never match anything. \xe2\x80\xa6BgThe source file containing the message.AeSet <code>file</code>BeFill a line of text at a given width.ClReturns the location of the first match according to the \xe2\x80\xa6CnReturn the first occurrence of any of the patterns in this \xe2\x80\xa6CjReturn the first occurrence of the needle in the given \xe2\x80\xa6CmReturn the first occurrence of one of the needle bytes in \xe2\x80\xa60EgReturn the first occurrence of the <code>needle</code> in the <code>haystack</code> \xe2\x80\xa6CfReturn the first occurrence of the needle given to \xe2\x80\xa6DdReturns the first occurrence of <code>needle</code> in the given \xe2\x80\xa6333CaExecute a search using SSE2 vectors and routines.444CaExecute a search using AVX2 vectors and routines.CjReturns the index of the first occurrence of the given \xe2\x80\xa6ClReturns the index of the first occurrence of this needle \xe2\x80\xa6CnThis routine searches for the first match of this regex in \xe2\x80\xa60CjExecutes a leftmost search and returns the first match \xe2\x80\xa6CnReturns the start and end offset of the leftmost match. If \xe2\x80\xa6CmExecutes an anchored leftmost forward search, and returns \xe2\x80\xa6DjExecutes a leftmost forward search and returns a <code>Match</code> if \xe2\x80\xa6DkRun this prefilter on <code>haystack[span.start..end]</code> and return \xe2\x80\xa6CmForks a parse stream so that parsing tokens out of either \xe2\x80\xa6AoReturns the argument unchanged.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BlCreates a new domain from an indexed vector.111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111CjConvert <code>Number</code> to <code>Value::Number</code>.ChConvert a <code>Vec</code> to <code>Value::Array</code>.3CdConvert <code>()</code> to <code>Value::Null</code>.BmConvert a slice to <code>Value::Array</code>.CmConvert map (with string keys) to <code>Value::Object</code>.CkConvert copy-on-write string to <code>Value::String</code>.CcConvert string slice to <code>Value::String</code>.CjConvert <code>String</code> to <code>Value::String</code>.BlConvert boolean to <code>Value::Bool</code>.DjConvert 64-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6DjConvert 32-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<BlConstruct a <code>Word</code> from a string.========BlCreate a full set of look-around assertions.0BfRe-allocate to set the capacity to \xe2\x80\xa6BaLogs a message at the info level.BaCalls <code>U::from(self)</codelProduces an iterator over the path\xe2\x80\x99s components viewed \xe2\x80\xa6BmGet a iterator over reverences to our values.DhReturns an iterator over all the objects contained in <code>self</code>.CdReturns an iterator over all elements of the domain.ChReturns an iterator over immutable references to the \xe2\x80\xa6CkReturns an iterator over all the indices of ones in the \xe2\x80\xa6ClReturns an iterator over all elements in the tree (in no \xe2\x80\xa6BmIterate through all supported logging levels.BoIterate through all supported filtering levels.CjReturns an iterator over all occurrences of the needle \xe2\x80\xa6CjReturns an iterator over all occurrences of one of the \xe2\x80\xa60111111CnReturns an iterator over all capture groups. This includes \xe2\x80\xa6ClReturns an iterator over the indices of the regexes that \xe2\x80\xa610ClReturns an iterator over all pattern identifiers in this \xe2\x80\xa6CiGeneric helpers for iteration of matches from a regex \xe2\x80\xa6ClReturns an iterator over all equivalence classes in this \xe2\x80\xa6CmReturns an iterator of possible spans for every capturing \xe2\x80\xa6CnReturns an iterator over all of the look-around assertions \xe2\x80\xa6CaReturn an iterator over all ranges in this class.01BmGets an iterator over the entries of the map.DfGet an iterator over the borrowed <code>Field</code> items in this \xe2\x80\xa6CjReturns an iterator over borrowed syntax tree nodes of \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsEoCreates an owned <code>Utf8PathBuf</code> with <code>path</code> adjoined to <code>self</code>.DhCreate a new span encompassing <code>self</code> and <code>other</code>.CcReturns a span covering the entire delimited group.CoConstruct a <code>serde_json::Value</code> from a JSON literal.BjGets an iterator over the keys of the map.CjReturns the kind of the Aho-Corasick automaton used by \xe2\x80\xa6BoChoose the type of underlying automaton to use.CaReturns a reference to the underlying error kind.AoReturns the parsed prefix data.AnThe kind of dependency this isAgThe kind of dependency.ClKind of target (\xe2\x80\x9cbin\xe2\x80\x9d, \xe2\x80\x9cexample\xe2\x80\x9d, \xe2\x80\x9ctest\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa64AnReturn the type of this error.AiThe kind of this literal.AgThe kind of Perl class.AhThe kind of ASCII class.AjThe kind of Unicode class.CkThe type of this set. A set is either a normal union of \xe2\x80\xa6AoThe type of this set operation.ClThe assertion kind, e.g., <code>\\b</code> or <code>^</code>.AfThe type of operation.AgThe kind of this group.AfThe kind of this item.:BoReturns a reference to the underlying HIR kind.DhSet the kind of literal sequence to extract from an <code>Hir</code> \xe2\x80\xa6CaReturn the the last element, if we are not empty.BjBorrows the last element in this sequence.CgA lazily initialized value for safe sharing between \xe2\x80\xa6DhConsumes and leaks the <code>Utf8PathBuf</code>, returning a mutable \xe2\x80\xa6B`The line containing the message.AeSet <code>line</code>BlThe line number, starting at <code>1</code>.CfOne-based line number at which the error was detected.AkLock the underlying writer.CkThe look-around assertion that must be satisfied before \xe2\x80\xa6CkTypes and routines for working with look-around assertions.BoCreates a look-around assertion HIR expression.BaCreates a new <code>Place</code>.0CnProvides a regex matcher that composes several other regex \xe2\x80\xa6CmFacility for interpreting structured content inside of an \xe2\x80\xa6BlThe anchored mode given that is unsupported.0DbLike <code>new</code>, but panics if the given value is not valid.CjCreate a new match from a pattern ID and a byte offset \xe2\x80\xa61ChCreate a new half match from a pattern ID and a byte \xe2\x80\xa61DkLike <code>SmallIndex::new</code>, but panics if the given index is not \xe2\x80\xa633BlName as given in the <code>Cargo.toml</code>CiThe name of the dependency\xe2\x80\x99s library target. If the \xe2\x80\xa61DkName as given in the <code>Cargo.toml</code> or generated from the file \xe2\x80\xa6DjReturns the <code>Match</code> associated with the capture group named \xe2\x80\xa60AaThe capture name.BgThe property name (which may be empty).1BfThe name of the capture, if it exists.B`Name of this type in TypeScript.DiCreates a <code>TokenBuffer</code> containing all the tokens from the \xe2\x80\xa6BmThe identifier of the state to transition to.CnThe state to transition to if the look-around assertion is \xe2\x80\xa6BlThe state to transition to, unconditionally.CkReturns a span for the opening punctuation of the group \xe2\x80\xa6BfCreates a new hyperlink specification.CiReturns the pair of offsets (into the needle) used to \xe2\x80\xa600CeReturns the full path to the file that this entry \xe2\x80\xa6CaThe file system path for a local path dependency.CjReturns the path that identifies the interpretation of \xe2\x80\xa6CgReturns the path that begins this structured meta item.FdThe <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>CmReturns whether the next token in the parse stream is one \xe2\x80\xa6ClLooks at the next token in the parse stream to determine \xe2\x80\xa60AjA thread safe memory pool.CaExtends <code>self</code> with <code>path</code>.CiPush a new item onto the vector, and return it\xe2\x80\x99s index.AnPush a new item in this union.AlAdd a new range to this set.0BkPush a literal to the end of this sequence.AmAppend an item to the vector.CnAppends a syntax tree node onto the end of this punctuated \xe2\x80\xa6DjCreate a new \xe2\x80\x9cquit\xe2\x80\x9d error. The given <code>byte</code> corresponds \xe2\x80\xa6BfAdd a \xe2\x80\x9cquit\xe2\x80\x9d byte to the lazy DFA.ClReturn the heuristic frequency rank of the given byte. A \xe2\x80\xa6BiReturns the \xe2\x80\x9crank\xe2\x80\x9d of the given byte.BkThe underlying string representation of id.CaThe underlying string representation of a source.BjThe crate for which the metadata was read.C`Returns an iterator over all rows in the matrix.C`Returns the size (in bytes) of the spanned text.000BoReturns the number of items the array can hold.CnThe slot index for this capture. Every capturing group has \xe2\x80\xa6ChReturns the starting slot corresponding to the given \xe2\x80\xa6CkForwards to the slice\xe2\x80\x99s <code>sort</code> implementation.CbSorts this sequence of literals lexicographically.AmSet the span for this search.B`Returns the span for this match.Clspan where macro was applied to generate this code; note \xe2\x80\xa6DfReturns the span of this tree, delegating to the <code>span</code> \xe2\x80\xa6CmReturns the span for the delimiters of this token stream, \xe2\x80\xa6C`Returns the span for this punctuation character.BlReturns the span of this <code>Ident</code>.BkReturns the span encompassing this literal.CeSpan associated with this <code>IdentFragment</code>.087BmReturn the span at which this error occurred.BmReturn the span of this abstract syntax tree.BlReturn the span of this character class set.CaReturn the span of this character class set item.DhThe span of this comment, including the beginning <code>#</code> and \xe2\x80\xa6AmThe span of this alternation.AoThe span of this concatenation.AiThe span of this literal.AgThe span of this class.000AgThe span of this range.DjThe span of the items in this operation. e.g., the <code>a-z0-9</code> \xe2\x80\xa6DdThe span of this operation. e.g., the <code>a-z--[h-p]</code> in \xe2\x80\xa6AkThe span of this assertion.AkThe span of this operation.EhThe span of this operator. This includes things like <code>+</code>, <code>*?</code> \xe2\x80\xa6AgThe span of this group.AnThe span of this capture name.CcThe span of these flags, including the grouping \xe2\x80\xa6B`The span of this group of flags.AfThe span of this item.BmReturn the span at which this error occurred.BaThe source location of the error.BlReturns the span of this <code>Ident</code>.EhReturns the <code>Span</code> of the current token, or <code>Span::call_site()</code>\xe2\x80\xa6DkReturns the <code>Span</code> of the next token in the parse stream, or \xe2\x80\xa6DfReturns a <code>Span</code> covering the complete contents of this \xe2\x80\xa6DkAlgorithms for the <code>x86_64</code> target using 128-bit vectors via \xe2\x80\xa6CgSpeculatively parses tokens from this parse stream, \xe2\x80\xa6CiReturns a slice of this kind\xe2\x80\x99s sub-expressions, if any.BaSwaps two elements in our vector.EeTakes the value out of the <code>Value</code>, leaving a <code>Null</code> in its \xe2\x80\xa6AnWhether this profile is a testCfWhether or not this target is tested by default by \xe2\x80\xa6BjThe line of code associated with the errorCjSource text from the start of line_start to the end of \xe2\x80\xa6CbWhether to enable UTF-8 mode during search or not.CnWhen disabled, the builder will permit the construction of \xe2\x80\xa6CjConverts ranges of Unicode scalar values to equivalent \xe2\x80\xa6CnWhen disabled, translation will permit the construction of \xe2\x80\xa60CmA collection of modules that provide APIs that are useful \xe2\x80\xa6BaLogs a message at the warn level.CmTypes and routines that support the wire format of finite \xe2\x80\xa6FeReturns a new repetition with the same <code>min</code>, <code>max</code> and <code>greedy</code> \xe2\x80\xa6mWord content.BeWrap a line of text at a given width.BdWrap words according to line widths.ChGenerally provide a line break opportunity after the \xe2\x80\xa6Ah<code>[0-9A-Za-z]</code>FgE.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.Ae<code>[A-Za-z]</code>Ac<code>&amp;=</code>AhRepresents a JSON array.0DhTypes that can be used as the backing store for a <code>SmallVec</code>.CfA slice literal expression: <code>[a, b, c, d]</code>.BmA fixed size array type: <code>[T; n]</code>.Ah<code>[\\x00-\\x7F]</code>EaAn ASCII character class, e.g., <code>[:alnum:]</code> or <code>[:punct:]</code>.BkAn async block: <code>async { ... }</code>.Ab<code>async</code>BlAn await expression: <code>fut.await</code>.Ab<code>await</code>DgA binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.BhThe <code>|</code> operator (bitwise or)Ab<code>[ \\t]</code>BjA braced block containing Rust statements.BfA blocked scope: <code>{ ... }</code>.Ad<code>{ ... }</code>Ao<code>{</code>\xe2\x80\xa6<code>}</code>DiA <code>break</code>, with an optional label to break and an optional \xe2\x80\xa6Ab<code>break</code>B`Those used in build scripts onlyCkA set of characters represented by arbitrary bytes (one \xe2\x80\xa6EkThe input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not \xe2\x80\xa60CjRepresents mutable scratch space used by regex engines \xe2\x80\xa6ClAn error that occurs when cache inefficiency has dropped \xe2\x80\xa6BlA cache represents a partially computed DFA.CgA cache represents a partially computed forward and \xe2\x80\xa6DeA cache represents mutable state that a one-pass <code>DFA</code> \xe2\x80\xa6DhA cache represents mutable state that a <code>PikeVM</code> requires \xe2\x80\xa6DkA cache represents mutable state that a <code>BoundedBacktracker</code> \xe2\x80\xa6AmCache for non-copyable types.0n<code>^</code>BeIterator of a chain of source errors.CmThe high-level intermediate representation of a character \xe2\x80\xa6CdA single character class that matches any of the \xe2\x80\xa6Al<code>[\\x00-\\x1F\\x7F]</code>CkA property set to a specific value using a colon, e.g., \xe2\x80\xa6n<code>:</code>C`The set of available colors for the terminal \xe2\x80\xa6n<code>,</code>BjA const block: <code>const { ... }</code>.ClA const generic parameter: <code>const LENGTH: usize</code>.CeA constant item: <code>const MAX: u16 = 65535</code>.ChAn associated constant within the definition of a trait.BlAn associated constant within an impl block.4BnA const expression. Must be inside of a block.Ab<code>const</code>Ab<code>crate</code>AfThe \xe2\x80\x9cdebug\xe2\x80\x9d level.C`Corresponds to the <code>Debug</code> log level.CcA dense representation of a state with multiple \xe2\x80\xa6BmThe <code>*</code> operator for dereferencingA`Decimal numbers.Ab<code>[0-9]</code>DgAn iterator that removes the items from a <code>SmallVec</code> and \xe2\x80\xa6BgAn empty regex that matches everything.nAn empty item.CkThe empty regular expression, which matches everything, \xe2\x80\xa6CmMatch the end of a line or the end of text. Specifically, \xe2\x80\xa60ClA view into a single entry in a map, which may either be \xe2\x80\xa6DhA property set to a specific value, e.g., <code>\\p{scx=Katakana}</code>.DcThe <code>Error</code> type, a wrapper around a dynamic error type.DhError returned when executing/parsing <code>cargo metadata</code> fails.eErrorAfThe \xe2\x80\x9cerror\xe2\x80\x9d level.C`Corresponds to the <code>Error</code> log level.ChAn error that occurred during parsing or compiling a \xe2\x80\xa6CnThis error type encompasses any error that can be returned \xe2\x80\xa6CmAn error that occurred while parsing a regular expression \xe2\x80\xa6EdAn error that can occur while translating an <code>Ast</code> to a <code>Hir</code>.CfError parsing a SemVer version or version requirement.ClThe error type that can be returned if some error occurs \xe2\x80\xa6CkThe error type when some error occurs during serialization.EcThe <code>Error</code> trait allows <code>Deserialize</code> implementations to \xe2\x80\xa622222ClA minimal representation of all possible errors that can \xe2\x80\xa6DgTrait used by <code>Serialize</code> implementations to generically \xe2\x80\xa63DfMust match the <code>Error</code> type of our <code>Serializer</code>.000000543555552140000000CkThis type represents all possible errors that can occur \xe2\x80\xa60CkError returned when a Syn parser cannot parse the input \xe2\x80\xa60BdA field of a struct or enum variant.DhAccess of a named struct field (<code>obj.k</code>) or unnamed tuple \xe2\x80\xa6Ab<code>final</code>AaA group of flags.BiA set of flags, e.g., <code>(?is)</code>.ClA floating point number, f32 or f64, that can be written \xe2\x80\xa6EfThe input contained a floating point <code>f32</code> or <code>f64</code> that was \xe2\x80\xa60DfA floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.DeAn argument in a function signature: the <code>n: usize</code> in \xe2\x80\xa6Ab<code>[!-~]</code>AiA delimited token stream.C`A token stream surrounded by bracket delimiters.AmA grouped regular expression.0CdAn expression contained within invisible delimiters.DmA braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.BmA type contained within invisible delimiters.AdNone-delimited groupChA word of Rust code, which may be a keyword or legal \xe2\x80\xa6nAn identifier.1CjA type parameter or const generic parameter in precise \xe2\x80\xa6BhA pattern that binds a new variable: \xe2\x80\xa6B`The index for <code>Self</code>.DgA type that can be used to index into a <code>serde_json::Value</code>.BkThe index of an unnamed tuple struct field.CoA square bracketed indexing expression: <code>vector[2]</code>.DgThe inferred value of a const generic argument, denoted <code>_</code>.CnIndication that a type should be inferred by the compiler: \xe2\x80\xa6CdThe configuration and the haystack to use for an \xe2\x80\xa6ClThe parameters for a regex search including the haystack \xe2\x80\xa6H`E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.CcThe total number of values that can be represented.0CkThe total number of values that can be represented as a \xe2\x80\xa611EaA lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.CnAn enum representing the available verbosity levels of the \xe2\x80\xa6DhA local <code>let</code> binding: <code>let x: u64 = s.parse()?;</code>.AfA local (let) binding.Ab<code>[a-z]</code>CoA macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.DgA macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.D`A macro invocation, which includes <code>macro_rules!</code> \xe2\x80\xa6BjA macro invocation within an extern block.CdA macro invocation within the definition of a trait.BhA macro invocation within an impl block.AlA macro in pattern position.BiA macro invocation in statement position.AmA macro in the type position.Ab<code>macro</code>CkA representation of a match reported by an Aho-Corasick \xe2\x80\xa6CgA confirmed match was found. Callers do not need to \xe2\x80\xa6CcRepresents a single match of a regex in a haystack.0CgA representation of a match reported by a regex engine.CkA match state. There is at least one such occurrence of \xe2\x80\xa6EjA <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.Ab<code>match</code>n<code>-</code>CmA binary property, general category or script. The string \xe2\x80\xa6CfNamed fields of a struct or struct variant such as \xe2\x80\xa6BgA named field like <code>self.x</code>.AoThe never type: <code>!</code>.AbNever emit colors.DcThe literal is written as an octal escape, e.g., <code>\\141</code>.ChA message stating what uncategorized thing the input \xe2\x80\xa60E`An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.CaA parenthesized expression: <code>(a + b)</code>.BnA parenthesized pattern: <code>(A | B)</code>.CbA parenthesized type equivalent to the inner type.Ao<code>(</code>\xe2\x80\xa6<code>)</code>ClAn error that occurred while translating concrete syntax \xe2\x80\xa6CjParsing interface implemented by all types that can be \xe2\x80\xa6CaA pattern that matches any one of a set of cases.n<code>#</code>Ab<code>[ -~]</code>FmA <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.EfA single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).Al<code>[!-/:-@\\[-</code>{-~]`DeThe explicit Self type in a qualified path: the <code>T</code> in \xe2\x80\xa6AbName of a function0BdAn escaped quote <code>&quot;</code>AmA range between two literals.Ab<code>{m,n}</code>BhRange of code possibly inside a function0GaA range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.BdA range pattern: <code>1..=2</code>.CgA compiled regular expression for searching Unicode \xe2\x80\xa60CiA regex matcher that works by composing several other \xe2\x80\xa6ChA regular expression that uses hybrid NFA/DFAs (also \xe2\x80\xa6Af<code>&lt;&lt;=</code>Af<code>&gt;&gt;=</code>n<code>/</code>DkA dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>\xe2\x80\xa6CaA dynamically sized slice type: <code>[T]</code>.EfSpace, spelled <code>\\ </code> (<code>\\x20</code>). Note that this can only appear \xe2\x80\xa6kWhitespace.Aj<code>[\\t\\n\\v\\f\\r ]</code>AkEnable indirect line breaksCkAn iterator over all substrings delimited by a regex match.0CkYields all substrings delimited by a regular expression \xe2\x80\xa6CnMatch the beginning of text. Specifically, this matches at \xe2\x80\xa60AbA state in an NFA.Ab<code>super</code>CcFinds all occurrences of three bytes in a haystack.00AmThree successive byte ranges.n<code>~</code>CjA type-macro that expands to the name of the Rust type \xe2\x80\xa6CdMarker trait for types that represent single tokens.AfThe \xe2\x80\x9ctrace\xe2\x80\x9d level.C`Corresponds to the <code>Trace</code> log level.ClA trait definition: <code>pub trait Iterator { ... }</code>.Ab<code>trait</code>BnA tuple expression: <code>(a, b, c, d)</code>.BeA tuple pattern: <code>(a, b)</code>.BmA tuple type: <code>(A, B, C, String)</code>.BdExtension trait for <code>Ty</code>.0CaA function argument accepted by pattern and type.CdA unary operation: <code>!x</code>, <code>*x</code>.CdAn alternation such that there exists an epsilon \xe2\x80\xa6AaA union of items.DfA union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.Ab<code>union</code>Ab<code>[A-Z]</code>BeThe type produced by using this seed.BcThe value produced by this visitor.10B`Represents any valid JSON value.0Ab<code>where</code>BnA while loop: <code>while expr { ... }</code>.Ab<code>while</code>BlA yield expression: <code>yield expr</code>.Ab<code>yield</code>ClIf this unit is not an \xe2\x80\x9cend of input\xe2\x80\x9d sentinel, then \xe2\x80\xa6CnCreates a cursor referencing the first token in the buffer \xe2\x80\xa6CkBuild an Aho-Corasick automaton using the configuration \xe2\x80\xa6ClBuild a searcher from the patterns added to this builder \xe2\x80\xa6ChBuild an Aho-Corasick DFA from the given iterator of \xe2\x80\xa6CgBuild an Aho-Corasick contiguous NFA from the given \xe2\x80\xa6CjBuild an Aho-Corasick noncontiguous NFA from the given \xe2\x80\xa6CcInvoke the builder and return a <code>Record</code>BgReturns a <code>Metadata</code> object.DiCompiles the pattern given to <code>RegexBuilder::new</code> with the \xe2\x80\xa6DiCompiles the patterns given to <code>RegexSetBuilder::new</code> with \xe2\x80\xa610CiBuilds a <code>Regex</code> from a single pattern string.BhBuild a lazy DFA from the given pattern.BeBuild a regex from the given pattern.BlBuild a one-pass DFA from the given pattern.CiAssemble a <code>NFA</code> from the states added so far.CiCompile the given regular expression pattern into an NFA.CcBuild a <code>PikeVM</code> from the given pattern.CoBuild a <code>BoundedBacktracker</code> from the given pattern.CiBuild a parser from this configuration with the given \xe2\x80\xa60CcBuild a translator using the current configuration.CnConstructs the post-dominators by computing the dominators \xe2\x80\xa60CmSearch for regex matches in <code>&amp;[u8]</code> haystacks.CnAccepts a replacement byte string and interpolates capture \xe2\x80\xa6CjA possibly non-sized field containing a sequence of bytes.BkData structures for memoizing computations.0AiProvides case inflectionsCjAn iterator of the chain of source errors contained by \xe2\x80\xa6CnReturns an error if and only if Unicode word boundary data \xe2\x80\xa6CkCreates a class HIR expression. The class may either be \xe2\x80\xa6DnInvokes <code>clear</code> on the underlying instance of <code>PathBuf</code>.BnClear our vector. See <code>Vec::clear</code>.BmRemoves every element from <code>self</code>.AcSets all bits to 0.CdClear this set such that it contains no pattern IDs.AcClear this builder.BgClear this <code>Captures</code> value.BdClears the map, removing all values.BdRemove all elements from the vector.CmClears the sequence of all values and punctuation, making \xe2\x80\xa6AcClears this buffer.CeClears this color specification so that it has no \xe2\x80\xa6CkReturns a span for the closing punctuation of the group \xe2\x80\xa6CeCreates a hyperlink specification representing no \xe2\x80\xa6CjCounts all occurrences of this byte in the given haystack.00BbLogs a message at the debug level.CgForwards to the <code>Vec::dedup</code> implementation.CjDeduplicate adjacent equivalent literals in this sequence.BgRemoves consecutive duplicate elements.CfReturn an iterator that removes the items from the \xe2\x80\xa6CjCreates a draining iterator that removes the specified \xe2\x80\xa6DaConstructs a new bit-set with a domain of size <code>size</code>.AmCreate a new empty regex set.0ClCreates a new set of equivalence classes where all bytes \xe2\x80\xa6CfCreate new storage for only tracking which pattern \xe2\x80\xa6BmThis creates an empty <code>GroupInfo</code>.BnCreate an empty set of look-around assertions.AoCreate an \xe2\x80\x9cempty\xe2\x80\x9d AST item.B`Returns an empty HIR expression.BbCreate a new class with no ranges.03AjReturns an empty sequence.ChCreates a cursor referencing a static empty TokenStream.CgReturns a mutable entry into the map for the given key.CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6BbLogs a message at the error level.CbWhen serializing or deserializing JSON goes wrong.ClReport that the attribute\xe2\x80\x99s content did not conform to \xe2\x80\xa6CjTriggers an error at the current position of the parse \xe2\x80\xa600CgReturns a new exact literal containing the bytes given.CnItems which do not have a correspondence to any API in the \xe2\x80\xa6CbReturn the the first element, if we are not empty.BkBorrows the first element in this sequence.AnCreate a \xe2\x80\x9cflags\xe2\x80\x9d AST item.CiIf this group is non-capturing, then this returns the \xe2\x80\xa6AmThe actual sequence of flags.AmFlushes any buffered records.BnIf true, then the files were already generatedAnCreate a \xe2\x80\x9cgroup\xe2\x80\x9d AST item.DdIf the cursor is pointing at a <code>Group</code> with the given \xe2\x80\xa6AdName of the variant.AjName of the field, if any.DfThe <code>example</code> in <code>macro_rules! example { ... }</code>.DgIf the cursor is pointing at a <code>Ident</code>, returns it along \xe2\x80\xa6DnGet the underlying index. This is equivalent to <code>Into&lt;usize&gt;</code>CcGets the index corresponding to <code>value</code>.AbThe capture index.BaThe capture index of the capture.BaGet the wrapped index as a usize.CiExtracts the value of this index as a <code>usize</code>.10EeIndex into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> orAhReturn a matrix element.BeReturns a reference to the inner set.DeReturns the current <code>Input</code> associated with this iterator.000CmReturns the current <code>Input</code> used by this iterator.0CmReturns the current <code>Input</code> used by this searcher.11CnReturns true if this error was caused by a failure to read \xe2\x80\xa6BnThe sequence of items that make up this union.CmA sequence of flag items. Each item is either a flag or a \xe2\x80\xa6CeLabel that should be placed at this location (if any)Ci\xe2\x80\x9cerror: internal compiler error\xe2\x80\x9d, \xe2\x80\x9cerror\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa6BcThe verbosity level of the message.BaSet <code>Metadata::level</code>.1AnSetter for <code>level</code>.CgThe name of a native library the package is linking to.CcFunctions for generating and checking Monge arrays.AmReturn the number of columns.AmNodes in a dependencies graphAjReturn the number of rows.CbThis configures octal mode for the entire pattern.CcThis configures octal mode for all of the patterns.10BgWhether to support octal syntax or not.00CmReturns an iterator over the contents of this sequence as \xe2\x80\xa6DbCreate <code>Version</code> by parsing from string representation.DeCreate <code>VersionReq</code> by parsing from string representation.E`Parses <code>cargo metadata</code> output.  <code>data</code> must have been \xe2\x80\xa6CkA convenience routine for parsing a pattern into an HIR \xe2\x80\xa6CkA convenience routine for parsing a regex using default \xe2\x80\xa6CkParse the regular expression into a high level intermediateCaThis module provides a regular expression parser.CjParse the regular expression into an abstract syntax tree.76CnParsing interface for parsing a token stream into a syntax \xe2\x80\xa6CkParse tokens of source code into the chosen syntax tree \xe2\x80\xa6ClParse a syntax tree node from the content of this string \xe2\x80\xa6DcParses a syntax tree node of type <code>T</code>, advancing the \xe2\x80\xa62BkAdd a transition from one state to another.BgPatch is only allowed if minor is Some.CcLooks at the second-next token in the parse stream.CbLooks at the third-next token in the parse stream.BaUtilities for <code>Place</code>.0DgThis module provides a regular expression printer for <code>Ast</code>.DiPrint the given <code>Ast</code> to the given writer. The writer must \xe2\x80\xa6DgThis module provides a regular expression printer for <code>Hir</code>.1BhPrints the contents of the given buffer.DgIf the cursor is pointing at a <code>Punct</code>, returns it along \xe2\x80\xa6CmBorrows the punctuation from this punctuated pair, unless \xe2\x80\xa6ClQueries the interval tree for all elements overlapping a \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsA`The whole point.CmLike <code>Input::span</code>, but accepts any range instead.AmReturns this span as a range.BbReturns the match span as a range.BgThe range associated with this element.CgReturns the range over the starting and ending byte \xe2\x80\xa60432CjThis crate provides routines for searching strings for \xe2\x80\xa6D`Returns the <code>Regex</code> value that created this iterator.0BeA lazy DFA backed <code>Regex</code>.CkReset this cache such that it can be used for searching \xe2\x80\xa600000CfReset the current color settings to their original \xe2\x80\xa6BdGet whether reset is enabled or not.CiReturn the last occurrence of the needle in the given \xe2\x80\xa6ClReturn the last occurrence of one of the needle bytes in \xe2\x80\xa60EfReturn the last occurrence of the <code>needle</code> in the <code>haystack</code> \xe2\x80\xa6EhReturns the last occurrence of <code>needle</code> in the given <code>haystack</code>\xe2\x80\xa6222222CiReturns the index of the last occurrence of the given \xe2\x80\xa6CnReturns the index of the last occurrence of this needle in \xe2\x80\xa6BjThe Rust compiler\xe2\x80\x99s <code>BitSet</code>.eSerdeCjReturns the underlying slots, where each slot stores a \xe2\x80\xa6CmReturns the starting and ending slot corresponding to the \xe2\x80\xa6CnThis crate implements various functions that help speed up \xe2\x80\xa6CmA list of source code spans this diagnostic is associated \xe2\x80\xa6CkCreate a new span using the given position as the start \xe2\x80\xa6DgWraps the underlying slice\xe2\x80\x99s <code>split</code> iterator with one \xe2\x80\xa6ClReturns an iterator of substrings of the haystack given, \xe2\x80\xa60CgReturns an iterator of spans of the haystack given, \xe2\x80\xa6BiReturn the start position of this search.BcThe starting position of the match.BhThe start offset of the span, inclusive.CkCreate a new overlapping state that begins at the start \xe2\x80\xa6ClReturns the byte offset of the start of the match in the \xe2\x80\xa604321BfThe inclusive start of the byte range.CaProvides helpers for dealing with start state \xe2\x80\xa6CkThis method is called before beginning traversal of the \xe2\x80\xa60AfThe start byte offset.AhThe start of this range.22AoReturn the start of this range.0B`Start of byte range (inclusive).ClReturn a reference to the NFA state corresponding to the \xe2\x80\xa6AeStatements in a blockAmA simple timer for profiling.0CgTokens representing Rust punctuation, keywords, and \xe2\x80\xa6BbLogs a message at the trace level.BkThe transition from this state to the next.dwhy?CmAdds each element of <code>other</code> to <code>self</code>.CkAdds all ones from <code>other</code> to <code>self</code>.CkReturns a new set that is the union of this and the one \xe2\x80\xa6AiBuild a set from a union.CnUnion this character class with the given character class, \xe2\x80\xa6CjUnion this byte class with the given byte class, in place.CkReturns a new set of properties that corresponds to the \xe2\x80\xa64CeUnions the <code>other</code> sequence into this one.DkStrips the raw marker <code>r#</code>, if any, from the beginning of an \xe2\x80\xa6CdGets the object corresponding to <code>index</code>.BgThe value associated with this element.BhThe property value (which may be empty).ClBuilding blocks for deserializing basic values using the \xe2\x80\xa60CkThe Value enum, a loosely typed way of representing any \xe2\x80\xa6CnUsed when parsing <code>key = &quot;value&quot;</code> syntax.CgBorrows the syntax tree node from this punctuated pair.DhExecutes an implementation of <code>Visitor</code> in constant stack \xe2\x80\xa60BoSet <code>self.width</code> to the given value.CgThe width in columns at which the text will be wrapped.CeDisplayed width of word represented by this fragment.ClReturns the character\xe2\x80\x99s displayed width in columns, or \xe2\x80\xa6CbReturns the string\xe2\x80\x99s displayed width in columns.CmTry very hard to emit colors. This includes emitting ANSI \xe2\x80\xa6Ag<code>&amp;&amp;</code>CeAn assignment expression: <code>a = compute()</code>.ChA bare function type: <code>fn(usize) -&gt; bool</code>.Ac<code>become</code>CiGenerally provide a line break opportunity before the \xe2\x80\xa6ClA binary operation: <code>a + b</code>, <code>a += b</code>.BmThe <code>&amp;</code> operator (bitwise and)BfInterface for bit-set implementations.BiThe <code>^</code> operator (bitwise xor)ChA correctly sized stack allocation for the formatted \xe2\x80\xa6CgSafe API for formatting floating point numbers to text.AmWrite colored text to memory.BcInclusive at the beginning and end.BgA concatenation of regular expressions.0AoA concatenation of expressions.CiThe configuration for a packed multiple pattern searcher.CoAn object describing the configuration of a <code>Regex</code>.BoThe configuration used for building a lazy DFA.CcThe configuration used for building a one-pass DFA.CcThe configuration used for a Thompson NFA compiler.CjThe configuration used for building a <code>PikeVM</code>.CjThe configuration used for building a bounded backtracker.CmThe configuration used to determine a DFA\xe2\x80\x99s start state \xe2\x80\xa6CkA common set of configuration options that apply to the \xe2\x80\xa6CkA reference to the current directory, i.e., <code>.</code>.CjA cheaply copyable cursor into a <code>TokenBuffer</code>.BhFind words using a custom word separatorBkUse a custom function as the word splitter.AiCustom wrapping function.n<code>$</code>o<code>..</code>DkAn <code>if</code> expression with an optional <code>else</code> block: \xe2\x80\xa6Ac<code>extern</code>BmData stored within an enum variant or struct.CeAn architecture independent \xe2\x80\x9cpacked pair\xe2\x80\x9d finder.CeA forward substring searcher using the Rabin-Karp \xe2\x80\xa6CjA forward substring searcher using the Shift-Or algorithm.CfA forward substring searcher that uses the Two-Way \xe2\x80\xa6CgA \xe2\x80\x9cpacked pair\xe2\x80\x9d finder that uses 128-bit vector \xe2\x80\xa6CgA \xe2\x80\x9cpacked pair\xe2\x80\x9d finder that uses 256-bit vector \xe2\x80\xa6CiA single substring searcher fixed to a particular needle.CmThe search, based on heuristics, determined that it would \xe2\x80\xa6CiProvide a line break opportunity after the character, \xe2\x80\xa6CiJSON input source that reads from a std::io input stream.AmA free-standing function: \xe2\x80\xa6Ab<code>&lt;-</code>ChAn integer literal: <code>1</code> or <code>1u16</code>.CeA UTF-8 string literal: <code>&quot;foo&quot;</code>.C`Minimal matrix trait for two-dimensional arrays.CgA struct or tuple struct field accessed in a struct \xe2\x80\xa6CjAn iterator over all occurrences of a single byte in a \xe2\x80\xa6BcThe output did not contain any jsonE`A normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.AeThe \xe2\x80\x98normal\xe2\x80\x99 kindCiRepresents a JSON number, whether integer or floating \xe2\x80\xa6000AiRepresents a JSON object.0DjThe input contained an <code>Option&lt;T&gt;</code> that was not expected.0AnThe result of visiting an AST.AnThe result of visiting an HIR.BmA convenience parser for regular expressions.AlA regular expression parser.CnParser that can parse Rust tokens into a particular syntax \xe2\x80\xa6EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.CgA virtual machine for executing regex searches with \xe2\x80\xa6o<code>+=</code>DlA Windows path prefix, e.g., <code>C:</code> or <code>\\\\server\\share</code>.BkExtracts only prefix literals from a regex.BmDo not break in front of a numeric expressionBlA public visibility level: <code>pub</code>.Ab<code>-&gt;</code>BcThe \xe2\x80\x9cpayload\xe2\x80\x9d of a log message.CnAn renamed identifier imported by a <code>use</code> item: \xe2\x80\xa6CkAn array literal constructed from one repeated element: \xe2\x80\xa6Bc<code>Result&lt;T, Error&gt;</code>CiCustom result type for <code>cargo_metadata::Error</code>EcAlias for a <code>Result</code> with the error type <code>serde_json::Error</code>.0AkThe result of a Syn parser.0CmA <code>return</code>, with an optional value to be returned.Ac<code>return</code>G`The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> \xe2\x80\xa60BjThe source of a package such as crates.io.CkA state with possibly many transitions represented in a \xe2\x80\xa6DkAn iterator over at most <code>N</code> substrings delimited by a regex \xe2\x80\xa60DiYields at most <code>N</code> spans delimited by a regular expression \xe2\x80\xa6o<code>*=</code>CiA static item: <code>static BIKE: Shed = Shed(42)</code>.EcA foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.Ac<code>static</code>AiRepresents a JSON string.0CoA struct literal expression: <code>Point { x: 1, y: 1 }</code>.CoA struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.DfA struct or struct variant pattern: <code>Variant { x, y, .. }</code>.Ac<code>struct</code>BkExtracts only suffix literals from a regex.BoPrevent a break before, and allow a break afteroA syntax error.ClThe error was caused by input that was not syntactically \xe2\x80\xa6CjA single target (lib, bin, example, \xe2\x80\xa6) provided by a \xe2\x80\xa6EcUsed to convert objects into a <code>Span</code> with access to <code>TyCtxt</code>0Ac<code>typeof</code>BmAn unsafe block: <code>unsafe { ... }</code>.Ac<code>unsafe</code>oA vacant Entry.BnAn iterator over a serde_json::Map\xe2\x80\x99s values.Ah<code>[0-9A-Fa-f]</code>CdA zero-sized field indicating the alignment we want.Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsCkConstruct an ad-hoc error from a string or existing non-\xe2\x80\xa6FcMoves all the elements of <code>other</code> into <code>Self</code>, leaving <code>other</code> \xe2\x80\xa6CaFor use by <code>ToTokens</code> implementations.CjMoves all elements from other into self, leaving other \xe2\x80\xa6FcMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> \xe2\x80\xa6ChIf this unit is an \xe2\x80\x9cend of input\xe2\x80\x9d sentinel, then \xe2\x80\xa6DkIf the <code>Value</code> is a number, represent it as f64 if possible. \xe2\x80\xa6CjRepresents the number as f64 if possible. Returns None \xe2\x80\xa6DjReturn the internal value as a <code>i32</code>. This is guaranteed to \xe2\x80\xa60DkReturn the internal <code>u32</code> of this small index represented as \xe2\x80\xa6BeReturn the internal value as a i32\xe2\x80\xa60DcIf the <code>Value</code> is an integer, represent it as i64 if \xe2\x80\xa6DdIf the <code>Number</code> is an integer, represent it as i64 if \xe2\x80\xa6CbReturns an unsafe pointer to the slice\xe2\x80\x99s buffer.BoReturns a raw pointer to the vector\xe2\x80\x99s buffer.BnConvert this finder into its borrowed variant.0BmYields the underlying <code>str</code> slice.BoExtracts the underlying <code>str</code> slice.CcReturns the <code>str</code> slice for this prefix.ClReturns the string representation of the <code>Level</code>.DbReturns the string representation of the <code>LevelFilter</code>.BjReturns the original string of this regex.CcReturns the substring of the haystack that matched.1DfIf the <code>Value</code> is a String, returns the associated str. \xe2\x80\xa6DgTurns this <code>LineEnding</code> value into its ASCII representation.DjReturn the internal value as a <code>u32</code>. This is guaranteed to \xe2\x80\xa60DeReturn the internal <code>u32</code> of this small index. This is \xe2\x80\xa611CgExtracts the value of this index as a <code>u32</code>.0DjReturn the internal value as a <code>u64</code>. This is guaranteed to \xe2\x80\xa60DhReturn this small index as a <code>u64</code>. This is guaranteed to \xe2\x80\xa611DcIf the <code>Value</code> is an integer, represent it as u64 if \xe2\x80\xa6DdIf the <code>Number</code> is an integer, represent it as u64 if \xe2\x80\xa6DfEquivalent to accessing our <code>raw</code> field, but as a function.CjReturns immutable access to the underlying indexed vector.BiAbstraction over bit-set implementations.CoTrait and lifetime bounds (<code>Clone+Send+&#39;static</code>)CkParse a set of curly braces and expose their content to \xe2\x80\xa6ChA stably addressed token buffer supporting efficient \xe2\x80\xa6DeCreates a new <code>Buffer</code> with the current color preferences.DjReturns a type that implements <code>Replacer</code>, but that borrows \xe2\x80\xa6000AdUTF-8 encoded paths.ClA macro for defining <code>#[cfg]</code> if-else statements.CdThe main macro provided by this crate. See crate \xe2\x80\xa6DhWraps the underlying slice\xe2\x80\x99s <code>chunks</code> iterator with one \xe2\x80\xa6CjThe approximate column number, starting at <code>1</code>.ChOne-based column number at which the error was detected.AoCreate a \xe2\x80\x9cconcat\xe2\x80\x9d AST item.CcReturns the concatenation of the given expressions.CnA convenience function for calling <code>Config::new()</code>.ChReturn a default configuration for a <code>Regex</code>.CfReturn a default configuration for a <code>DFA</code>.BiReturn a default configuration for a DFA.CgReturn a default configuration for an <code>NFA</code>.CiReturn a default configuration for a <code>PikeVM</code>.DeReturn a default configuration for a <code>BoundedBacktracker</code>.CiProvides low-level access to the token representation \xe2\x80\xa6CkRaised when there is general error when deserializing a \xe2\x80\xa6DjUsed when a <code>Serialize</code> implementation encounters any error \xe2\x80\xa610CaRemoves common leading whitespace from each line.ClThe number of digits that must be used with this literal \xe2\x80\xa6BbGet whether this is dimmed or not.CkReturn early with an error if a condition is not satisfied.EfSimilar to <code>IndexedDomain::index</code>, except it adds <code>value</code> to \xe2\x80\xa6DgEscapes all regular expression meta characters in <code>pattern</code>.CeProvides convenience routines for escaping raw bytes.DdEscapes all regular expression meta characters in <code>text</code>.DcReturns <code>true</code> if the path points at an existing entity.EaExpands all instances of <code>$ref</code> in <code>replacement</code> to the \xe2\x80\xa60ClManually export this type to a file. The output file can \xe2\x80\xa6ChAdd the given iterator of patterns to this set to match.BkExtend this literal with the literal given.AnContent stored in the variant.BkWhich crates you want to run the plugin on.0EgAll implementors of <code>Visitor</code> must provide a <code>finish</code> method, \xe2\x80\xa60ClPrint an integer into this buffer and return a reference \xe2\x80\xa6CmPrint a floating point number into this buffer and return \xe2\x80\xa6CcWhether this operation was applied greedily or not.ChWhether this repetition operator is greedy or not. A \xe2\x80\xa6CaA module for building and searching with lazy \xe2\x80\xa6CkToggle whether the hybrid NFA/DFA (also known as the \xe2\x80\x9c\xe2\x80\xa6BeIndent each line by the given prefix.BeReturns the first offset of the pair.BfReturns the second offset of the pair.CdFormats this types definition in TypeScript, e.g \xe2\x80\xa6Ac<code>(A, B)</code>DcInsert an item at <code>index</code>. See <code>Vec::insert</code>.DjInserts a pair <code>(row, col)</code> into the matrix, returning true \xe2\x80\xa6EoAdds the element <code>elt</code> to <code>self</code>, returning true if <code>self</code> \xe2\x80\xa6CoAdds <code>value</code> to the domain, returning its new index.CbInserts the key/value pair into <code>self</code>.0DjSets <code>index</code> to 1, returning true if <code>self</code> changed.CiInsert the given pattern identifier into this set and \xe2\x80\xa6ClReturn a new set that is equivalent to the original, but \xe2\x80\xa60BfInserts a key-value pair into the map.CmSets the value of the entry with the VacantEntry\xe2\x80\x99s key, \xe2\x80\xa6DgSets the value of the entry with the <code>OccupiedEntry</code>\xe2\x80\x99s \xe2\x80\xa6DkInsert an element at position <code>index</code>, shifting all elements \xe2\x80\xa6CbInserts an element at position <code>index</code>.BdFlips all bits in <code>self</code>.CjReturns true if this configuration indicates that some \xe2\x80\xa6DgReturns true if <code>self</code> is a projection of an argument local.0DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6EcReturns true when <code>Look::End</code> is satisfied <code>at</code> the given \xe2\x80\xa6ChReturns true if this error was caused by prematurely \xe2\x80\xa6ClReturns true when this unit represents an \xe2\x80\x9cend of input\xe2\x80\xa6DbReturns true if the <code>Value</code> is a number that can be \xe2\x80\xa6DbReturns true if the <code>Number</code> can be represented by f64.EfReturns true if the <code>Value</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6EgReturns true if the <code>Number</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6DiReturns true if the <code>Value</code> is an integer between zero and \xe2\x80\xa6DjReturns true if the <code>Number</code> is an integer between zero and \xe2\x80\xa6BbGet whether this is italic or not.BkThe layout that was passed to the allocatorBbReturns a reference to the logger.ChThis library provides heavily optimized routines for \xe2\x80\xa6CeSearch for the first occurrence of a byte in a slice.DkProvides architecture independent implementations of <code>memchr</code>\xe2\x80\xa6CiThis module defines 128-bit vector implementations of \xe2\x80\xa6CiThis module defines 256-bit vector implementations of \xe2\x80\xa6CmThis module provides forward and reverse substring search \xe2\x80\xa6CaReturns the needle that this finder searches for.0BeNegate this character class in place.AlNegate this character class.AgNegate this byte class.EhReturns a new span with <code>offset</code> added to this span\xe2\x80\x99s <code>start</code>\xe2\x80\xa6EhReturns a new match with <code>offset</code> added to its span\xe2\x80\x99s <code>start</code>\xe2\x80\xa61AjThe position of the match.BoThe offset at which the quit byte was observed.ClThe offset at which the search stopped. This corresponds \xe2\x80\xa6DiThe absolute offset of this position, starting at <code>0</code> from \xe2\x80\xa6n<code>C</code>CnProvides packed multiple substring search, principally for \xe2\x80\xa6DjReturns the <code>Path</code> without its final component, if there is \xe2\x80\xa6CkParse a proc-macro2 token stream into the chosen syntax \xe2\x80\xa60DjMake a parser that is usable with <code>parse_macro_input!</code> in a \xe2\x80\xa6CkAn NFA backed Pike VM for executing regex searches with \xe2\x80\xa6BcReturns the span of a prefix of \xe2\x80\xa6BkCreates a new JSON pretty print serializer.BhReturn the underlying ranges as a slice.0CiFull path to the readme file if one is present in the \xe2\x80\xa6BnReadme as given in the <code>Cargo.toml</code>CdRefill a paragraph of wrapped text with a new width.DdRemove the item at <code>index</code>. See <code>Vec::remove</code>.FdRemoves the element <code>elt</code> from <code>self</code>, returning true if <code>self</code> \xe2\x80\xa6DjSets <code>index</code> to 0, returning true if <code>self</code> changed.ClReturn a new set that is equivalent to the original, but \xe2\x80\xa60CnRemoves a key from the map, returning the value at the key \xe2\x80\xa6ClTakes the value of the entry out of the map, and returns \xe2\x80\xa6DjRemove and return the element at position <code>index</code>, shifting \xe2\x80\xa6CnIf the dependency is renamed, this is the new name for the \xe2\x80\xa6E`Resize ourselves in-place to <code>new_len</code>. See <code>Vec::resize</code>.DcResizes the vector so that its length is equal to <code>len</code>.ChForwards to the <code>Vec::retain</code> implementation.CeRetains only the elements specified by the predicate.0DhWraps the underlying slice\xe2\x80\x99s <code>rsplit</code> iterator with one \xe2\x80\xa6CnReturns the start and end offset of the leftmost match. If \xe2\x80\xa6CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsAiSet the background color.AiSet the foreground color.CiApply best effort heuristics to shrink the NFA at the \xe2\x80\xa6AhThe source of dependencyDfThe source of the package, e.g. crates.io or <code>None</code> for \xe2\x80\xa6CeReturns the lower-level source of this error, if any.00CkCreates a splicing iterator that replaces the specified \xe2\x80\xa6DhWraps the underlying slice\xe2\x80\x99s <code>splitn</code> iterator with one \xe2\x80\xa6DgReturns an iterator of at most <code>limit</code> substrings of the \xe2\x80\xa60DkReturns an iterator of at most <code>limit</code> spans of the haystack \xe2\x80\xa6BjReturns a slice of all states in this NFA.Cjstderr returned by the <code>cargo metadata</code> commandDaCreate a new <code>StandardStream</code> with the given color \xe2\x80\xa6DiCreate a new <code>BufferedStandardStream</code> with the given color \xe2\x80\xa6DiCreate a new <code>BufferWriter</code> that writes to stderr with the \xe2\x80\xa621DiCreate a new <code>BufferWriter</code> that writes to stdout with the \xe2\x80\xa6DhReturns the <code>TokenStream</code> of tokens that are delimited in \xe2\x80\xa6CnReturns the total stride for every state in this DFA. This \xe2\x80\xa6oString literal.CiAccepts a replacement string and interpolates capture \xe2\x80\xa6AkProvides suffix inflectionsCnConfigure the syntax options when parsing a pattern string \xe2\x80\xa6CgSet the syntax configuration for this builder using \xe2\x80\xa600000CfUtilities for dealing with the syntax of a regular \xe2\x80\xa6BjThe target this dependency is specific to.BiThe target this artifact was compiled forBcThe target this message is aimed atBgThe target platform for the dependency.BhThe name of the target of the directive.BaSet <code>Metadata::target</code>1AoSetter for <code>target</code>.CjCopies <code>self</code> into a new <code>IndexVec</code>.CiSerialize the given data structure as a JSON byte vector.0AkTrait this impl implements.CnAn implementation of the Two-Way substring search algorithm\xe2\x80\xa6BkUnpack a paragraph of already-wrapped text.DhConvert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.BoReturns an iterator over the values of the map.0BlGets an iterator over the values of the map.CeVector algorithms for the <code>x86_64</code> target.E`A hack to align a smaller type <code>B</code> with a bigger type <code>T</code>.BfA line is allowed to end at this spot.AgMatches any byte value.CgMatches the UTF-8 encoding of any Unicode scalar value.Aa<code>{m,}</code>BfExtension trait for <code>Body</code>.0Ab<code>{m,n}</code>Ad<code>[ ... ]</code>Ao<code>[</code>\xe2\x80\xa6<code>]</code>CgA builder for constructing a packed searcher from a \xe2\x80\xa6BnA builder for configuring an Aho-Corasick DFA.CiA builder for configuring an Aho-Corasick contiguous NFA.CkA builder for configuring an Aho-Corasick noncontiguous \xe2\x80\xa6D`A builder for configuring and constructing a <code>Regex</code>.CjA builder for constructing a lazy deterministic finite \xe2\x80\xa6C`A builder for a regex based on a hybrid NFA/DFA.AmA builder for a one-pass DFA.CbAn abstraction for building Thompson NFAs by hand.BdA builder for a <code>PikeVM</code>.BdA builder for a bounded backtracker.CeA byte string literal: <code>b&quot;foo&quot;</code>.CkThe toolchain channel that this version of rustc_plugin \xe2\x80\xa60BoAn empty state that records a capture location.CnThe high-level intermediate representation for a capturing \xe2\x80\xa6CcA capturing group, which contains a sub-expression.o<code>^=</code>AaA cfg expression.CkCharPos is designed to match VSCode\xe2\x80\x99s vscode.Position \xe2\x80\xa60C`A closure expression: <code>|a, b| a + b</code>.CjA comment from a regular expression with an associated \xe2\x80\xa6DaProvides the <code>context</code> method for <code>Result</code>.AmReturn type is not specified.Ad<code>default</code>AoAn element of an interval tree.CmMatch the end of a line or the end of text. Specifically, \xe2\x80\xa60n<code>$</code>o<code>\\z</code>CnError output of <code>cargo metadata</code> was not valid utf8A`<code>{m}</code>CiA <code>let</code> guard: <code>let Some(x) = opt</code>.EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.BeA try-expression: <code>expr?</code>.CaA for loop: <code>for pat in expr { ... }</code>.D`The underlying kind of an arbitrary <code>Hir</code> expression.DaAn integer that can be written into an <code>itoa::Buffer</code>.EaA module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.CnA use declaration: <code>use std::collections::HashMap</code>.CfA mutable iterator over a serde_json::Map\xe2\x80\x99s entries.DiAn iterator over mutably borrowed values of type <code>&amp;mut T</code>.DfA key/value cfg pair, like <code>target_os = &quot;linux&quot;</code>.CkA boolean literal: <code>true</code> or <code>false</code>.BjA byte literal: <code>b&#39;f&#39;</code>.DaA nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.BnA character literal: <code>&#39;a&#39;</code>.FeA literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), \xe2\x80\xa6GgA literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), \xe2\x80\xa6AlA single literal expression.CeA single character literal, which includes escape \xe2\x80\xa6AaA single literal.ChThe high-level intermediate representation of a literal.CbA literal string that matches exactly these bytes.CoA single literal extracted from an <code>Hir</code> expression.CdLookSet is a memory-efficient set of look-around \xe2\x80\xa6B`A set of look-around assertions.CkAn iterator over all non-overlapping matches in a haystack.0CmAn iterator over all occurrences of two possible bytes in \xe2\x80\xa6ClAn iterator over all occurrences of three possible bytes \xe2\x80\xa6oA cargo messageo<code>-=</code>D`Satisfies <code>WriteColor</code> but ignores all color options.AfA dependency in a nodeCjAn empty syntax tree node that consumes no tokens when \xe2\x80\xa6CcForm numeric expressions for line breaking purposesCjAn iterator over all occurrences of a single byte in a \xe2\x80\xa600CjHolds configuration options for wrapping and filling text.D`One or more crates described by a single <code>Cargo.toml</code>DjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6CnThe dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.CaA type ascription pattern: <code>foo: f64</code>.CaA pattern that matches any value: <code>_</code>.o<code>::</code>CmRun an anchored search for a specific pattern. This means \xe2\x80\xa6n<code>%</code>B`Pointer type for a given family.BkDo not break following a numeric expressionChA printer for a regular expression abstract syntax tree.CeA printer for a regular expression\xe2\x80\x99s high-level \xe2\x80\xa6EkAddress-of operation: <code>&amp;raw const place</code> or <code>&amp;raw mut place</code>.AbA dependency graphCnThe root directory component, appears after any prefix and \xe2\x80\xa6o<code>/=</code>BaAn escaped solidus <code>/</code>EfWhether a <code>Punct</code> is followed immediately by another <code>Punct</code> \xe2\x80\xa6BfExtension trait for <code>Span</code>.0DkA trait that can provide the <code>Span</code> of the complete contents \xe2\x80\xa6CdConverts MIR locations to source spans using HIR \xe2\x80\xa60ClThe literal is written as a specially recognized escape, \xe2\x80\xa6CkMatch the beginning of a line or the beginning of text. \xe2\x80\xa60BkThe identifier of a finite automaton state.CnThe identifier of a finite automaton state, represented by \xe2\x80\xa6CaJSON input source that reads from a UTF-8 string.CkImplicit conversions from elements to indexes. Commonly \xe2\x80\xa6CmAn iterator over all occurrences of two possible bytes in \xe2\x80\xa600DaA raw pointer type: <code>*const T</code> or <code>*mut T</code>.DlA Unicode character class, e.g., <code>\\pL</code> or <code>\\p{Greek}</code>.n<code>u</code>CiA set of characters represented by Unicode scalar values.ClHave as yet unknown line breaking behavior or unassigned \xe2\x80\xa6CmUnnamed fields of a tuple struct or tuple variant such as \xe2\x80\xa6BjAn unnamed field like <code>self.0</code>.Ad<code>unsized</code>CiA glob import in a <code>use</code> item: <code>*</code>.DhAn identifier imported by a <code>use</code> item: <code>HashMap</code>.DkA path prefix of imports in a <code>use</code> item: <code>std::...</code>.EgA suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> \xe2\x80\xa6DiThe <code>Visitor</code> that will be used to deserialize the content \xe2\x80\xa60A`An enum variant.Da<strong>SemVer version</strong> as defined by https://semver.org.0Ad<code>virtual</code>CiA trait for visiting an abstract syntax tree (AST) in \xe2\x80\xa6CiA trait for visiting the high-level IR (HIR) in depth \xe2\x80\xa6ChThis trait represents a visitor that walks through a \xe2\x80\xa60gWarningBbUtilities for <code>AdtDef</code>.0CiReturn the next match for an infallible search if one \xe2\x80\xa6CmAssume that we compiled only one function and return that \xe2\x80\xa60DhIf the <code>Value</code> is a Boolean, returns the associated bool. \xe2\x80\xa6DeReturns the value of this punctuation character as <code>char</code>.CkReturns a convenient single codepoint representation of \xe2\x80\xa60DeIf the <code>Number</code> is an integer, represent it as i128 if \xe2\x80\xa6DhIf the <code>Value</code> is a Null, returns (). Returns None otherwise.BiCoerces to a <code>Utf8Path</code> slice.CmExtracts a slice corresponding to the portion of the path \xe2\x80\xa60DjReturns the <code>Path</code> slice that was attempted to be converted \xe2\x80\xa6ClReturn the underlying representation of this look-around \xe2\x80\xa60DeIf the <code>Number</code> is an integer, represent it as u128 if \xe2\x80\xa6BlAuthors given in the <code>Cargo.toml</code>CiA convenience method for returning a new Aho-Corasick \xe2\x80\xa6ChCreate a packed builder from this configuration. The \xe2\x80\xa6CoA convenience function for calling <code>Builder::new()</code>.CmA convenience method for returning a new Aho-Corasick DFA \xe2\x80\xa633AfReturns a new builder.0CjReturn a builder for configuring the construction of a \xe2\x80\xa600CkReturn a builder for configuring the construction of a DFA.11BaCreates a capture HIR expression.CdAdd another error message to self such that when \xe2\x80\xa6CgThe comment text, starting with the first character \xe2\x80\xa6CgPerform the compilation, providing access to it\xe2\x80\x99s \xe2\x80\xa60BmWrap the error value with additional context.0BiCreates a default <code>fx</code> hasher.CmWhether or not this target has doc tests enabled, and the \xe2\x80\xa6BdDefault Rust edition for the packageAlRust edition for this targetCkDetermines if a log message with the specified metadata \xe2\x80\xa6CkThis is a convenience routine for extracting the substrings00ChExecute the extractor and return a sequence of literals.DjReturns the same as <code>Regex::find</code>, but starts the search at \xe2\x80\xa60CnReturn the first occurrence of any of the patterns in this \xe2\x80\xa6CnExecute a search in the haystack within the span given. If \xe2\x80\xa6CjReturn the underlying lazy DFA responsible for forward \xe2\x80\xa6BhReturn a reference to the forward cache.ChConstructs a new vector where each index maps to the \xe2\x80\xa6FeConstructs a <code>Dependency</code> from the given type <code>T</code>. If <code>T</code> is not \xe2\x80\xa6DcCreate a new \xe2\x80\x9cgave up\xe2\x80\x9d error. The given <code>offset</code> \xe2\x80\xa6CkReturns whether the DFA regex engine may be used, as set byClGet a mut ref to the item at the provided index, or None \xe2\x80\xa60CmReturns a mutable reference to a value for a given key if \xe2\x80\xa60CiReturns a mutable reference to a value for a given index.CmReturns a mutable reference to the value corresponding to \xe2\x80\xa6CcGets a mutable reference to the value in the entry.CnMutably index into a JSON array or map. A string index can \xe2\x80\xa6BoMutably borrows the element at the given index.BoReturn a mutable reference to the inner writer.0BjReturns a reference to the underlying NFA.000BgReturn a reference to the inner writer.0DjUtility for hashset literals. Same as <code>maplit::hashset</code> but \xe2\x80\xa60BfGet an interator over all our indices.DhReturns an iterator over all the indices contained in <code>self</code>.CcReturns an iterator over all indices of the domain.CiReturns a new inexact literal containing the bytes given.BcGet whether this is intense or not.CjReturn the string that couldn\xe2\x80\x99t be parsed as a valid \xe2\x80\xa6CiReturns true if and only of this unit is a byte value \xe2\x80\xa6ClReturns true if this error was caused by input data that \xe2\x80\xa6CeReturns true if the given ID represents a dead state.CnReturn true if and only if this represents a dead state. A \xe2\x80\xa6CjReturn true if this input has been exhausted, which in \xe2\x80\xa6CkReturn true if and only if this search can never return \xe2\x80\xa6CjImplementations might return true here if they believe \xe2\x80\xa6DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6CnReturn true if and only if this set has the maximum number \xe2\x80\xa6ChReturns true if this configuration indicates that no \xe2\x80\xa6CmReturns true if this color specification has no colors or \xe2\x80\xa6DcReturns true if the <code>Value</code> is a Null. Returns false \xe2\x80\xa6CnReturn true if and only if this represents a quit state. A \xe2\x80\xa6CbWhether UTF-8 mode is enabled for this NFA or not.CnReturns true if and only if this character class will only \xe2\x80\xa6CiReturn true if and only if the corresponding HIR will \xe2\x80\xa6EkCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.CeReturns the length of our slice as an <code>I</code>.BoLicense as given in the <code>Cargo.toml</code>B`Create a \xe2\x80\x9cliteral\xe2\x80\x9d AST item.CnProvides literal extraction from <code>Hir</code> expressions.BaCreates a literal HIR expression.ClIf this class consists of exactly one element (whether a \xe2\x80\xa6CiIf this class consists of exactly one codepoint, then \xe2\x80\xa6CnIf this class consists of exactly one byte, then return it \xe2\x80\xa6DhIf the cursor is pointing at a <code>Literal</code>, return it along \xe2\x80\xa6BmWhether the regex at the given index matched.0DiEvaluate whether the given <code>Version</code> satisfies the version \xe2\x80\xa6CmReturns whether the Platform matches the given target and \xe2\x80\xa6CfReturns the set of regexes that match in the given \xe2\x80\xa60CkThis follows the matching transition for a particular byte.0EgReturns true if the position <code>at</code> in <code>haystack</code> falls in this \xe2\x80\xa6CiCreate new storage for only the full match spans of a \xe2\x80\xa6EeReturns true when the position <code>at</code> in <code>haystack</code> satisfies \xe2\x80\xa6DkReturns true if and only if a prefix of <code>bytes</code> matches this \xe2\x80\xa6CiReturns true if and only if the given byte is in this \xe2\x80\xa68CmGet an iterator over the fields of a struct or variant as \xe2\x80\xa6CnSearch for the first occurrence of two possible bytes in a \xe2\x80\xa6CnSearch for the first occurrence of three possible bytes in \xe2\x80\xa6CdSearch for the last occurrence of a byte in a slice.AnThe message the compiler sent.BeThe error message of this diagnostic.DeWhether the class is negated or not. e.g., <code>\\d</code> is not \xe2\x80\xa6DjWhether the class is negated or not. e.g., <code>[[:alpha:]]</code> is \xe2\x80\xa6BeWhether this class is negated or not.DgWhether this class is negated or not. e.g., <code>[a]</code> is not \xe2\x80\xa6ClConstruct a new mutable IdxSlice by wrapping an existing \xe2\x80\xa6EfSame as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>\xe2\x80\xa60CnOutput information only about the root package and don\xe2\x80\x99t \xe2\x80\xa6AkProvides number inflectionsCmToggle whether a one-pass DFA should be available for use \xe2\x80\xa6CjA DFA that can return spans for matching capturing groups.BcUtilities for <code>Operand</code>.0DjThe <code>OUT_DIR</code> environment variable where this script places \xe2\x80\xa6BkReturns the ID of the pattern that matched.00CmReturns the pattern ID associated with this configuration \xe2\x80\xa6CnIf it is known which pattern ID caused this build error to \xe2\x80\xa6CkReturns the identifier of the pattern that matched when \xe2\x80\xa6CiThe original pattern string in which this error occurred.0CnPenalty string to insert if the word falls at the end of a \xe2\x80\xa6B`Abstraction over smart pointers.BcLooks up a value by a JSON Pointer.BkThe profile this artifact was compiled withClProvides type-based access to context intended for error \xe2\x80\xa600CjList of registries to which this package may be published.DiWraps the underlying slice\xe2\x80\x99s <code>rchunks</code> iterator with one \xe2\x80\xa6CkReplaces the leftmost-first match in the given haystack \xe2\x80\xa60E`Invokes <code>reserve</code> on the underlying instance of <code>PathBuf</code>.E`Reserve capacity for <code>c</code> more elements. See <code>Vec::reserve</code>DdReserve capacity for <code>additional</code> more elements to be \xe2\x80\xa6AbDependencies graphCnForwards to the slice\xe2\x80\x99s <code>reverse</code> implementation.CjReturn the underlying lazy DFA responsible for reverse \xe2\x80\xa6BhReturn a reference to the reverse cache.A`Reverse the NFA.BbReverse the bytes in this literal.BeReverses the ranges in this sequence.DdReturns the <code>IndexSet</code> for a particular <code>row</code>.DiWraps the underlying slice\xe2\x80\x99s <code>rsplitn</code> iterator with one \xe2\x80\xa6AjThe Self type of the impl.CfSet the ending offset for the span for this search \xe2\x80\xa60AlSets the length of a vector.CfAn implementation of the Shift-Or substring search \xe2\x80\xa6CnForwards to the slice\xe2\x80\x99s <code>sort_by</code> implementation.CkReturns an iterator starting with the current error and \xe2\x80\xa6CfReturns the spacing of this punctuation character, \xe2\x80\xa6DkA trait that can provide the <code>Span</code> of the complete contents \xe2\x80\xa6BnMapping source ranges to/from the HIR and MIR.0DeReturns <code>true</code> if the data has spilled into a separate \xe2\x80\xa6CiReturns the total stride for every state in this DFA, \xe2\x80\xa6CjReturns the stride, as a base-2 exponent, required for \xe2\x80\xa6EgReturns a <code>Span</code> that is a subset of <code>self.span()</code> containing \xe2\x80\xa6BoWhether or not the build finished successfully.CnTargets provided by the crate (lib, bin, example, test, \xe2\x80\xa6\xe2\x80\xa6CiReturn the capture name for the given index and given \xe2\x80\xa6AnName of the type in TypeScriptAhType ID of the rust typeCdThis configures Unicode mode for the entire pattern.CiThis configures Unicode mode for the all of the patterns.10CoEnable or disable the Unicode flag (<code>u</code>) by default.00Dh<code>variant</code> is called to identify which variant to deserialize.0BlVersion given in the <code>Cargo.toml</code>BcReturns the version of your plugin.0DiWraps the underlying slice\xe2\x80\x99s <code>windows</code> iterator with one \xe2\x80\xa6Ae<code>abstract</code>AmThe allocator return an errorBgThe type of anchored search to perform.ClSupport only anchored searches. Requesting an unanchored \xe2\x80\xa61AjA compiler-generated file.ChA single binary operation (i.e., &amp;&amp;, \xe2\x80\x93 or ~~).CaRepresents the capture groups for a single match.0CjThe span offsets of capturing groups after a match has \xe2\x80\xa6AdCargo features flagsCjCategorizes the cause of a <code>serde_json::Error</code>.AfA character class set.CnA builder for compiling an NFA from a regex\xe2\x80\x99s high-level \xe2\x80\xa6C`A <code>continue</code>, with an optional label.Ae<code>continue</code>ChAn enum input to a <code>proc_macro_derive</code> macro.CfDevice namespace prefix, e.g., <code>\\\\.\\COM42</code>.A`<code>..=</code>Eg<code>Expected</code> represents an explanation of what data a <code>Visitor</code> \xe2\x80\xa60CfA function call expression: <code>invoke(a, b)</code>.BkA cast expression: <code>foo as f64</code>.BnConditionless loop: <code>loop { ... }</code>.DjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6Ab<code>=&gt;</code>BcA single field in a struct pattern.CjAn iterator of non-overlapping matches in a particular \xe2\x80\xa6CjAn iterator over non-overlapping matches from a packed \xe2\x80\xa61CcAn iterator over non-overlapping substring matches.BmWrap words using a fast and simple algorithm.CgForm feed, spelled <code>\\f</code> (<code>\\x0C</code>).DcAn escaped form feed character (usually escaped as <code>\\f</code>)CiA (text) fragment denotes the unit which we wrap into \xe2\x80\xa6CmA speedy hash algorithm for use within rustc. The hashmap \xe2\x80\xa6CnLifetimes and type parameters attached to a declaration of \xe2\x80\xa6CaInclusive at the beginning, exclusive at the end.CiThe literal is written as a hex code with a bracketed \xe2\x80\xa6ClThe literal is written as a hex code with a fixed number \xe2\x80\xa6DiAdditional methods for <code>Ident</code> not provided by proc-macro2 \xe2\x80\xa6AmAn item within an impl block.CiOnly capture states corresponding to implicit capture \xe2\x80\xa6Df<code>IndexBox&lt;I, [T]&gt;</code>: An alias for indexed boxed slice.DhAn unordered collections of <code>T</code>s, implemented with a bit-set.Ee<code>IndexSet</code> specialized to the <code>bit_set::BitSet</code> implementation.CcA Vec that only accepts indices of a specific type.CkA fixed-sized vector with one value for each key in the \xe2\x80\xa6DfAn iterator over <code>TokenStream</code>\xe2\x80\x99s <code>TokenTree</code>s.CfAn owning iterator over a serde_json::Map\xe2\x80\x99s entries.DjAn iterator that consumes a <code>SmallVec</code> and yields its items \xe2\x80\xa6CeAn iterator over owned values of type <code>T</code>.DeAn enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.CfAn impl block providing trait or associated items: \xe2\x80\xa6AaA type alias: \xe2\x80\xa6CgError returned from <code>TokenStream::from_str</code>.BeA Rust lifetime: <code>&#39;a</code>.DdA lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.CdA lifetime parameter in precise capturing bound: \xe2\x80\xa6EjA lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.AdA lifetime argument.CgLine feed, spelled <code>\\n</code> (<code>\\x0A</code>).DcAn escaped line feed character (usually escaped as <code>\\n</code>)AjCause a line break (after)DfA floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.BoA structured list within an attribute, like \xe2\x80\xa6DcStarting point for metadata returned by <code>cargo metadata</code>AmMetadata about a log message.CnA negation operator applied to all subsequent flags in the \xe2\x80\xa65CeA helper type for forcing literal string replacement.0CeA property that isn\xe2\x80\x99t a particular value, e.g., \xe2\x80\xa6AbAn occupied Entry.Ae<code>override</code>CcAn iterator over mutably borrowed pairs of type \xe2\x80\xa6BjA const block: <code>const { ... }</code>.BhA pattern that binds a new variable: \xe2\x80\xa6DgA macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.BnA parenthesized pattern: <code>(A | B)</code>.GaA range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.DkA dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>\xe2\x80\xa6BeA tuple pattern: <code>(a, b)</code>.BgExtension trait for <code>Place</code>.0AdPlatform definition.BjA single position in a regular expression.n<code>?</code>BcFamily of <code>Rc</code> pointers.CgThe <code>self</code> argument of an associated method.0CmMatch multiple, possibly overlapping, regexes in a single \xe2\x80\xa60CnA trait for types that can be used to replace matches in a \xe2\x80\xa60ChA packed searcher for quickly finding occurrences of \xe2\x80\xa6CjA searcher for creating iterators and performing lower \xe2\x80\xa6Aa<code>Self</code>ChA group of flags that is not applied to a particular \xe2\x80\xa6DfA <code>Vec</code>-like container that can store a small number of \xe2\x80\xa6CkUse standard match semantics, which support overlapping \xe2\x80\xa6Di<code>Error</code> is a trait representing the basic expectations for \xe2\x80\xa60CmA line of text which isn\xe2\x80\x99t a cargo or compiler message. \xe2\x80\xa6DgTypes that can be interpolated inside a <code>quote!</code> invocation.ChAn iterator over all the elements in the tree (in no \xe2\x80\xa6BfA try block: <code>try { ... }</code>.DjA path like <code>std::slice::Iter</code>, optionally qualified with a \xe2\x80\xa6GbThe input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>\xe2\x80\xa60DmA braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.CcA slice of a UTF-8 path (akin to <code>str</code>).BlThe variadic argument of a foreign function.CaVerbatim prefix, e.g., <code>\\\\?\\cat_pics</code>.DjThe literal is written verbatim, e.g., <code>a</code> or <code>\xe2\x98\x83</code>.CeTokens in expression position not interpreted by Syn.BnTokens forming an item not interpreted by Syn.CnTokens in an <code>extern</code> block not interpreted by Syn.CnTokens within the definition of a trait not interpreted by \xe2\x80\xa6CcTokens within an impl block not interpreted by Syn.BkA raw token literal not interpreted by Syn.CbTokens in pattern position not interpreted by Syn.BoTokens in type position not interpreted by Syn.AlAdds a \xe2\x80\x9cfail\xe2\x80\x9d NFA state.BmAdd the given item to this sequence of flags.AkAdd a \xe2\x80\x9clook\xe2\x80\x9d NFA state.ClThis module provides APIs for dealing with the alphabets \xe2\x80\xa6BaSets the anchor mode of a search.0BbSet the anchored mode of a search.DiIf the <code>Value</code> is an Array, returns the associated vector. \xe2\x80\xa6CcReturns the substring of the haystack that matched.BbReturns the bytes in this literal.CiReturns the version of this span that is local to the \xe2\x80\xa60ChReturn references to the forward and reverse caches, \xe2\x80\xa6DlExtracts the <code>Place</code> inside an <code>Operand</code> if it exists.0DhGet a IndexSlice over this vector. See <code>as_raw_slice</code> for \xe2\x80\xa6BiReturns the underlying vector as a slice.CjReturns the underlying sequence of byte ranges as a slice.BnExtracts a slice containing the entire vector.ChReturns the remaining items of this iterator as a slice.BiReturn the underlying data of the buffer.DhReturn the internal value as a <code>usize</code>. This is guaranteed to0DjReturn this small index as a <code>usize</code>. This is guaranteed to \xe2\x80\xa611DkReturn this unit as a <code>usize</code>, regardless of whether it is a \xe2\x80\xa6CiExtracts the value of this index as a <code>usize</code>.0CgThe byte offset in the file where this diagnostic ends.AaC string literal.EaInvokes <code>capacity</code> on the underlying instance of <code>PathBuf</code>.ClReturns the total number of pattern identifiers that may \xe2\x80\xa6CcThe number of items the vector can hold without \xe2\x80\xa6CnThis routine searches for the first match of this regex in \xe2\x80\xa60CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa6CkExecutes an anchored leftmost forward search and writes \xe2\x80\xa6CcWhether to include \xe2\x80\x98Capture\xe2\x80\x99 states in the NFA.2CaProvides types for dealing with capturing groups.AoAssociated diagnostic messages.BdCategorizes the cause of this error.ChThe top-level function that should be called in your \xe2\x80\xa60CfAll comments found in the original regular expression.ClReturn a compiler for configuring the construction of an \xe2\x80\xa6CjReturns true when the given offset is contained within \xe2\x80\xa6CoForwards to the slice\xe2\x80\x99s <code>contains</code> implementation.DeReturns true if <code>index</code> is contained in <code>self</code>.BhReturns true if <code>index</code> is 1.3CnReturn true if and only if the given pattern identifier is \xe2\x80\xa6CeReturns true if and only if the given look-around \xe2\x80\xa60CjForwards to the <code>Vec::dedup_by</code> implementation.CjRemoves consecutive duplicate elements using the given \xe2\x80\xa6ChAttempt to downcast the error object to a concrete type.C`Attempts to downcast the box to a concrete type.00CcWhether to execute an \xe2\x80\x9cearliest\xe2\x80\x9d search or not.0CmReturns an iterator of the bytes in the given equivalence \xe2\x80\xa6AjWhich features to include.CaThe list of features enabled for this dependency.BfThe enabled features for this artifactAmFeatures enabled on the crateCjFeatures provided by the crate, mapped to the features \xe2\x80\xa6CmLike <code>find</code>, but accepts and returns raw pointers.000000000ClPrint f32 to the given buffer and return number of bytes \xe2\x80\xa6ClPrint f64 to the given buffer and return number of bytes \xe2\x80\xa6EfConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without \xe2\x80\xa6EgConverts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values \xe2\x80\xa6ChConstruct this index type from the wrapped integer type.0DbConverts a <code>PlaceRef</code> into an owned <code>Place</code>.0CdAttempts to parse a string into a regular expression0DhDeserialize an instance of type <code>T</code> from a string of JSON \xe2\x80\xa60CiCreates a JSON deserializer from a <code>&amp;str</code>.CbCreates a new index from a given <code>u16</code>.0CbCreates a new index from a given <code>u32</code>.0DcConstruct a <code>IndexVec</code> from a <code>Vec&lt;T&gt;</code>.DmConstruct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.BkReturns whether \xe2\x80\x9cCRLF\xe2\x80\x9d mode is enabled.CmReturns whether this configuration will instruct the lazy \xe2\x80\xa6BnReturn the span for this search configuration.0CgReturns whether UTF-8 mode is enabled for this builder.CjReturns whether this configuration has enabled UTF-8 mode.BfReturns whether UTF-8 mode is enabled.DbReturns <code>true</code> if the <code>Utf8Path</code> has a root.ClReturn a borrow of the underlying haystack as a slice of \xe2\x80\xa60C`Homepage as given in the <code>Cargo.toml</code>ClReturns a sequence of literals without a finite size and \xe2\x80\xa6BbReturn this alternation as an AST.BdReturn this concatenation as an AST.CiConverts the entry into a mutable reference to its value.DfConverts <code>self</code> into a vector without clones or allocation.EfConvert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the \xe2\x80\xa6DeReturns true if the <code>Value</code> is an Array. Returns false \xe2\x80\xa6CiReturns true if and only if this character class will \xe2\x80\xa60CgReturns true when this span is empty. That is, when \xe2\x80\xa6CbReturns true when the span in this match is empty.AnReturns true if we\xe2\x80\x99re empty.CaReturn true if <code>self</code> has no elements.BdReturns true if the domain is empty.BhReturns true if the map has no elements.CaReturns true if there are no ones in the bit-set.CaChecks if this <code>TokenStream</code> is empty.CjReturns true if and only if this match has a length of \xe2\x80\xa6CjReturns <code>true</code> if this set contains no regexes.1098CfReturn true if and only if this set has no pattern \xe2\x80\xa6BnReturns true if and only if this set is empty.ClReturns true if and only if this span is empty. That is, \xe2\x80\xa6BmReturn true if and only if this Ast is empty.CnReturns true if and only if this character class is empty. \xe2\x80\xa63CkReturns true if and only if this sequence is finite and \xe2\x80\xa6ChReturns true if and only if this literal has zero bytes.BmReturns true if the map contains no elements.C`Returns <code>true</code> if the vector is emptyCcReturns <code>true</code> if there are zero fields.ClReturns whether there are no more tokens remaining to be \xe2\x80\xa6CiDetermines whether this punctuated sequence is empty, \xe2\x80\xa6CaReturns true if and only if this buffer is empty.DnCompare corresponding bytes in <code>x</code> and <code>y</code> for equality.BhWhether the op is an equality op or not.CmReturns true if and only if all literals in this sequence \xe2\x80\xa6CbReturns true if and only if this literal is exact.CnDetermines whether this is a path of length 1 equal to the \xe2\x80\xa6CjReturns true if and only if this automaton matches the \xe2\x80\xa6CfReturns true if the given ID represents a match state.CnReturns true if and only if there is a match for the regex \xe2\x80\xa6CnReturns true if and only if one of the regexes in this set \xe2\x80\xa610ClReturns true if and only if this regex matches the given \xe2\x80\xa6CjReturn true if and only if this lazy state ID has been \xe2\x80\xa61CmExecutes an anchored leftmost forward search, and returns \xe2\x80\xa6DjReturns true if and only if this <code>PikeVM</code> matches the given \xe2\x80\xa6CdReturns true if and only if this capturing group \xe2\x80\xa6BgVerify that a matrix is a Monge matrix.CfReturns true if the given ID represents a start state.5EeReturns true when <code>Look::Start</code> is satisfied <code>at</code> the given \xe2\x80\xa6CmReturns true if and only if this character class range is \xe2\x80\xa6CkReturns true if and only if this repetition range is valid.CaGet a iterator over mut reverences to our values.CjReturns an iterator over mutable references to the values.CdGets a mutable iterator over the entries of the map.DiGet an iterator over the mutably borrowed <code>Field</code> items in \xe2\x80\xa6CiReturns an iterator over mutably borrowed syntax tree \xe2\x80\xa6C`Keywords as given in the <code>Cargo.toml</code>BoReturn the index of the last element, or panic.CaReturn the the last element, if we are not empty.CbMutably borrows the last element in this sequence.DjIf the cursor is pointing at a <code>Lifetime</code>, returns it along \xe2\x80\xa6An1-based. The line in the file.CiIf this is a finite sequence, return its members as a \xe2\x80\xa6CnReturns a set of all look-around assertions that appear at \xe2\x80\xa6CmSearch for the last occurrence of two possible bytes in a \xe2\x80\xa6CmSearch for the last occurrence of three possible bytes in \xe2\x80\xa6ClQueries the file system to get information about a file, \xe2\x80\xa6ClReturns the metadata for the file that this entry points \xe2\x80\xa6CbContents of the free form package.metadata sectionBaMetadata about the log directive.DlSet <code>metadata</code>. Construct a <code>Metadata</code> object with \xe2\x80\xa6DkBuilds a <code>Regex</code> from many pattern strings using the default \xe2\x80\xa6CgParse the given regular expressions using a default \xe2\x80\xa6DhLike <code>new</code>, but parses multiple patterns into a single \xe2\x80\x9c\xe2\x80\xa60100DhGives the next index that will be assigned when <code>push</code> is \xe2\x80\xa6DkThis returns <code>Ok(Some(key))</code> for the next key in the map, or \xe2\x80\xa60CaCreate a buffer that drops all color information.BlReturns one more than this value as a usize.0CbReturns one more than this small index as a usize.11BoWhether this dependency is required or optionalCiThe position of the original flag. The error position \xe2\x80\xa6CmThe position of the original negation operator. The error \xe2\x80\xa6CiThe position of the initial occurrence of the capture \xe2\x80\xa6CjA list of all crates referenced by this crate (and the \xe2\x80\xa6CfReturns the regex patterns that this regex set was \xe2\x80\xa60ClReturns an iterator over all pattern identifiers in this \xe2\x80\xa6CcPeeks any identifier including keywords. Usage: \xe2\x80\xa6CiSearches for an element in an iterator, returning its \xe2\x80\xa6ChReturns an iterator over the entries within a directory.DnA method\xe2\x80\x99s <code>self</code> receiver, such as <code>&amp;self</code> or \xe2\x80\xa6CnThe URL of the index of the registry where this dependency \xe2\x80\xa6BdThe message as rustc would render itDfReplaces at most <code>limit</code> non-overlapping matches in the \xe2\x80\xa60ChFlip the look-around assertion to its equivalent for \xe2\x80\xa60BfSet whether the text is bolded or not.BkSet the span for this search configuration.CaConfigures the span for <em>only this token</em>.DkConfigures the span for this <code>Group</code>\xe2\x80\x99s delimiters, but not \xe2\x80\xa6CbConfigure the span for this punctuation character.DiConfigures the span of this <code>Ident</code>, possibly changing its \xe2\x80\xa6C`Configures the span associated for this literal.51ClSet whether the NFA produced by this builder should only \xe2\x80\xa6DkReturns the total number of slots in this <code>GroupInfo</code> across \xe2\x80\xa6CiSmall vectors in various sizes. These store a certain \xe2\x80\xa6CiCreates a <code>SmallVec</code> containing the arguments.BgDivides our slice into two at an index.BjPath to the main source file of the targetDcRemoves every element of <code>other</code> from <code>self</code>.CnRemoves all ones from <code>other</code> in <code>self</code>.CkReturns a new set that is the result of subtracting the \xe2\x80\xa60DoReturns spans for regions in <code>self</code> not in <code>child_spans</code>.0DnReturns true if all ones in <code>other</code> are a one in <code>self</code>.CmThe textwrap library provides functions for word wrapping \xe2\x80\xa6CmSet the Thompson NFA configuration for this builder using \xe2\x80\xa600DcDefines a Thompson NFA and provides the <code>PikeVM</code> and \xe2\x80\xa611CkConverts <code>self</code> to an index over <code>T</code>.CmReturn the capture group index corresponding to the given \xe2\x80\xa6D`Converts <code>self</code> to the equivalent <code>Level</code>.EfConvert a <code>T</code> into <code>serde_json::Value</code> which is an enum that \xe2\x80\xa60CnReturns a new span whose end is no later than the start of \xe2\x80\xa60DhShortens the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6DgShorten the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6ClReturns the location of the first match according to the \xe2\x80\xa6CiExecutes a non-overlapping search with this automaton \xe2\x80\xa6DjExecutes a leftmost forward search and returns a <code>Match</code> if \xe2\x80\xa6CdAttempts to parse a string into a regular expression000BfRe-allocate to set the capacity to \xe2\x80\xa6BfThe input contains an <code>i8</code>.0BeThe input contains a <code>u8</code>.0CjCreate a new span by replacing the ending the position \xe2\x80\xa6DgWrites an integer value like <code>-123</code> to the specified writer.DfWrites an integer value like <code>123</code> to the specified writer.AlThe <code>+=</code> operatorBhExtension trait for <code>AdtDef</code>.0CcEvery crate in the workspace and all transitive \xe2\x80\xa60CmAct like AL when the resolved EAW is N; otherwise, act as \xe2\x80\xa6BdFamily of <code>Arc</code> pointers.AnA single zero-width assertion.0CnA binding (equality constraint) on an associated type: the \xe2\x80\xa60CnDistinguishes between attributes that decorate an item and \xe2\x80\xa6CeAn attribute, like <code>#[repr(transparent)]</code>.CbA trait that abstracts over Aho-Corasick automata.DcAn escaped backspace character (usually escaped as <code>\\b</code>)CmAn argument in a function type: the <code>usize</code> in \xe2\x80\xa6CnA bracketed character class set, which may contain zero or \xe2\x80\xa6CnA state with a single transition that can only be taken if \xe2\x80\xa6CiA candidate is the result of running a prefilter on a \xe2\x80\xa6BoData structure for sharing spans outside rustc.0AgA Perl character class.DhA single perl character class, e.g., <code>\\d</code> or <code>\\W</code>.AfA color specification.AiCache for copyable types.0DbAn untagged union input to a <code>proc_macro_derive</code> macro.DnProvides a convenient <code>Debug</code> implementation for a <code>u8</code>.DnAn object that holds a <code>Group</code>\xe2\x80\x99s <code>span_open()</code> and \xe2\x80\xa6CeDescribes how a sequence of token trees is delimited.AlThe <code>/=</code> operatorA`<code>...</code>BjDo not break from following Emoji ModifierCiThe type of an error that occurred while building an AST.DfThe type of an error that occurred while building an <code>Hir</code>.CfA slice literal expression: <code>[a, b, c, d]</code>.BkAn async block: <code>async { ... }</code>.BlAn await expression: <code>fut.await</code>.BfA blocked scope: <code>{ ... }</code>.DiA <code>break</code>, with an optional label to break and an optional \xe2\x80\xa6BjA const block: <code>const { ... }</code>.DhAccess of a named struct field (<code>obj.k</code>) or unnamed tuple \xe2\x80\xa6CdAn expression contained within invisible delimiters.CoA square bracketed indexing expression: <code>vector[2]</code>.DgThe inferred value of a const generic argument, denoted <code>_</code>.DgA macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.EjA <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.CaA parenthesized expression: <code>(a + b)</code>.GaA range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.BnA tuple expression: <code>(a, b, c, d)</code>.CdA unary operation: <code>!x</code>, <code>*x</code>.BnA while loop: <code>while expr { ... }</code>.BlA yield expression: <code>yield expr</code>.DeExtracts prefix or suffix literal sequences from <code>Hir</code> \xe2\x80\xa6CeA reverse substring searcher using the Rabin-Karp \xe2\x80\xa6CfA reverse substring searcher that uses the Two-Way \xe2\x80\xa6CmA single substring reverse searcher fixed to a particular \xe2\x80\xa6BbA single item in a group of flags.CjThis trait abstracts away serializing the JSON control \xe2\x80\xa6CfType alias for a hash map that uses the Fx hashing \xe2\x80\xa6CfType alias for a hash set that uses the Fx hashing \xe2\x80\xa6CfRepresents information about capturing groups in a \xe2\x80\xa6AdThe kind of a group.CkA representation of \xe2\x80\x9chalf\xe2\x80\x9d of a match reported by a \xe2\x80\xa6EdAn <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a \xe2\x80\xa6CeAn inherited visibility, which usually means private.DcAn iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.CeA constant item: <code>const MAX: u16 = 65535</code>.D`A macro invocation, which includes <code>macro_rules!</code> \xe2\x80\xa6ClA trait definition: <code>pub trait Iterator { ... }</code>.DfA union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.DjThe expression assigned in a local <code>let</code> binding, including \xe2\x80\xa6DeIf <code>Self::CHECKS_MAX_INDEX</code> is true, we\xe2\x80\x99ll assert if \xe2\x80\xa60AjCause a line break (after)AoA line must break at this spot.DhProvides a <code>Visitor</code> access to each entry of a map in the \xe2\x80\xa60CbCoherence hack for the <code>ToIndex</code> trait.CdA knob for controlling the match semantics of an \xe2\x80\xa6CjA knob for controlling the match semantics of a packed \xe2\x80\xa6CgThe kind of match semantics to use for a regex pattern.AlThe <code>*=</code> operatorn<code>m</code>BoA name-value pair within an attribute, like \xe2\x80\xa6CgA one letter abbreviated class, e.g., <code>\\pN</code>.n<code>+</code>BhThe spans of the node minus its children0ClAn \xe2\x80\x9copaque\xe2\x80\x9d identifier for a package. It is possible \xe2\x80\xa6CkA reference to the parent directory, i.e., <code>..</code>.DfA struct or struct variant pattern: <code>Variant { x, y, .. }</code>.CiThe identifier of a pattern in an Aho-Corasick automaton.CgThe identifier of a regex pattern, represented by a \xe2\x80\xa60ClPenalties for <code>WrapAlgorithm::OptimalFit</code> and \xe2\x80\xa6o<code>%=</code>CkA guard that is returned when a caller requests a value \xe2\x80\xa6BfA prefilter for accelerating a search.CePrefilter controls whether heuristics are used to \xe2\x80\xa6BlA prefilter for accelerating regex searches.AkIterator for query results.BjAct like they are both opening and closingBhFamily of <code>&amp;</code>-references.DhA referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.BoA reference pattern: <code>&amp;mut var</code>.DoA reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.AlThe <code>%=</code> operatorAa<code>self</code>DkProvides a <code>Visitor</code> access to each element of a sequence in \xe2\x80\xa60DjA <strong>data structure</strong> that can be serialized into any data \xe2\x80\xa6CaDerive macro available if serde is built with \xe2\x80\xa6111BcThe <code>&lt;&lt;=</code> operatorBcThe <code>&gt;&gt;=</code> operatorCfA function signature in a trait or implementation: \xe2\x80\xa6CcJSON input source that reads from a slice of bytes.CkMatch the beginning of a line or the beginning of text. \xe2\x80\xa60CnThe kind of anchored starting configurations to support in \xe2\x80\xa6n<code>^</code>o<code>\\A</code>BiA macro invocation in statement position.AlThe <code>-=</code> operatorB`Do not occur in well-formed textn<code>U</code>ClAn iterator over all occurrences of three possible bytes \xe2\x80\xa600CiA single token or a delimited sequence of token trees \xe2\x80\xa6CeAn item declaration within the definition of a trait.ClAn error that occurred while translating abstract syntax \xe2\x80\xa6CdReturned by <code>TypeGenerics::as_turbofish</code>.BmA fixed size array type: <code>[T; n]</code>.BmA type contained within invisible delimiters.CnIndication that a type should be inferred by the compiler: \xe2\x80\xa6AmA macro in the type position.AoThe never type: <code>!</code>.CmA generic type parameter: <code>T: Into&lt;String&gt;</code>.CbA parenthesized type equivalent to the inner type.CaA dynamically sized slice type: <code>[T]</code>.BmA tuple type: <code>(A, B, C, String)</code>.CnAn renamed identifier imported by a <code>use</code> item: \xe2\x80\xa6BhA single inclusive range of UTF-8 bytes.CeA mutable iterator over a serde_json::Map\xe2\x80\x99s values.CnMatch an ASCII-only word boundary. That is, this matches a \xe2\x80\xa60n<code>?</code>AmAdd an \xe2\x80\x9cempty\xe2\x80\x9d NFA state.AmAdds a \xe2\x80\x9cmatch\xe2\x80\x9d NFA state.AlAdd a \xe2\x80\x9crange\xe2\x80\x9d NFA state.AlAdd a \xe2\x80\x9cunion\xe2\x80\x9d NFA state.CmReturn an iterator of all capture groups for all patterns \xe2\x80\xa6DbProduces an iterator over <code>Utf8Path</code> and its ancestors.DgIf the cursor is pointing at a <code>Group</code>, returns a cursor \xe2\x80\xa6EfIf the <code>Value</code> is a Number, returns the associated <code>Number</code>. \xe2\x80\xa6DgIf the <code>Value</code> is an Object, returns the associated Map. \xe2\x80\xa6BoYields the underlying <code>OsStr</code> slice.CaExtracts the underlying <code>OsStr</code> slice.CiReturns the raw <code>OsStr</code> slice for this prefix.DkReturns the <code>OsStr</code> slice that was attempted to be converted \xe2\x80\xa6BbCreate a \xe2\x80\x9cassertion\xe2\x80\x9d AST item.CgReturns the value that could not be converted to an ID.0ClReturns the value that could not be converted to a small \xe2\x80\xa611DkProvides <code>Automaton</code> trait for abstracting over Aho-Corasick \xe2\x80\xa6CfChecks that all assertions in this set can be matched.BaGet the backtrace for this Error.CmToggle whether a bounded backtracking regex engine should \xe2\x80\xa6CiAn NFA backed bounded backtracker for executing regex \xe2\x80\xa6CnParse a set of square brackets and expose their content to \xe2\x80\xa6CkThe span of the invocation of the current procedural macro.CkProvides conversion to and detection of camel case strings.AbCharacter literal.CkProvides conversion to and detection of class case strings.CbClears all the elements from the <code>row</code>.BoConfigure the behavior of a <code>Regex</code>.CjApply the given lazy DFA configuration options to this \xe2\x80\xa6CnApply the given one-pass DFA configuration options to this \xe2\x80\xa6CjApply the given NFA configuration options to this builder.DeApply the given <code>PikeVM</code> configuration options to this \xe2\x80\xa6DiApply the given <code>BoundedBacktracker</code> configuration options \xe2\x80\xa6DmCopies <code>other</code> into <code>self</code>. Must have the same lengths.CmCounts all occurrences of this byte in the given haystack \xe2\x80\xa600CnThe amount of debug info. 0 for none, 1 for limited, 2 for \xe2\x80\xa6CjReturns the punctuation used as the delimiter for this \xe2\x80\xa6AjThe kinds of dependencies.DgCalled after every array.  Writes a <code>]</code> to the specified \xe2\x80\xa6DgDetermines whether <code>child</code> is a suffix of <code>self</code>.D`Forwards to the slice\xe2\x80\x99s <code>ends_with</code> implementation.ClMacro invocations that created the code at this span, if \xe2\x80\xa6CnFormat a message stating what data this Visitor expects to \xe2\x80\xa60ClManually export this type to a file with a file with the \xe2\x80\xa6DcExtracts the extension of <code>self.file_name</code>, if possible.DiReturns the final component of the <code>Utf8Path</code>, if there is \xe2\x80\xa6CnReturns the bare file name of this directory entry without \xe2\x80\xa6CkThe file name or the macro name this diagnostic comes from.DkExtracts the stem (non-extension) portion of <code>self.file_name</code>\xe2\x80\xa6CmReturns the file type for the file that this entry points \xe2\x80\xa6CjThe full paths to the generated artifacts (e.g. binary \xe2\x80\xa6CmReturns an iterator of non-overlapping matches, using the \xe2\x80\xa6ClReturn an iterator of non-overlapping occurrences of the \xe2\x80\xa6ClReturns an iterator over all non-overlapping occurrences \xe2\x80\xa6CnReturns an iterator over all occurrences of a substring in \xe2\x80\xa6CnReturns an iterator that yields successive non-overlapping \xe2\x80\xa60CiReturns an iterator over all non-overlapping leftmost \xe2\x80\xa600CbReturn the the first element, if we are not empty.CcMutably borrows the first element in this sequence.ChConstructs a new vector where each index maps to the \xe2\x80\xa6E`Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.E`Converts an <code>i128</code> to a <code>Number</code>. Numbers smaller than \xe2\x80\xa6DiCreate a <code>Value::Array</code> by collecting an iterator of array \xe2\x80\xa6DdCreate a <code>Value::Object</code> by collecting an iterator of \xe2\x80\xa6CkReturn the corresponding ClassAsciiKind variant for the \xe2\x80\xa6ChConverts a <code>Path</code> to a <code>Utf8Path</code>.DeGiven the underlying representation of a <code>Look</code> value, \xe2\x80\xa60EhConverts a <code>u128</code> to a <code>Number</code>. Numbers greater than u64::MAX \xe2\x80\xa6CmReturns the span of a capturing group match corresponding \xe2\x80\xa6CkIf this path consists of a single ident, returns the ident.ChReturn the match result of the most recent search to \xe2\x80\xa60ClReturns the pattern ID and the span of the match, if one \xe2\x80\xa6BlReturns whether \xe2\x80\x9coctal\xe2\x80\x9d mode is enabled.CiReturn the span as a range for this search configuration.0CgReturn the total number of capturing groups for the \xe2\x80\xa6CaReturn the number of capture groups in a pattern.ClReturns true if and only if this NFA can match the empty \xe2\x80\xa6DkA macro similar to the stdlib\xe2\x80\x99s <code>vec![]</code>, but producing an \xe2\x80\xa6D`Write into a <code>serde_json::Value</code> using the syntax \xe2\x80\xa6CfThis crate helps with defining \xe2\x80\x9cnewtype\xe2\x80\x9d-style \xe2\x80\xa6DkA macro equivalent to the stdlib\xe2\x80\x99s <code>vec![]</code>, but producing \xe2\x80\xa6BmIndexical: Human-Friendly Indexed CollectionsCiAdds String based inflections for Rust. Snake, kebab, \xe2\x80\xa6DeRemoves every element of <code>self</code> not in <code>other</code>.D`Removes all ones in <code>self</code> not in <code>other</code>.CnReturns a new set that is the intersection of this and the \xe2\x80\xa6CkIntersect this character class with the given character \xe2\x80\xa6CkIntersect this byte class with the given byte class, in \xe2\x80\xa62C`Return this union as a character class set item.ClTurn a JSON deserializer into an iterator over values of \xe2\x80\xa6CmConsumes ownership of this HIR expression and returns its \xe2\x80\xa6CeReturns the full path to the file that this entry \xe2\x80\xa6DkReturns true if <code>self</code> cannot be resolved further to another \xe2\x80\xa60EeReturns true when <code>Look::EndLF</code> is satisfied <code>at</code> the given \xe2\x80\xa6BhReturns true if this sequence is finite.DeReturns true if the <code>Value</code> is a Number. Returns false \xe2\x80\xa6DfReturns true if the <code>Value</code> is an Object. Returns false \xe2\x80\xa6EeReturns true if and only if <code>needle</code> is a prefix of <code>haystack</code>.CmReturns true if this kind is the <code>Prefix</code> variant.DeReturns true if the <code>Value</code> is a String. Returns false \xe2\x80\xa6EeReturns true if and only if <code>needle</code> is a suffix of <code>haystack</code>.CmReturns true if this kind is the <code>Suffix</code> variant.CkReturns true if this error was caused by input that was notChReturn true if and only if this lazy state ID is tagged.CkProvides conversion to and detection of kebab case strings.DbIterator over the lifetime parameters in <code>self.params</code>.EmThe <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>BmAny lifetimes from a <code>for</code> bindingCkReturns the total number of matches for the given state ID.CkReturns the total number of patterns that match in this \xe2\x80\xa6BfReturns the current maximum log level.CmErases/normalizes information in a place to ensure stable \xe2\x80\xa60CdOptimization level. Possible values are 0-3, s or z.ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6CmReturns an iterator over the contents of this sequence as \xe2\x80\xa6BiParses any identifier including keywords.CkParse a string of Rust code into the chosen syntax tree \xe2\x80\xa60CiRemoves the trailing punctuation from this punctuated \xe2\x80\xa6BiEnable heuristic prefilter optimizations.CjReturns a prefilter, if available, that can be used to \xe2\x80\xa6111BoConfigure the prefilter setting for the finder.DdOverrides and sets the prefilter to use inside a <code>Regex</code>.ChSet a prefilter to be used whenever a start state is \xe2\x80\xa600CdDefines a prefilter for accelerating regex searches.CnMutably borrows the punctuation from this punctuated pair, \xe2\x80\xa6ChAn implementation of the Rabin-Karp substring search \xe2\x80\xa6CkReads a symbolic link, returning the file that the link \xe2\x80\xa6DiReturn a <code>LookSet</code> from the slice given as a native endian \xe2\x80\xa60CnLike <code>rfind</code>, but accepts and returns raw pointers.000000000CjSearches for an element in an iterator from the right, \xe2\x80\xa6CnIf set, the separator given is printed between buffers. By \xe2\x80\xa6CeSerialize this value into the given Serde serializer.000BeSet the color settings of the writer.CkSet the span for this search configuration given any range.0CmSet whether to reset the terminal whenever color settings \xe2\x80\xa6ChSet the starting offset for the span for this search \xe2\x80\xa60ClUpdates this set in place with the result of unioning it \xe2\x80\xa60EbInvokes <code>shrink_to</code> on the underlying instance of <code>PathBuf</code>.CgCreate a look-around set containing the look-around \xe2\x80\xa60BoReturns a sequence containing a single literal.CmReturns the number of elements remaining in the sequence, \xe2\x80\xa6CjReturns the number of entries remaining in the map, if \xe2\x80\xa610CjReturns the underlying slots as a mutable slice, where \xe2\x80\xa6CkProvides conversion to and detection of snake case strings.DhSorts this map\xe2\x80\x99s entries in-place using <code>str</code>\xe2\x80\x99s usual \xe2\x80\xa6CnReturns the span pointing to the opening delimiter of this \xe2\x80\xa6DkWraps the underlying slice\xe2\x80\x99s <code>split_mut</code> iterator with one \xe2\x80\xa6CjSplits the collection into two at the given index. See \xe2\x80\xa6ChReturns the total number of states in this one-pass DFA.CkProvides conversion to and detection of table case strings.ChThis crate provides a cross platform abstraction for \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsCkProvides conversion to and detection of title case strings.BjConverts a Body to a debug representation.CnReturns a pretty representation of a place that uses debug \xe2\x80\xa6C`Returns a pretty debug representation of a span.210CgSerialize the given data structure as a String of JSON.0CnWrite <code>self</code> to the given <code>TokenStream</code>.CkSerialize the given data structure as JSON into the I/O \xe2\x80\xa60CkProvides conversion to and detection of train case strings.DnDefines a translator that converts an <code>Ast</code> to an <code>Hir</code>.CnTranslate the given abstract syntax tree (AST) into a high \xe2\x80\xa6ChTransposes the matrix, assuming the row type is also \xe2\x80\xa6BeGet whether this is underline or not.CmMutably borrows the syntax tree node from this punctuated \xe2\x80\xa6BgThe input contains an <code>f32</code>.0BgThe input contains an <code>f64</code>.0BgThe input contains an <code>i16</code>.0BgThe input contains an <code>i32</code>.0BgThe input contains an <code>i64</code>.0BcThe input contains a key-value map.0DgThis method is called on an <code>Ast</code> before descending into \xe2\x80\xa60DgThis method is called on an <code>Hir</code> before descending into \xe2\x80\xa60BjThe input contains a sequence of elements.0CnThe input contains a string. The lifetime of the string is \xe2\x80\xa60BfThe input contains a <code>u16</code>.0BfThe input contains a <code>u32</code>.0BfThe input contains a <code>u64</code>.0ClReturns the character\xe2\x80\x99s displayed width in columns, or \xe2\x80\xa6CbReturns the string\xe2\x80\x99s displayed width in columns.BaAppend additional rustc arguments0BlCreate a new prefilter using the pair given.CkCreate a new \xe2\x80\x9cpacked pair\xe2\x80\x9d finder using the pair of \xe2\x80\xa60DjConstructs a new <code>FxSeededState</code> that is initialized with a \xe2\x80\xa6CcCreates a <code>fx</code> hasher with a given seed.DeWrites a floating point value like <code>-31.26e+12</code> to the \xe2\x80\xa60DgWrites an integer value like <code>-123</code> to the specified writer.00DfWrites an integer value like <code>123</code> to the specified writer.00CkAre alphabetic characters or symbols that are used with \xe2\x80\xa6CkAlwaysAnsi is like Always, except it never tries to use \xe2\x80\xa6DgFind words by splitting on runs of <code>&#39; &#39;</code> characters.CiAn equality constraint on an associated constant: the \xe2\x80\xa60AlUnicode line breaking class.ChAn error that occurred during the construction of an \xe2\x80\xa6DeAn error that occurs when construction of a <code>Regex</code> fails.ClAn error that occurs when initial construction of a lazy \xe2\x80\xa6CgAn error that occurred during the construction of a \xe2\x80\xa6CkAn error that can occurred during the construction of a \xe2\x80\xa6CdAn error that occurs when cache usage has become \xe2\x80\xa6CiRepresents a character escape code in a type-safe manner.AiAn ASCII character class.CcA set of characters represented by arbitrary bytes.CnA pair of comparison operator and partial version, such as \xe2\x80\xa6ClA const generic parameter: <code>const LENGTH: usize</code>.DeAn associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.0CmProvide a line break opportunity contingent on additional \xe2\x80\xa6CiA struct input to a <code>proc_macro_derive</code> macro.AnA dependency of the main crateClA typescript type which is depended upon by other types. \xe2\x80\xa6BgA diagnostic message generated by rustcCjThe difference of two sets, e.g., <code>\\pN--[0-9]</code>.DhProvides a <code>Visitor</code> access to the data of an enum in the \xe2\x80\xa60CeAn assignment expression: <code>a = compute()</code>.ClA binary operation: <code>a + b</code>, <code>a += b</code>.CkAn array literal constructed from one repeated element: \xe2\x80\xa6CmA <code>return</code>, with an optional value to be returned.CoA struct literal expression: <code>Point { x: 1, y: 1 }</code>.BmAn unsafe block: <code>unsafe { ... }</code>.BgA field-value pair in a struct literal.DdA block of foreign items: <code>extern &quot;C&quot; { ... }</code>.ChAn efficient way of discarding data from a deserializer.0BlAn associated function within an impl block.DhHelper type for implementing a <code>Serializer</code> that does not \xe2\x80\xa60CnA slice that only accepts indices of a specific type. Note \xe2\x80\xa6CeAn owning iterator over a serde_json::Map\xe2\x80\x99s values.CiA static item: <code>static BIKE: Shed = Shed(42)</code>.CoA struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.CnSupported line endings. Like in the Rust standard library, \xe2\x80\xa6CeA byte string literal: <code>b&quot;foo&quot;</code>.CmSupport for checking the next token in a stream to decide \xe2\x80\xa6ChMaximum value the index can take, as a <code>u32</code>.0CeAn error that occurred during an Aho-Corasick search.CnAn error indicating that a search stopped before reporting \xe2\x80\xa6CnA method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.BhA property name and an associated value.BfAllow only indirect line breaks beforeBiExtension trait for <code>Operand</code>.0CgWrap words using an advanced algorithm with look-ahead.BaA set of <code>PatternID</code>s.CmOptional pre-release identifier on a version string. This \xe2\x80\xa6ChA type that collects various properties of an HIR value.Ef<strong>A punctuated sequence of syntax tree nodes of type <code>T</code> </strong>\xe2\x80\xa6Co<code>IndexVec</code> specialized to the <code>RcFamily</code>.CgA repetition operation applied to a regular expression.CiA repetition operator applied to an arbitrary regular \xe2\x80\xa6CnThe high-level intermediate representation of a repetition \xe2\x80\xa6CcA repetition operation applied to a sub-expression.DiA visibility level restricted to some path: <code>pub(self)</code> or \xe2\x80\xa6BdReturn type of a function signature.DhA <strong>data format</strong> that can serialize any data structure \xe2\x80\xa6000CbA structure for serializing Rust values into JSON.C`Serializer whose output is a <code>Value</code>.1BiA set of matches returned by a regex set.0BkA type that represents a \xe2\x80\x9csmall\xe2\x80\x9d index.CnAn error that can occur when computing the start state for \xe2\x80\xa6CaCursor state associated with speculative parsing.CjConvenience trait for constructing a <code>SmallVec</code>DkA trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>\xe2\x80\xa6BlA trait used as a bound on a type parameter.BeA single transition to another state.CeA translator maps abstract syntax to a high level \xe2\x80\xa6ChA bare function type: <code>fn(usize) -&gt; bool</code>.ClSupport only unanchored searches. Requesting an anchored \xe2\x80\xa6n<code>_</code>Dj<code>Unexpected</code> represents an unexpected invocation of any one \xe2\x80\xa60DlWindows path prefixes, e.g., <code>C:</code> or <code>\\\\server\\share</code>.Dn<strong>SemVer version requirement</strong> describing the intersection of \xe2\x80\xa60DeThe visibility level of an item: inherited or <code>pub</code> or \xe2\x80\xa6BeProhibit line breaks before and afterCmThis trait describes the behavior of writers that support \xe2\x80\xa6n<code>*</code>AmAdd a \xe2\x80\x9csparse\xe2\x80\x9d NFA state.CiAdvance this parse stream to the position of a forked \xe2\x80\xa6CiReturns an iterator over all projections of all local \xe2\x80\xa60ClAn ordered sequence of unconditional epsilon transitions \xe2\x80\xa6CiProvides in-place mutable access to an occupied entry \xe2\x80\xa6CaFor use by <code>ToTokens</code> implementations.CjReturns an unsafe mutable pointer to the slice\xe2\x80\x99s buffer.CgReturns a raw mutable pointer to the vector\xe2\x80\x99s buffer.DhEquivalent to accessing our <code>raw</code> field mutably, but as a \xe2\x80\xa6AfThe type being boundedCfBuilds a <code>Regex</code> from many pattern strings.BiBuild a lazy DFA from the given patterns.BfBuild a regex from the given patterns.BmBuild a one-pass DFA from the given patterns.ChCompile the given regular expression patterns into a \xe2\x80\xa6CdBuild a <code>PikeVM</code> from the given patterns.D`Build a <code>BoundedBacktracker</code> from the given patterns.CkCompute the union of control dependencies from multiple \xe2\x80\xa60ClThe byte offset in the file where this diagnostic starts \xe2\x80\xa6DiPath to <code>cargo</code> executable.  If not set, this will use the \xe2\x80\xa6CbCategories as given in the <code>Cargo.toml</code>DhWraps the underlying slice\xe2\x80\x99s <code>chunks_mut</code> iterator with \xe2\x80\xa6BcCreate a \xe2\x80\x9cPerl class\xe2\x80\x9d AST item.CkReturns the <code>IndexedDomain</code> for the column type.Aj1-based, character offset.DfProduces an iterator over the <code>Utf8Component</code>s of the path.CiProvides a contiguous NFA implementation of Aho-Corasick.DhReturns an object that holds this group\xe2\x80\x99s <code>span_open()</code> andDkThis module contains <code>Diagnostic</code> and the types/functions it \xe2\x80\xa6CjSubtract the given character class from this character \xe2\x80\xa6CjSubtract the given byte class from this byte class, in \xe2\x80\xa6DhCalled after every object.  Writes a <code>}</code> to the specified \xe2\x80\xa6DfCalled after each series of <code>write_string_fragment</code> and \xe2\x80\xa6AkPath to the executable fileBdFind all words in <code>line</code>.C`Returns the state of the given flag in this set.BkProvides foreign key conversion for String.CiConstruct an error object from a type-erased standard \xe2\x80\xa6CjCreates a new <code>Place</code> with an empty projection.0CgConstruct a new IdxSlice by wrapping an existing slice.DgDeserialize an instance of type <code>T</code> from bytes of JSON text.0CjCreates a JSON deserializer from a <code>&amp;[u8]</code>.D`Copy the elements from a slice into a new <code>SmallVec</code>.CjConstruct an Index from a usize. This is equivalent to \xe2\x80\xa6BgConstruct this index type from a usize.CdCreates a new index from a given <code>usize</code>.10EaInterpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.0DgReturns the configuration object used to build this <code>Regex</code>.BhReturns this lazy DFA\xe2\x80\x99s configuration.BhReturn the config for this one-pass DFA.BoReturn the config for this <code>PikeVM</code>.CkReturn the config for this <code>BoundedBacktracker</code>.CjReturns whether the hybrid NFA/DFA regex engine may be \xe2\x80\xa6BhReturn whether NFA shrinking is enabled.DgReturn information about the capture groups in this <code>Regex</code>.BnReturns the capturing group info for this NFA.CmReturns a reference to the underlying group info on which \xe2\x80\xa6BnReturn an infallible version of this iterator.00CfAdds every element of the domain to <code>self</code>.0CbYields ownership of the bytes inside this literal.EeReturns the original <code>fs::DirEntry</code> within this <code>Utf8DirEntry</code>.D`Unwrap the <code>Writer</code> from the <code>Serializer</code>.EcConvert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise \xe2\x80\xa6CgConsume this buffer and return the underlying raw data.DdConsume this <code>NoColor</code> value and return the inner writer.DaConsume this <code>Ansi</code> value and return the inner writer.CnConvert this iterator into its owned variant, such that it \xe2\x80\xa60ClConvert this finder into its owned variant, such that it \xe2\x80\xa60CmReturns an iterator over the contents of this sequence as \xe2\x80\xa6CkProduces this punctuated pair as a tuple of syntax tree \xe2\x80\xa6ClExtracts the syntax tree node from this punctuated pair, \xe2\x80\xa6DfReturns true if the <code>Value</code> is a Boolean. Returns false \xe2\x80\xa6CjReturns true if and only if this state contains one or \xe2\x80\xa6CmReturns true if and only if all literals in this sequence \xe2\x80\xa6ClReturn true if and only if this HIR is a simple literal. \xe2\x80\xa6BlReturns true if this class has been negated.CnIs this a \xe2\x80\x9cprimary\xe2\x80\x9d span \xe2\x80\x93 meaning the point, or one \xe2\x80\xa6ChReturns true when this NFA is meant to be matched in \xe2\x80\xa6CkReturns true if the given ID represents a \xe2\x80\x9cspecial\xe2\x80\x9d \xe2\x80\xa6DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6CnReturn true if and only if this represents a lazy state ID \xe2\x80\xa6An1-based. The line in the file.ClReturns an iterator over line break opportunities in the \xe2\x80\xa6CmCreates a new span with the same name resolution behavior \xe2\x80\xa6CmConstructs a helper for peeking at the next token in this \xe2\x80\xa6BnReturns the match kind used by this automaton.B`Set the desired match semantics.BoSet the match semantics for this configuration.CdReturns the match kind used by this packed searcher.CmReturns the match semantics that this automaton was built \xe2\x80\xa6333CaSet the match semantics for a <code>Regex</code>.444CfReturns the set of regexes that match in the given \xe2\x80\xa60ChThe span located at the invocation of the procedural \xe2\x80\xa6CgThis configures multi-line mode for the entire pattern.ChThis configures multi-line mode for all of the patterns.10CjEnable or disable the multi-line matching flag by default.0DfEnable or disable the multi-line matching flag (<code>m</code>) by \xe2\x80\xa6BfUtilities for <code>Mutability</code>.0BfSet the nesting limit for this parser.000CiSet the nesting limit used for the regular expression \xe2\x80\xa611DaThis returns <code>Ok(Some((key, value)))</code> for the next \xe2\x80\xa60EgPerforms a state transition from <code>sid</code> for <code>byte</code> and returns \xe2\x80\xa6CiTransitions from the current state to the next state, \xe2\x80\xa6DdThis returns a <code>Ok(value)</code> for the next value in the map.0BdProvides ordinalization of a string.BcOrginalizes a <code>&amp;str</code>BdThe package this artifact belongs toBcThe package this message belongs toCbThe package this build script execution belongs toCnProvides an architecture independent implementation of the \xe2\x80\xa6ClA 128-bit vector implementation of the \xe2\x80\x9cpacked pair\xe2\x80\x9d \xe2\x80\xa6ClA 256-bit vector implementation of the \xe2\x80\x9cpacked pair\xe2\x80\x9d \xe2\x80\xa6CfParse the arguments to the attribute as a syntax tree.BgSee <code>Attribute::parse_args</code>.CdParse the tokens within the macro invocation\xe2\x80\x99s \xe2\x80\xa6BiParse the content of a file of Rust code.ClA convenience routine for parsing many patterns into HIR \xe2\x80\xa6CkA convenience routine for parsing a pattern into an HIR \xe2\x80\xa6CdInvoke parser on the content of this string literal.BkProvides conversion to pascal case strings.BlThe pattern ID that this capture belongs to.AhThe matching pattern ID.ClLower level primitive types that are useful in a variety \xe2\x80\xa6CjReturns the properties computed for this <code>Hir</code>.CkA punctuated sequence of syntax tree nodes separated by \xe2\x80\xa6CgAppends a trailing punctuation onto the end of this \xe2\x80\xa6CnAppends a syntax tree node onto the end of this punctuated \xe2\x80\xa6BcCreate a \xe2\x80\x9crepetition\xe2\x80\x9d AST item.BdCreates a repetition HIR expression.CbRepository as given in the <code>Cargo.toml</code>CeRetains only the elements specified by the predicate.CgReturns a reverse iterator over all non-overlapping \xe2\x80\xa6ChReturns a reverse iterator over all occurrences of a \xe2\x80\xa6CkThe lowest level cause of this error \xe2\x80\x94 this error\xe2\x80\x99s \xe2\x80\xa6CfCompute row minima in O(<em>m</em> + <em>n</em>) time.DhWraps the underlying slice\xe2\x80\x99s <code>rsplit_mut</code> iterator with \xe2\x80\xa6DkA speedy, non-cryptographic hashing algorithm used by <code>rustc</code>\xe2\x80\xa6FnSerde is a framework for <em><strong>ser</strong></em>ializing and <em><strong>de</strong></em>serializing \xe2\x80\xa6jSerde JSONBfSet whether the text is dimmed or not.CnUpdates this set in place with the result of inserting the \xe2\x80\xa60BjSet whether the text is italicized or not.CnSets the global logger to a <code>&amp;&#39;static Log</code>.CmUpdates this set in place with the result of removing the \xe2\x80\xa60ClCreates a new set of equivalence classes where each byte \xe2\x80\xa6CnSets the approximate size limit, in bytes, of the compiled \xe2\x80\xa6000CiIf this error occurred because the regex exceeded the \xe2\x80\xa6CjSet a size limit on the total heap used by a one-pass DFA.CgIf this error occurred because the NFA exceeded the \xe2\x80\xa6BnIndicate that a struct field has been skipped.CfIndicate that a struct variant field has been skipped.10CgUtilities for source-mapping text ranges to program \xe2\x80\xa60CnReturns the span pointing to the closing delimiter of this \xe2\x80\xa6ClReturns the last and all the rest of the elements of the \xe2\x80\xa6DhWraps the underlying slice\xe2\x80\x99s <code>splitn_mut</code> iterator with \xe2\x80\xa6CeReturns the type of starting search configuration \xe2\x80\xa6ChSets the starting state configuration for the automaton.0CgThis configures swap-greed mode for the entire pattern.ChThis configures swap-greed mode for all of the patterns.10CgEnable or disable the \xe2\x80\x9cswap greed\xe2\x80\x9d flag by default.0DhEnable or disable the \xe2\x80\x9cswap greed\xe2\x80\x9d flag (<code>U</code>) by default.BeRunning rustc and Flowistry in tests.0DkIf the cursor is pointing at a <code>TokenTree</code>, returns it along \xe2\x80\xa6DgReturns <code>Ok(true)</code> if the path points at an existing entity.CiInsert the given pattern identifier into this set and \xe2\x80\xa6CnReturns the start and end offset of the leftmost match. If \xe2\x80\xa6CkExecutes an anchored leftmost forward search and writes \xe2\x80\xa6CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa6E`Adds all elements from the row <code>from</code> into the row <code>into</code>.ChToggles whether empty matches are permitted to occur \xe2\x80\xa6C`Gets an iterator over mutable values of the map.AmThe input contains a boolean.0BgThe input contains a <code>char</code>.0AkThe input contains an enum.0BgThe input contains a <code>i128</code>.0BnThe input contains an optional that is absent.0DhThis method is called on an <code>Ast</code> after descending all of \xe2\x80\xa60DhThis method is called on an <code>Hir</code> after descending all of \xe2\x80\xa60BoThe input contains an optional that is present.0BgThe input contains a <code>u128</code>.0BjThe input contains a unit <code>()</code>.0CmWhitespace to insert if the word does not fall at the end \xe2\x80\xa6ClCreate a new span by replacing the starting the position \xe2\x80\xa6DoWrites a <code>true</code> or <code>false</code> value to the specified writer.DgWrites an integer value like <code>-123</code> to the specified writer.CiWrites a <code>null</code> value to the specified writer.DiWrite a <code>LookSet</code> as a native endian 32-bit integer to the \xe2\x80\xa60DfWrites an integer value like <code>123</code> to the specified writer.CkAn automaton for searching multiple strings in linear time.BjRun cargo with <code>--features-all</code>BfAn alternation of regular expressions.0AnAn alternation of expressions.Eh<code>IndexSet</code> specialized to the <code>bit_set::BitSet</code> implementation \xe2\x80\xa6D`<code>IndexVec</code> specialized to the <code>ArcFamily</code>.CgAn alternation such that there exists precisely two \xe2\x80\xa6AlThe <code>|=</code> operatorBcOutput of a build script execution.CfA representation of byte oriented equivalence classes.oA capture name.Co<code>(?&lt;name&gt;a)</code> or <code>(?P&lt;name&gt;a)</code>CjColorChoice represents the color preferences of an end \xe2\x80\xa6BaSpecification of a set of crates.0CeA fixed-size bitset type with a dense representation.BdInformation about a dependency kind.CnData structure sent to a <code>proc_macro_derive</code> macro.DlA <strong>data structure</strong> that can be deserialized from any data \xe2\x80\xa6CaDerive macro available if serde is built with \xe2\x80\xa6111AhThose used in tests onlyAkProhibit line breaks beforeBnAn error which may occur when exporting a typeC`A closure expression: <code>|a, b| a + b</code>.CaA for loop: <code>for pat in expr { ... }</code>.EkAddress-of operation: <code>&amp;raw const place</code> or <code>&amp;raw mut place</code>.DcAn <code>extern crate</code> item: <code>extern crate serde</code>.DdThe kind of literals to extract from an <code>Hir</code> expression.lFailure noteCfNamed fields of a struct or struct variant such as \xe2\x80\xa6BmAn iterator over all non-overlapping matches.CgAn iterator over all non-overlapping matches for an \xe2\x80\xa6CfAn iterator over all non-overlapping matches for a \xe2\x80\xa6CiAn iterator over non-overlapping substring matches in \xe2\x80\xa6BlAn item within an <code>extern</code> block.AkForm Korean syllable blocks00CeBreak before or after, except in some numeric contextDkAn unordered collections of pairs <code>(R, C)</code>, implemented with \xe2\x80\xa6Dl<code>IndexMatrix</code> specialized to the <code>bit_set::BitSet</code> \xe2\x80\xa6BmAllow only indirect line breaks between pairsCkThis error occurs when translating a pattern that could \xe2\x80\xa6CgA state identifier specifically tailored for lazy DFAs.CnAn enum representing the available verbosity level filters \xe2\x80\xa6BhThe kind of a single literal expression.BeA matcher for look-around assertions.DfAn iterator over all look-around assertions in a <code>LookSet</code>.0CnThe maximum length of string that formatting an integer of \xe2\x80\xa6CbCoherence hack for the <code>ToIndex</code> trait.0CgAn iterator over all non-overlapping matches for an \xe2\x80\xa6AhAn iterator of Messages.DhA bitset with a mixed representation, using <code>DenseBitSet</code> \xe2\x80\xa6CoA <code>usize</code> that can never be <code>usize::MAX</code>.BbAn unspecified invalid expression.Ad<code>( ... )</code>BoCursor position within a buffered token stream.AoInput to a Syn parser function.CkA segment of a path together with any path arguments on \xe2\x80\xa6BkAn iterator over all pattern IDs in an NFA.BoLimit types of a range, inclusive or exclusive.BiIterator over the entries in a directory.Eh<code>IndexSet</code> specialized to the <code>bit_set::BitSet</code> implementation \xe2\x80\xa6D`<code>IndexVec</code> specialized to the <code>RefFamily</code>.CcA by-reference adaptor for a <code>Replacer</code>.0CcA bitset specialized to <code>usize</code> indices.CfInterface between your plugin and the rustc_plugin \xe2\x80\xa60BjExtension trait for <code>SpanData</code>.0DiExtensions to the <code>ParseStream</code> API to support speculative \xe2\x80\xa6CmThe literal is written as an escape despite the fact that \xe2\x80\xa6CnA buffer that can be efficiently traversed multiple times, \xe2\x80\xa6CfAn abstract stream of tokens, or more concretely a \xe2\x80\xa6ChAn associated function within the definition of a trait.DgA trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where \xe2\x80\xa6BlA tuple struct or tuple variant pattern: \xe2\x80\xa6DfA <code>\\U</code> prefix. When used without brackets, this form is \xe2\x80\xa6CiThe input contained a unit variant that was not expected.0CaThe suggested replacement will probably not work.CkAn owned, mutable UTF-8 path (akin to <code>String</code>).CjA vacant Entry. It is part of the <code>Entry</code> enum.GgVerbatim prefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,CjVertical tab, spelled <code>\\v</code> (<code>\\x0B</code>).C`A <code>where</code> clause in a definition: \xe2\x80\xa6CnMatch a Unicode-aware word boundary. That is, this matches \xe2\x80\xa60BmReturns an iterator over the locations of \xe2\x80\xa60BdCreate a \xe2\x80\x9calternation\xe2\x80\x9d AST item.CaReturns the alternation of the given expressions.ChConverts a <code>Utf8Path</code> to a <code>Path</code>.DhCalled before every array.  Writes a <code>[</code> to the specified \xe2\x80\xa6CfLogs the time taken from the start to the end of a \xe2\x80\xa60CnBreak this word into smaller words with a width of at most \xe2\x80\xa6DgChange <code>self.break_words</code>. This controls if words longer \xe2\x80\xa6CkAllow long words to be broken if they cannot fit on a line.DhForcibly break words wider than <code>line_width</code> into smaller \xe2\x80\xa6CjReturns the number of bytes so far deserialized into a \xe2\x80\xa6AdByte string literal.DkReturns the same as <code>Regex::captures</code>, but starts the search \xe2\x80\xa60DnAsserts <code>v &lt;= Self::MAX_INDEX</code> unless Self::CHECKS_MAX_INDEX \xe2\x80\xa60CiReturns the total number of times this cache has been \xe2\x80\xa6AmCollect an iterator as a map.000BbCollect an iterator as a sequence.000DkSerialize a string produced by an implementation of <code>Display</code>\xe2\x80\xa6000DkThe colon in <code>Struct { x: x }</code>. If written in shorthand like \xe2\x80\xa6CnCopies elements from one part of the slice to another part \xe2\x80\xa6DeAlmost the same as <code>kind</code>, except when an example is a \xe2\x80\xa6CmCurrent directory of the <code>cargo metadata</code> process.CdThe default binary to run by <code>cargo run</code>.C`Set the limit on how many states use a dense \xe2\x80\xa600CcDescription as given in the <code>Cargo.toml</code>CiDeserialize this value from the given Serde deserializer.0DgEquivalent to the more common <code>Deserialize::deserialize</code> \xe2\x80\xa6110CgExtensions to the parsing API with niche applicability.ChThe top-level function that should be called by your \xe2\x80\xa60CnReturns the name of your driver binary as it\xe2\x80\x99s installed \xe2\x80\xa60DjEscapes all meta characters in <code>text</code> and writes the result \xe2\x80\xa6AkAn explanation for the codeCjPath to where the type would be exported. By default a \xe2\x80\xa6DoThe source file containing the message, if it is a <code>&#39;static</code> \xe2\x80\xa6CkSet <code>file</code> to a <code>&#39;static</code> string.BeFinds all bodies in the current crate0C`Return a mutable reference to the forward cache.CjConverts an <code>OsStr</code> to a <code>Utf8Path</code>.DhDeserialize an instance of type <code>T</code> from an I/O stream of \xe2\x80\xa60CjCreates a JSON deserializer from an <code>io::Read</code>.CmGet the equivalence class for the given haystack unit and \xe2\x80\xa6CnReturns whether the one-pass DFA regex engine may be used, \xe2\x80\xa6CiReturns whether reverse mode is enabled for this builder.CnReturns whether this configuration has enabled reverse NFA \xe2\x80\xa6BnReturns whether \xe2\x80\x9cunicode\xe2\x80\x9d mode is enabled.CiThe capture group index that this capture belongs to. \xe2\x80\xa6CiReturns true if and only if this NFA has at least one \xe2\x80\xa6CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CjThe maximum number of elements this vector can hold inlineDiInsert multiple elements at position <code>index</code>, shifting all \xe2\x80\xa6CeProvides routines for interpolating capture group \xe2\x80\xa6CnConvert this candidate into an option. This is useful when \xe2\x80\xa6EdConsumes the <code>Utf8PathBuf</code>, yielding its internal <code>String</code> \xe2\x80\xa6BlGets an iterator over the values of the map.EfReturns <code>true</code> if the <code>Utf8Path</code> is absolute, i.e., if it is \xe2\x80\xa6ClReturns true if and only if this anchor mode corresponds \xe2\x80\xa60CdReturns true if a type implements <code>Copy</code>.0EgReturns true when <code>Look::EndCRLF</code> is satisfied <code>at</code> the given \xe2\x80\xa6DkReturns the same as <code>Regex::is_match</code>, but starts the search \xe2\x80\xa6CnReturns true if and only if one of the regexes in this set \xe2\x80\xa610CgReturns true if and only if this item is a negation \xe2\x80\xa6ClReturns true if and only if this span occurs on a single \xe2\x80\xa6EaReturns <code>true</code> if the <code>Utf8Path</code> is relative, i.e., not \xe2\x80\xa6EgReturns true when <code>Look::StartLF</code> is satisfied <code>at</code> the given \xe2\x80\xa6EaReturns true if every element in <code>other</code> is also in <code>self</code>.CkDetermines if the prefix is verbatim, i.e., begins with \xe2\x80\xa6CmReturns an iterator over all elements in the tree, sorted \xe2\x80\xa6CkConfigure a limit on the length of the sequence that is \xe2\x80\xa6CjConfigure a limit on the total number of literals that \xe2\x80\xa6DeChange <code>self.line_ending</code>. This specifies which of the \xe2\x80\xa6BdLine ending used for breaking lines.A`The libs to linkClDetermines if a message logged at the specified level in \xe2\x80\xa6CbSet the look-behind byte at the start of a search.BiWhether all patterns in this set matched.0BfWhether this set contains any matches.0CgUtility function to check if the key, \xe2\x80\x9ccfg(..)\xe2\x80\x9d \xe2\x80\xa6DeReturns true when <em>all</em> of the assertions in the given set \xe2\x80\xa6CgReturns the length, in bytes, of the longest string \xe2\x80\xa600CgReturns the length (in bytes) of the longest string \xe2\x80\xa6CmReturns an iterator over all occurrences of the needle in \xe2\x80\xa6CiReturns the length, in bytes, of the shortest pattern \xe2\x80\xa6CmReturns the minimum length of a haystack that is required \xe2\x80\xa6ChReturns the length, in bytes, of the smallest string \xe2\x80\xa600ChReturns the length (in bytes) of the smallest string \xe2\x80\xa6AoThe module path of the message.AlSet <code>module_path</code>CcCreate a new lazy DFA that never matches any input.CgCreate a new one-pass DFA that never matches any input.CbReturns an NFA that never matches at any position.CnCreate a new <code>PikeVM</code> that never matches any input.DgCreate a new <code>BoundedBacktracker</code> that never matches any \xe2\x80\xa6ClCreates an error with the specified message spanning the \xe2\x80\xa6CeParses zero or more inner attributes from the stream.EeParse a pattern, possibly involving <code>|</code>, but not a leading <code>|</code>.BeParses a named (braced struct) field.CeParses zero or more outer attributes from the stream.DiQuasi-quotation macro that accepts input like the <code>quote!</code> \xe2\x80\xa6CcReturns the length of the pattern for the given ID.CcReturns the total number of patterns in this regex.CkReturns the total number of patterns compiled into this \xe2\x80\xa6CkReturns the total number of patterns matched by this regex.1CkReturns the number of patterns added to this builder so \xe2\x80\xa6CgReturns the total number of regex patterns in this NFA.33DdReturns the total number of patterns in this <code>GroupInfo</code>.ClLooks up a value by a JSON Pointer and returns a mutable \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsCkQueries the interval tree for all elements containing a \xe2\x80\xa6DiWraps the underlying slice\xe2\x80\x99s <code>rchunks_mut</code> iterator with \xe2\x80\xa6CiReplace all matches with a corresponding value in the \xe2\x80\xa6CmReplaces all non-overlapping matches in the haystack with \xe2\x80\xa60CfReset the given cache such that it can be used for \xe2\x80\xa60000EeResize ourselves in-place to <code>new_len</code>. See <code>Vec::resize_with</code>.EcResizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to \xe2\x80\xa6ClCreates a new span with the same line/column information \xe2\x80\xa6C`Return a mutable reference to the reverse cache.DkRotates our data in-place such that the first <code>mid</code> elements \xe2\x80\xa6DiWraps the underlying slice\xe2\x80\x99s <code>rsplitn_mut</code> iterator with \xe2\x80\xa6De<code>rustc_utils</code> provides a wide variety of utilities for \xe2\x80\xa6CmReturns the end offset of the leftmost match. If no match \xe2\x80\xa6DgThis is like <code>Regex::search</code>, but requires the caller to \xe2\x80\xa6BgSet whether the text is intense or not.CdSet the pattern on this <code>Captures</code> value.CkSets whether the NFA produced by this builder should be \xe2\x80\xa6DbForwards to the slice\xe2\x80\x99s <code>sort_by_key</code> implementation.CmReturns the source text behind a span. This preserves the \xe2\x80\xa6CmReturns the first and all the rest of the elements of the \xe2\x80\xa6CiSplit words into smaller words according to the split \xe2\x80\xa6CeReturns the starting state for the given anchor mode.CnReturn the ID of the start state for this lazy DFA for the \xe2\x80\xa6DfDetermines whether <code>base</code> is a prefix of <code>self</code>.DbForwards to the slice\xe2\x80\x99s <code>starts_with</code> implementation.DhRemove the item at <code>index</code> without maintaining order. See \xe2\x80\xa6DhRemove the element at position <code>index</code>, replacing it with \xe2\x80\xa6CkReturn the underlying integer as raw bytes in native endian0CmReturn the underlying small index integer as raw bytes in \xe2\x80\xa611DfConverts a <code>Utf8Path</code> to an owned <code>Utf8PathBuf</code>.CcConstruct a new <code>SmallVec</code> from a slice.CcThe sorted sequence of non-overlapping transitions.CkA dense representation of this state\xe2\x80\x99s transitions on \xe2\x80\xa6Dj<code>true</code> if this is a transparent type, e.g tuples or a list. \xe2\x80\xa6CnReturn the next match for a fallible search if one exists, \xe2\x80\xa6EdInvokes <code>try_reserve</code> on the underlying instance of <code>PathBuf</code>.DdReserve capacity for <code>additional</code> more elements to be \xe2\x80\xa6CnIterator over the type parameters in <code>self.params</code>.CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CmThe input contains a byte array. The lifetime of the byte \xe2\x80\xa60DjConstruct a pretty printer formatter that uses the <code>indent</code> \xe2\x80\xa6CjCreate a new pair of offsets from the given needle and \xe2\x80\xa6DjExtensions to the <code>ParseStream</code> API to support manipulating \xe2\x80\xa6CmAn escaped ASCII plane control character (usually escaped \xe2\x80\xa6CdThe variadic argument of a function pointer like \xe2\x80\xa6B`The <code>&amp;=</code> operatorAlThe <code>^=</code> operatorBkWrites colored buffers to stdout or stderr.A`<code>(a)</code>CiAn iterator over the names of all capture groups in a \xe2\x80\xa60ChAn iterator over all non-overlapping captures for an \xe2\x80\xa6BlA single component of a character class set.AjA Unicode character class.EcA single Unicode character class, e.g., <code>\\pL</code> or <code>\\p{Greek}</code>.CiA set of characters represented by Unicode scalar values.CmNote that this error variant is no longer used. Namely, a \xe2\x80\xa6DjA <strong>data format</strong> that can deserialize any data structure \xe2\x80\xa60CbThe type of the deserializer being converted into.110CdA structure that deserializes JSON into Rust values.0C`A <code>continue</code>, with an optional label.BfA try block: <code>try { ... }</code>.CiA generic type parameter, lifetime, or const generic: \xe2\x80\xa6ClDo not break around a following hyphen; otherwise act as \xe2\x80\xa6CbReturned by <code>Generics::split_for_impl</code>.BhAn associated type within an impl block.AjLinks a type to its index.DdThe intersection of two sets, e.g., <code>\\pN&amp;&amp;[a-z]</code>.CgA simple and generic implementation of an immutable \xe2\x80\xa6Bj<code>(?:a)</code> and <code>(?i:a)</code>BoA reference pattern: <code>&amp;mut var</code>.C`A configurable builder for a <code>Regex</code>.0AoThe repetition operator itself.DeType returned from <code>serialize_map</code> for serializing the \xe2\x80\xa6CeReturned from <code>Serializer::serialize_map</code>.1101DeType returned from <code>serialize_seq</code> for serializing the \xe2\x80\xa6CeReturned from <code>Serializer::serialize_seq</code>.1101CgRun cargo with <code>--features &lt;FEATURES&gt;</code>CfThis error occurs when an ID could not be constructed.ChThis error occurs when a value could not be constructed.BoAn iterator that moves out of an interval tree.CjThe input contained a tuple variant that was not expected.0CbReturned by <code>Generics::split_for_impl</code>.DfA <code>\\u</code> prefix. When used without brackets, this form is \xe2\x80\xa6CjEntries returned by the <code>ReadDirUtf8</code> iterator.CbUtf8Sequence represents a sequence of byte ranges.C`Verbatim disk prefix, e.g., <code>\\\\?\\C:</code>.CkAn abstract syntax tree for a singular expression along \xe2\x80\xa6o<code>\\b</code>CjMatch the end of an ASCII-only word boundary. That is, \xe2\x80\xa60DfThe <code>WordSplitter</code> enum describes where words can be split.CnReturn the next half match for an infallible search if one \xe2\x80\xa6CiA library for finding occurrences of many patterns at \xe2\x80\xa6ClReturns the total number of elements in the alphabet for \xe2\x80\xa6CgReturn the total number of elements in the alphabet \xe2\x80\xa6BoCreate a new lazy DFA that matches every input.CcCreate a new one-pass DFA that matches every input.CjReturns an NFA with a single regex pattern that always \xe2\x80\xa6CjCreate a new <code>PikeVM</code> that matches every input.DfCreate a new <code>BoundedBacktracker</code> that matches every input.DiIf the <code>Value</code> is an Array, returns the associated mutable \xe2\x80\xa6CbGet a mutable IndexSlice over this vector. See \xe2\x80\xa6BnExtracts a mutable slice of the entire vector.CmReturns the remaining items of this iterator as a mutable \xe2\x80\xa6CiReturn the underlying data of the buffer as a mutable \xe2\x80\xa6ChReturn mutable references to the forward and reverse \xe2\x80\xa6AmReturns the underlying slice.BlGet a the storage as a <code>&amp;[T]</code>CaReturns the underlying vector as a mutable slice.EaTurn a type\xe2\x80\x99s generics like <code>&lt;X, Y&gt;</code> into a turbofish like \xe2\x80\xa6BoParses the literal into a selected number type.DiCalled before every object.  Writes a <code>{</code> to the specified \xe2\x80\xa6DgCalled before each series of <code>write_string_fragment</code> and \xe2\x80\xa6CnA debug settting for whether to attempt to shrink the size \xe2\x80\xa6CmA debug setting for whether to attempt to shrink the size \xe2\x80\xa60CmWhether to attempt to shrink the size of the alphabet for \xe2\x80\xa6CmReturns the equivalence classes that make up the alphabet \xe2\x80\xa6CmWhether to attempt to shrink the size of the lazy DFA\xe2\x80\x99s \xe2\x80\xa6ChWhether to attempt to shrink the size of the DFA\xe2\x80\x99s \xe2\x80\xa6BbGet the byte classes for this NFA.CmReturns the canonical, absolute form of the path with all \xe2\x80\xa6CdReturns the number of captures groups in this regex.0BmReturns the total number of capturing groups.DjWraps the underlying slice\xe2\x80\x99s <code>chunks_exact</code> iterator with \xe2\x80\xa6Aj1-based, character offset.AiConvenience alias for \xe2\x80\xa6DbIterator over the constant parameters in <code>self.params</code>.BkReturns true if the cache contains the key.CnReturns true if the map contains a value for the specified \xe2\x80\xa6ClCreates a new cache for use with lower level search APIs \xe2\x80\xa6BeCreate a new cache for this lazy DFA.BoCreate a new cache for this <code>Regex</code>.B`Create a new cache for this DFA.C`Create a new cache for this <code>PikeVM</code>.BbCreate a new cache for this regex.CnForwards to the <code>Vec::dedup_by_key</code> implementation.CfRemoves consecutive elements that map to the same key.BfProvides deordinalization of a string.BeDeorginalizes a <code>&amp;str</code>CnList of opaque identifiers for this node\xe2\x80\x99s dependencies. \xe2\x80\xa6BoList of dependencies of this particular packageCnInformation about types this type depends on. This is used \xe2\x80\xa6CmReturns the set of all node that are control-dependent on \xe2\x80\xa6BoExplicit discriminant: <code>Variant = 1</code>C`Downcast this error object by mutable reference.DbForwards to the method defined on the type <code>dyn Error</code>.0CnReturns some mutable reference to the inner value if it is \xe2\x80\xa6BhDowncast this error object by reference.22CnReturns some reference to the inner value if it is of type \xe2\x80\xa6BnCreates a new suffixed floating-point literal.0DfFill <code>text</code> in-place without reallocating the input string.CfFormatting macro for constructing <code>Ident</code>s.ChConstruct this index type from one in a different domainCgReturn the anchored mode for this search configuration.0BoReturn the anchored mode in this configuration.CkReturn whether NFA compilation is configured to produce \xe2\x80\xa6CnReturn whether this search should execute in \xe2\x80\x9cearliest\xe2\x80\x9d\xe2\x80\xa60CmCreates a new suffixed integer literal with the specified \xe2\x80\xa600CgA simple and generic implementation of an immutable \xe2\x80\xa6DiRaised when a <code>Deserialize</code> receives a type different from \xe2\x80\xa60CmReturns true when this implementation is available in the \xe2\x80\xa60000000CdReturns true if and only if this group is capturing.BhReturns true if the source is crates.io.D`Compare <code>n</code> bytes at the given pointers for equality.CmReturns true if and only if every byte in this class maps \xe2\x80\xa6ClReturns true when this unit corresponds to an ASCII word \xe2\x80\xa6CiReturns true if and only if the given character is an \xe2\x80\xa6CiWhether the character has the Unicode property XID_Start.CjFull path to the license file if one is present in the \xe2\x80\xa6CkIf the package is using a nonstandard license, this key \xe2\x80\xa6CmConfigure a limit on the total number of repetitions that \xe2\x80\xa6BgThe paths to search when resolving libsCnSets the look-around matcher that should be used with this \xe2\x80\xa6CiReturns the look-around matcher associated with this NFA.ChReturns the union of all look-around assertions used \xe2\x80\xa6CbMake all of the literals in this sequence inexact.AnMarks this literal as inexact.CkThis follows the matching transition for a particular byte.0CmReturns true if the given byte falls in this transition\xe2\x80\x99\xe2\x80\xa6CiReturns true if the given alphabet unit falls in this \xe2\x80\xa6CnReturns an iterator over all occurrences of the needles in \xe2\x80\xa60CmReturns the approximate total amount of heap used by this \xe2\x80\xa60CiReturns the heap memory usage, in bytes, used by this \xe2\x80\xa6ClReturn the total approximate heap memory, in bytes, used \xe2\x80\xa6CgReturns the heap memory usage, in bytes, of this cache.CeReturns the memory usage, in bytes, of this lazy DFA.1ClReturns the heap memory usage, in bytes, as a sum of the \xe2\x80\xa6C`Returns the memory usage, in bytes, of this DFA.3ClReturns the heap memory usage, in bytes, used by the NFA \xe2\x80\xa6C`Returns the memory usage, in bytes, of this NFA.55DcReturns the memory usage, in bytes, of this <code>GroupInfo</code>.CmReturns the heap memory, in bytes, used by the underlying \xe2\x80\xa6ClReturns the total amount of heap memory usage, in bytes, \xe2\x80\xa6CmReturns an iterator over all occurrences of the needle in \xe2\x80\xa6DiOptionally modify the <code>cargo</code> command that launches rustc. \xe2\x80\xa6000DjLike <code>new</code>, but builds a one-pass DFA directly from an NFA. \xe2\x80\xa6DiLike <code>new</code>, but builds a PikeVM directly from an NFA. This \xe2\x80\xa6gExampleDgThis returns <code>Ok(Some(value))</code> for the next value in the \xe2\x80\xa60BmReturn a fixed unchanging replacement string.0CbReturn a fixed unchanging replacement byte string.0DoParse a pattern that does <em>not</em> involve <code>|</code> at the top level.CkCreates an iterator of Message from a Read outputting a \xe2\x80\xa6CiParse the body of a block as zero or more statements, \xe2\x80\xa6CgReturn the total number of patterns matched by this \xe2\x80\xa6CkReturns the total number of patterns compiled into this \xe2\x80\xa6CgThis crate provides a robust regular expression parser.ClRemoves a key from the map, returning the stored key and \xe2\x80\xa6ClRemoves the entry from the map, returning the stored key \xe2\x80\xa6DkError if this is a <code>Meta::Path</code> or <code>Meta::NameValue</code>.BoGet the root package of this metadata instance.CaRotates our data in-place such that the first \xe2\x80\xa6CcThe minimum supported Rust version of this package.CkA framework for writing plugins that integrate with the \xe2\x80\xa6CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa60ChInitializes a new search starting at the given position.CiProvides conversion to and detection of sentence case \xe2\x80\xa6C`This crate provides Serde\xe2\x80\x99s two derive macros.BcSerialize an <code>i8</code> value.000BbSerialize a <code>u8</code> value.000B`Set the anchor mode of a search.0CkSet whether the search should execute in \xe2\x80\x9cearliest\xe2\x80\x9d \xe2\x80\xa60ClUpdates this set in place with the result of subtracting \xe2\x80\xa60CeMIR pass to remove instructions not important for \xe2\x80\xa6BgDivides our slice into two at an index.DaReturn all possible indices where <code>word</code> can be split.EbReturns a path that, when joined onto <code>base</code>, yields <code>self</code>.CgIf this error corresponds to a syntax error, then a \xe2\x80\xa6DhPublic implementation details for the <code>TokenStream</code> type, \xe2\x80\xa6CkCopies all remaining tokens visible from this cursor into a?ClReturns true if and only if this regex matches the given \xe2\x80\xa6CmCreates a new suffixed integer literal with the specified \xe2\x80\xa600CcCalled when deserializing a variant with no values.0Dh<code>variant</code> is called to identify which variant to deserialize.0CnThe input contains a string and ownership of the string is \xe2\x80\xa60ChWrap the error value with additional context that is \xe2\x80\xa6ClCreate a new pair using the offsets given for the needle \xe2\x80\xa6DjIn some positions, types may not contain the <code>+</code> character, \xe2\x80\xa6C`Wrap text into columns with a given total width.ClMatches any byte value except for the <code>u8</code> given.CjMatches the UTF-8 encoding of any Unicode scalar value \xe2\x80\xa6BkWhether a suggestion can be safely applied.AbAn assertion kind.AhFinal result of a build.AgThe build has finished.DjOptional build metadata identifier. This comes after <code>+</code> in \xe2\x80\xa6BhAn iterator over each equivalence class.BnSingle parameter in a precise capturing bound.CeError during execution of <code>cargo metadata</code>CgAn error that occurs when Unicode-aware simple case \xe2\x80\xa6CnA fixed-size bitset type with a partially dense, partially \xe2\x80\xa6BeThe available Perl character classes.BhA single character class range in a set.BnA union of items inside a character class set.EaAn opening <code>[</code> was found with no corresponding closing <code>]</code>.CgProhibit a line break between the character and the \xe2\x80\xa6CkState during the rust compilation. Most of the time you \xe2\x80\xa6AeUse a contiguous NFA.EcProvides a convenient <code>Debug</code> implementation for <code>&amp;[u8]</code>.CnA mapping from indexed keys to values, implemented densely \xe2\x80\xa6BfDo not break from preceding Emoji BaseDhA referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.CmUnnamed fields of a tuple struct or tuple variant such as \xe2\x80\xa6CmA builder for constructing non-default forward or reverse \xe2\x80\xa6BnA flag was used twice, e.g., <code>i-i</code>.BhThe kind of an item in a group of flags.CcA foreign function in an <code>extern</code> block.DdA possible error value while converting a <code>Path</code> to a \xe2\x80\xa6EcAn implementation of <code>BuildHasher</code> that produces <code>FxHasher</code>s.DjType alias for a hashmap using the <code>fx</code> hash algorithm with \xe2\x80\xa60Ef<code>FxSeededState</code> is an alternative state for <code>HashMap</code> types, \xe2\x80\xa6BjAn unclosed group, e.g., <code>(ab</code>.BjAn unopened group, e.g., <code>ab)</code>.AjA hyperlink specification.D`Specialized formatting trait used by <code>format_ident!</code>.BhThis is the equivalent of the sealed \xe2\x80\xa6BlAn associated constant within an impl block.BhA macro invocation within an impl block.BaAn indexed collection of objects.CnUse leftmost-first match semantics, which reports leftmost \xe2\x80\xa60ClReport only the leftmost matches. When multiple leftmost \xe2\x80\xa6DeA lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.BiUsed to represent dependencies of places.BoA name-value pair within an attribute, like \xe2\x80\xa6CkThe input contained a newtype struct that was not expected.0DiUse this as a <code>Options.word_splitter</code> to avoid any kind of \xe2\x80\xa6CmAn occupied Entry. It is part of the <code>Entry</code> enum.AmJust crates in the workspace.DdOverflow error during the <code>wrap_optimal_fit</code> computation.DaThe <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.BjA builder for a regular expression parser.0ChAngle bracketed or parenthesized arguments of a path \xe2\x80\xa6B`Abstraction over smart pointers.CdA type predicate in a <code>where</code> clause: \xe2\x80\xa6B`Builder for <code>Record</code>.CkThe input contained a struct variant that was not expected.0CdAn associated type within the definition of a trait.EdAn <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a \xe2\x80\xa6DoA reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.CiAn iterator over <code>Utf8Path</code> and its ancestors.AmA single component of a path.CiAn iterator over ranges of matching UTF-8 byte sequences.Db<code>VariantAccess</code> is a visitor that is created by the \xe2\x80\xa60DiA visibility level restricted to some path: <code>pub(self)</code> or \xe2\x80\xa6DiA configuration indicating which kinds of <code>State::Capture</code> \xe2\x80\xa6BnDescribes where words occur in a line of text.BgDescribes how to wrap words into lines.CmMakes the path absolute without accessing the filesystem, \xe2\x80\xa6ChReturn the total number of capture groups across all \xe2\x80\xa6CeReturns an iterator over all the locations in a body.DjIf the <code>Value</code> is an Object, returns the associated mutable \xe2\x80\xa6CnIf this body is an async function, then return the type of \xe2\x80\xa6DjCall <code>slice::binary_search</code> converting the indices it gives \xe2\x80\xa6CjBuild a forward finder using the given needle from the \xe2\x80\xa6CjBuild a reverse finder using the given needle from the \xe2\x80\xa6CiReturns the capture index of this group, if this is a \xe2\x80\xa6CiReturns an iterator over the capture names in this regex.0CnReturns an iterator that yields successive non-overlapping \xe2\x80\xa60DfReturns an iterator over all non-overlapping <code>Captures</code> \xe2\x80\xa60DjThis is like <code>Regex::captures</code>, but writes the byte offsets \xe2\x80\xa60DhBuilds a command for <code>cargo metadata</code>.  This is the first \xe2\x80\xa6BfCreate a \xe2\x80\x9cUnicode class\xe2\x80\x9d AST item.CiCompute column minima in O(<em>m</em> + <em>n</em>) time.CjReturns true if and only if this set contains any word \xe2\x80\xa60CmModify this sequence to contain the cross product between \xe2\x80\xa60Bgspan where macro was defined (if known)DkCompute the display width of <code>text</code> while skipping over ANSI \xe2\x80\xa6CiDocumentation URL as given in the <code>Cargo.toml</code>CkThis is a convenience routine for extracting the substringsCmPrint a floating point number into this buffer and return \xe2\x80\xa6CkDecode this value from the bytes given using the native \xe2\x80\xa60CjDecode this small index from the bytes given using the \xe2\x80\xa611EgCreates a new <code>Utf8PathBuf</code> from a <code>PathBuf</code> containing valid \xe2\x80\xa6CmReturns whether the bounded backtracking regex engine may \xe2\x80\xa6CbReturns the key-value pair matching the given key.CgReturns a manually set prefilter, if one was set by \xe2\x80\xa6CnReturns the prefilter set in this configuration, if one at \xe2\x80\xa600BoReturns a reference to a value for a given key.0CiEnd of the section of the line to highlight. 1-based, \xe2\x80\xa6CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6CkReturns an iterator over the regions appearing within a \xe2\x80\xa6DiConvert an iterator of anything into <code>FallibleIterator</code> by \xe2\x80\xa6EdConverts self into a <code>std::io::Error</code> with kind <code>InvalidData</code>.000EgConverts a <code>Box&lt;Utf8Path&gt;</code> into a <code>Utf8PathBuf</code> without \xe2\x80\xa6DjReturns the <code>PathBuf</code> that was attempted to be converted to \xe2\x80\xa6DhRaised when a <code>Deserialize</code> receives a value of the right \xe2\x80\xa60ClThe kind reported by the underlying standard library I/O \xe2\x80\xa6CiDetermines if a <code>&amp;str</code> is camelCase bool``D`Determines if a <code>&amp;str</code> is <code>kebab-case</code>D`Determines of a <code>&amp;str</code> is <code>snake_case</code>EeReturns true when <code>Look::StartCRLF</code> is satisfied <code>at</code> the givenD`Determines if a <code>&amp;str</code> is <code>Title Case</code>D`Determines if a <code>&amp;str</code> is <code>Train-Case</code>EeReturns true when <code>Look::WordAscii</code> is satisfied <code>at</code> the givenDbIterator over the lifetime parameters in <code>self.params</code>.BoConverts this sequence to an infinite sequence.AoPath to <code>Cargo.toml</code>BkPath containing the <code>Cargo.toml</code>DkReturns the pattern ID for the match state given by <code>sid</code> at \xe2\x80\xa6CkReturns the pattern ID corresponding to the given match \xe2\x80\xa6ChReturn the maximum length of the sequence that would \xe2\x80\xa60CnReturns an iterator over all occurrences of the needles in \xe2\x80\xa60DjRaised when a <code>Deserialize</code> struct type expected to receive \xe2\x80\xa60CiCreate a new value without checking whether the given \xe2\x80\xa60CmCreate a new finder specific to SSE2 vectors and routines \xe2\x80\xa600CmCreate a new finder specific to AVX2 vectors and routines \xe2\x80\xa600CiCreate a new small index without checking whether the \xe2\x80\xa633DkThis returns <code>Ok(Some(key))</code> for the next key in the map, or \xe2\x80\xa60CiPer-line penalty. This is added for every line, which \xe2\x80\xa6CbProvides a noncontiguous NFA implementation of \xe2\x80\xa6DkArbitrary command line flags to pass to <code>cargo</code>.  These will \xe2\x80\xa6CjParse a set of parentheses and expose their content to \xe2\x80\xa6BgParses an unnamed (tuple struct) field.ClReturn an iterator of all capture groups and their names \xe2\x80\xa6CkDisplayed width of the penalty that must be inserted if theDgSame as <code>quote!</code>, but applies a given span to all tokens \xe2\x80\xa6DkWraps the underlying slice\xe2\x80\x99s <code>rchunks_exact</code> iterator with \xe2\x80\xa6ChReturns an iterator over the entries within a directory.CnAn error if this path is not a single ident, as defined in \xe2\x80\xa6EhInvokes <code>reserve_exact</code> on the underlying instance of <code>PathBuf</code>\xe2\x80\xa6DjReserve the minimum capacity for <code>additional</code> more elements \xe2\x80\xa6CkIndicates that a search has finished at the given position.CmUpdates the current search to indicate that it has search \xe2\x80\xa6BdSerialize an <code>f32</code> value.000BdSerialize an <code>f64</code> value.000BdSerialize an <code>i16</code> value.000BdSerialize an <code>i32</code> value.000BdSerialize an <code>i64</code> value.000AdSerialize a map key.0CkBegin to serialize a map. This call must be followed by \xe2\x80\xa6000CkBegin to serialize a variably sized sequence. This call \xe2\x80\xa6000BbSerialize a <code>&amp;str</code>.000BcSerialize a <code>u16</code> value.000BcSerialize a <code>u32</code> value.000BcSerialize a <code>u64</code> value.000CnUpdates <code>self.extension</code> to <code>extension</code>.CnUpdates <code>self.file_name</code> to <code>file_name</code>.BhSet the current hyperlink of the writer.CmUpdates this set in place with the result of intersecting \xe2\x80\xa60BbSets the global maximum log level.BjSet whether the text is underlined or not.EhInvokes <code>shrink_to_fit</code> on the underlying instance of <code>PathBuf</code>\xe2\x80\xa6CgShrinks the capacity of the vector as much as possible.CfShrink the capacity of the vector as much as possible.DdForwards to the slice\xe2\x80\x99s <code>sort_unstable</code> implementation.CmDivides the string at the last index where further breaks \xe2\x80\xa6BlStart the assembly of a pattern in this NFA.CmReturn the state identifier of the initial anchored state \xe2\x80\xa6EmTrue if the <code>?P&lt;</code> syntax is used and false if the <code>?&lt;</code> syntax \xe2\x80\xa6BiGet whether this is strikethrough or not.ClIf this class consists of only ASCII ranges, then return \xe2\x80\xa6DaConverts a <code>&amp;str</code> to camelCase <code>String</code>DoConverts a <code>&amp;str</code> to <code>kebab-case</code> <code>String</code>DoConverts a <code>&amp;str</code> to <code>snake_case</code> <code>String</code>DoConverts a <code>&amp;str</code> to <code>Title Case</code> <code>String</code>DoConverts a <code>&amp;str</code> to <code>Train-Case</code> <code>String</code>CjSerialize the given data structure as a pretty-printed \xe2\x80\xa60CmReturns an iterator of non-overlapping matches, using the \xe2\x80\xa6ClReturns an iterator of non-overlapping matches with this \xe2\x80\xa6CiReturns an iterator over all non-overlapping leftmost \xe2\x80\xa6BoCalled when deserializing a tuple-like variant.0CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsEgDetermine displayed width of <code>char</code> and <code>str</code> types according \xe2\x80\xa6FeAdds each element of <code>other</code> to <code>self</code>, returning true if <code>self</code> \xe2\x80\xa6FcAdds all ones from <code>other</code> to <code>self</code>, returning true if <code>self</code> \xe2\x80\xa6DgRaised when a <code>Deserialize</code> struct type received a field \xe2\x80\xa60DhCreates a new <code>Utf8PathBuf</code> with a given capacity used to \xe2\x80\xa6DfConstruct an IndexVec that can hold at least <code>capacity</code> \xe2\x80\xa6CfMakes a new empty Map with the given initial capacity.CbConstruct an empty vector with enough capacity \xe2\x80\xa6EhChange <code>self.word_splitter</code>. The <code>WordSplitter</code> is used to fit \xe2\x80\xa6CgThe method for splitting words. This can be used to \xe2\x80\xa6EeThe <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.Dl<code>IndexMatrix</code> specialized to the <code>bit_set::BitSet</code> \xe2\x80\xa6CiProvide a line break opportunity before and after the \xe2\x80\xa6DiA set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.CmAn iterator over all non-overlapping capture matches in a \xe2\x80\xa60CmCarriage return, spelled <code>\\r</code> (<code>\\x0D</code>).DkAn escaped carriage return character (usually escaped as <code>\\r</code>\xe2\x80\xa6CdCause a line break (after), except between CR and LFBfThe available ASCII character classes.CiA bracketed character class, e.g., <code>[a-z0-9]</code>.CmA single bracketed character class set, which may contain \xe2\x80\xa6CfAn iterator over all ranges in a byte character class.CbProgrammatically build a rustc compilation sessionCiThe compiled program exceeded the set size limit. The \xe2\x80\xa6CnProvide a line break opportunity contingent on additional, \xe2\x80\xa6CkAn invalid decimal number was given where one was expected.BdDependencies can come in three kindsBmThe error code associated to this diagnostic.CiA section of the source code associated with a DiagnosticBbA bracketed hex literal was empty.CnA method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.DeA possible error value while converting a <code>OsStr</code> to a \xe2\x80\xa6CoAn error that may occur when building a <code>GroupInfo</code>.DbA capture group name is empty, e.g., <code>(?P&lt;&gt;abc)</code>.BbThe type of a Unicode hex literal.E`<code>HyphenSplitter</code> is the default <code>WordSplitter</code> used by \xe2\x80\xa6BjA deserializer holding an <code>i8</code>.0DoThis trait to function in API signatures where <code>Vec&lt;T&gt;</code> or \xe2\x80\xa6BkPrevent breaks after any and before numericDdA block of foreign items: <code>extern &quot;C&quot; { ... }</code>.DkA trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>\xe2\x80\xa6DiA grouping token that surrounds a macro body: <code>m!(...)</code> or \xe2\x80\xa6CaThe underlying kind of a <code>MatchError</code>.0CfThe suggested replacement may be incorrect in some \xe2\x80\xa6CfThe input contained a newtype variant that was not \xe2\x80\xa60BlA tuple struct or tuple variant pattern: \xe2\x80\xa6CfThis error occurs when an ID could not be constructed.ChThis error occurs when a value could not be constructed.DfAn iterator over all pattern identifiers in a <code>PatternSet</code>.EhA MIR <code>Visitor</code> which collects all <code>Place</code>s that appear in the \xe2\x80\xa6ClRepresents the post-dominators of a graph\xe2\x80\x99s nodes with \xe2\x80\xa6ChPrecise capturing bound: the \xe2\x80\x98use&lt;\xe2\x80\xa6&gt;\xe2\x80\x99 in \xe2\x80\xa6Dl<code>IndexMatrix</code> specialized to the <code>bit_set::BitSet</code> \xe2\x80\xa6BbThe kind of a repetition operator.BiAn escaped reverse solidus <code>\\</code>CmAn error that occurs when serializing an object from this \xe2\x80\xa6DgType returned from <code>serialize_tuple</code> for serializing the \xe2\x80\xa6CgReturned from <code>Serializer::serialize_tuple</code>.1101EgThe type returned by <code>set_logger</code> if <code>set_logger</code> has already \xe2\x80\xa6ClA borrowed iterator over the set of matches from a regex \xe2\x80\xa60CfA mapping from indexed keys to values, implemented \xe2\x80\xa6EgSatisfies <code>io::Write</code> and <code>WriteColor</code>, and supports optional \xe2\x80\xa6CjAn iterator that reports Aho-Corasick matches in a stream.BmAn iterator that reports matches in a stream.CjTokenStream extension trait with methods for appending \xe2\x80\xa6ChAn associated constant within the definition of a trait.CdA macro invocation within the definition of a trait.CfAn iterator over all non-overlapping matches for a \xe2\x80\xa60ChA trait or lifetime used as a bound on a type parameter.BiA deserializer holding a <code>u8</code>.0CcUsed to describe aliases of owned and raw pointers.DlAn iterator over the <code>Utf8Component</code>s of a <code>Utf8Path</code>.EnA single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.CkMatch the end of a Unicode word boundary. That is, this \xe2\x80\xa60ClMatch the start of an ASCII-only word boundary. That is, \xe2\x80\xa60AkProvide a break opportunityCgToggles whether automatic prefilter support is enabled.ClReturn an auxiliary span. This span exists only for some \xe2\x80\xa6CjPolonius integration to extract borrowck facts from rustc.CiReturns the line break property of the specified code \xe2\x80\xa6DiBuilds a <code>Regex</code> directly from an <code>Hir</code> expression.ClCompile the given high level intermediate representation \xe2\x80\xa6AoBuild a DFA from the given NFA.0CbBuild a <code>PikeVM</code> directly from its NFA.CnBuild a <code>BoundedBacktracker</code> directly from its NFA.AgByte character literal.ChSets the maximum amount of heap memory, in bytes, to \xe2\x80\xa6DfStructured access to the output of <code>cargo metadata</code> and \xe2\x80\xa6BbPlatform definition used by Cargo.CmCompare the major, minor, patch, and pre-release value of \xe2\x80\xa60CnReturns true if <code>index</code> is contained in the domain.CnReturns true if <code>value</code> is contained in the domain.ClDefine a type that supports parsing and printing a given \xe2\x80\xa6EbHint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.000EaHint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.000CkSet the approximate capacity, in bytes, of the cache of \xe2\x80\xa6000CmSets the size limit, in bytes, for heap memory used for a \xe2\x80\xa6DiCalled after every object key.  A <code>:</code> should be written to \xe2\x80\xa6C`Creates a new unsuffixed floating-point literal.0CeRun this finder on the given haystack as a prefilter.00BmFinish the assembly of a pattern in this NFA.EcCreates a new <code>Utf8PathBuf</code> from an <code>OsString</code> containing \xe2\x80\xa6BnCreate a IdxSlice from its pointer and length.DgCreates a <code>SmallVec</code> directly from the raw components of \xe2\x80\xa6ClConstruct a new mutable IdxSlice by wrapping an existing \xe2\x80\xa6CkReturns the match kind on this configuration, as set by \xe2\x80\xa6CfReturns the match semantics set in this configuration.00CaReturns whether \xe2\x80\x9cmulti line\xe2\x80\x9d mode is enabled.BeReturns the \xe2\x80\x9cnest limit\xe2\x80\x9d setting.CkReturns the DFA size limit of this configuration if one \xe2\x80\xa6BkReturn the currently configured size limit.CaReturns whether \xe2\x80\x9cswap greed\xe2\x80\x9d mode is enabled.CjReturns whether empty matches must fall on valid UTF-8 \xe2\x80\xa6BgPenalty for lines ending with a hyphen.CeCreates a new unsuffixed integer literal with the \xe2\x80\xa600DgChange <code>self.initial_indent</code>. The initial indentation is \xe2\x80\xa6CjIndentation used for the first line of output. See the \xe2\x80\xa6CfReturns all possible projections of <code>self</code>.EfConsumes the <code>Utf8PathBuf</code>, yielding its internal <code>OsString</code> \xe2\x80\xa6DkReturns the <code>OsString</code> that was attempted to be converted to \xe2\x80\xa6CmRaised when deserializing a sequence or map and the input \xe2\x80\xa60ClReturns true if this regex has a high chance of being \xe2\x80\x9c\xe2\x80\xa6DcDetermines if a <code>&amp;str</code> is a <code>foreign_key</code>CjDetermines if a <code>&amp;str</code> is pascalCase bool``CjReturns true if and only if the underlying writer must \xe2\x80\xa6CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CiReturn the length of the longest needle in this PrefilterCiMerges all overlapping spans in the input vector into \xe2\x80\xa6ClTransitions from the current state to the next state for \xe2\x80\xa6CdSets the size limit, in bytes, to enforce on the \xe2\x80\xa6ClSets an approximate size limit on the total heap used by \xe2\x80\xa6CnEnsures a value is in the entry by inserting the result of \xe2\x80\xa6CkCreates an iterator of Message from a Read outputting a \xe2\x80\xa6CkReads a symbolic link, returning the file that the link \xe2\x80\xa6CmThis crate exposes a variety of regex engines used by the \xe2\x80\xa6DjAppends possibly empty data to <code>dst</code> to replace the current \xe2\x80\xa60BdSerialize a <code>bool</code> value.000AfSerialize a character.000BeSerialize an <code>i128</code> value.000BdSerialize a <code>None</code> value.000BgSerialize a <code>Some(T)</code> value.000BdSerialize a <code>u128</code> value.000BbSerialize a <code>()</code> value.000BcSet the size limit on this builder.CiReturns the end byte offset of the first match in the \xe2\x80\xa60CnSplit a type\xe2\x80\x99s generics into the pieces required for impl\xe2\x80\xa6ClReturns the last and all the rest of the elements of the \xe2\x80\xa6CmReturn the state identifier of the initial anchored state \xe2\x80\xa6C`Called when deserializing a struct-like variant.0CnReturns true if and only if the underlying writer supports \xe2\x80\xa6CnConverts a <code>&amp;str</code> to a <code>foreign_key</code>DbConverts a <code>&amp;str</code> to pascalCase <code>String</code>CkDetermines whether this punctuated sequence ends with a \xe2\x80\xa6CmExecutes a forward search and returns the end position of \xe2\x80\xa6CjExecutes a reverse search and returns the start of the \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa600DfAdds all elements of <code>from</code> into the row <code>into</code>.CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CmThe input contains a byte array and ownership of the byte \xe2\x80\xa60CfConfigures what kinds of groups are compiled as \xe2\x80\x9c\xe2\x80\xa6CmConfigures what kinds of capture groups are compiled into \xe2\x80\xa6EgCreates an owned <code>Utf8PathBuf</code> like <code>self</code> but with the given \xe2\x80\xa60CnCreates a new JSON visitor whose output will be written to \xe2\x80\xa6BhChange <code>self.word_separator</code>.DjThe line breaking algorithm to use, see the <code>WordSeparator</code> \xe2\x80\xa6AmWord splitting functionality.nWorkspace rootBhChange <code>self.wrap_algorithm</code>.CmWrapping algorithm to use, see the implementations of the \xe2\x80\xa6CgWrap abstract fragments into lines with a first-fit \xe2\x80\xa6ChThe type of Aho-Corasick implementation to use in an \xe2\x80\xa6CbMatches any byte value except for <code>\\n</code>.CjMatches the UTF-8 encoding of any Unicode scalar value \xe2\x80\xa6CnProfile settings used to determine which compiler flags to \xe2\x80\xa6CnAn iterator over all non-overlapping leftmost matches with \xe2\x80\xa6CjAn iterator over all non-overlapping leftmost matches, \xe2\x80\xa6n<code>i</code>CiA single range of characters represented by arbitrary \xe2\x80\xa6AlMessage left by the compilerBgThe compiler wants to display a messageDd<code>DenseIndexMap</code> specialized to the <code>RcFamily</code>.Ee<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> \xe2\x80\xa60AdThe diagnostic levelBkA deserializer holding an <code>f32</code>.0BkA deserializer holding an <code>f64</code>.0BoUnused, but reserved for RFC 3323 restrictions.DgA foreign type in an <code>extern</code> block: <code>type void</code>.FcAn individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.ClAn iterator over all non-overlapping half matches for an \xe2\x80\xa6CmThe suggested replacement has placeholders that will need \xe2\x80\xa6ChThis error occurs if the haystack given to the regex \xe2\x80\xa6BkA deserializer holding an <code>i16</code>.0BkA deserializer holding an <code>i32</code>.0BkA deserializer holding an <code>i64</code>.08DcAn <code>extern crate</code> item: <code>extern crate serde</code>.CgUse leftmost-longest match semantics, which reports \xe2\x80\xa60BhA deserializer that iterates over a map.0BbBuilder for <code>Metadata</code>.DcA builder for configurating <code>cargo metadata</code> invocation.BeProhibit line breaks before and aftero<code>\\B</code>AjProhibit line breaks afterCeAn error from parsing an invalid color specification.DhThe type returned by <code>from_str</code> when the string doesn\xe2\x80\x99t \xe2\x80\xa6CmContext for parsing a single property in the conventional \xe2\x80\xa6CnThis structure pretty prints a JSON value to make it human \xe2\x80\xa6CcA configurable builder for a <code>RegexSet</code>.0AlA range repetition operator.CiArguments from your plugin to the rustc_plugin framework.BmA deserializer that iterates over a sequence.0DhType returned from <code>serialize_struct</code> for serializing the \xe2\x80\xa6ChReturned from <code>Serializer::serialize_struct</code>.1101CeThis error occurs when a small index could not be \xe2\x80\xa6BoA deserializer holding a <code>&amp;str</code>.0CgAn iterator over all non-overlapping captures for a \xe2\x80\xa6DgA trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where \xe2\x80\xa6BjA deserializer holding a <code>u16</code>.0BjA deserializer holding a <code>u32</code>.0BjA deserializer holding a <code>u64</code>.0BaThe Unicode version conformed to.CmThe version of Unicode that this version of unicode-width \xe2\x80\xa6CkMethods for determining displayed width of Unicode strings.C`Match an ASCII-only negation of a word boundary.0Ad<code>\\b{end}</code>BlProhibit line breaks within joiner sequencesBbAdd a \xe2\x80\x9cend capture\xe2\x80\x9d NFA state.ChBuild a regex from its component forward and reverse \xe2\x80\xa6BhCreate a \xe2\x80\x9cbracketed class\xe2\x80\x9d AST item.ClReturns true if and only if this set contains any anchor \xe2\x80\xa60EaCopies all elements from <code>src</code> into <code>self</code>, using a memcpy.CmCreates a new object for recording capture group offsets. \xe2\x80\xa6CfCreate a new empty set of capturing groups that is \xe2\x80\xa600DhRequire the <code>Deserializer</code> to figure out how to drive the \xe2\x80\xa6000EbHint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.000EbHint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.000EcHint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.000EcHint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.000EcHint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.000DeHint that the <code>Deserialize</code> type is expecting a map of \xe2\x80\xa6000DjHint that the <code>Deserialize</code> type is expecting a sequence of \xe2\x80\xa6000DkHint that the <code>Deserialize</code> type is expecting a string value \xe2\x80\xa6000EbHint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.000EbHint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.000EbHint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.000CjSets a limit on the total number of NFA states, beyond \xe2\x80\xa6DiRaised when a <code>Deserialize</code> struct type received more than \xe2\x80\xa60DeAllow using <code>{,n}</code> as an equivalent to <code>{0,n}</code>.AoCalled after every array value.DeThis attempts to extract prefixes from the given <code>Hir</code> \xe2\x80\xa6DfFetches a <code>FromPathError</code> for more about the conversion \xe2\x80\xa6CmReturn the look-behind byte in this configuration, if one \xe2\x80\xa6CkStart of the section of the line to highlight. 1-based, \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6DhReturns all possible projections of <code>self</code> that do not go \xe2\x80\xa6DjConverts this <code>Utf8PathBuf</code> into a boxed <code>Utf8Path</code>.EeReturns true when <code>Look::WordUnicode</code> is satisfied <code>at</code> the \xe2\x80\xa6CeWhether the character has the Unicode property XID\xe2\x80\xa6EfSimilar to <code>self.iter().enumerate()</code> but with indices of <code>I</code> \xe2\x80\xa6CmReturns an iterator over the pairs of indices and objects \xe2\x80\xa6CnReturns an iterator over all pairs of indices and elements \xe2\x80\xa6DkTrims all literals in this seq such that only the last <code>len</code> \xe2\x80\xa6DeTrims this literal such that only the last <code>len</code> bytes \xe2\x80\xa6CgConfigures the line terminator to be used by the regex.000EgSet the line terminator to be used by the <code>^</code> and <code>$</code> anchors \xe2\x80\xa6EhSets the line terminator for use with <code>(?u-s:.)</code> and <code>(?-us:.)</code>\xe2\x80\xa600CnReturns a set of all look-around assertions that appear as \xe2\x80\xa60Clname of macro that was applied (e.g., \xe2\x80\x9cfoo!\xe2\x80\x9d or \xe2\x80\x9c#[\xe2\x80\xa6CkReturns the length of the longest literal in this sequence.CmReturns the length of the longest pattern matched by this \xe2\x80\xa6CkReturns the length, in bytes, of the longest pattern in \xe2\x80\xa6CfReturns the length of the shortest literal in this \xe2\x80\xa6CnReturns the length of the shortest pattern matched by this \xe2\x80\xa6ClReturns the length, in bytes, of the shortest pattern in \xe2\x80\xa6DkNew <code>WrapAlgorithm::OptimalFit</code> with default penalties. This \xe2\x80\xa6ChCalled when deserializing a variant with a single value.0DaThis returns <code>Ok(Some((key, value)))</code> for the next \xe2\x80\xa60DdThis returns a <code>Ok(value)</code> for the next value in the map.0AmState of the overflow checks.ChParse the arguments to the attribute using the given \xe2\x80\xa6BlSee <code>Attribute::parse_args_with</code>.CdParse the tokens within the macro invocation\xe2\x80\x99s \xe2\x80\xa6ClA convenience routine for parsing many patterns into HIR \xe2\x80\xa6DhParse a <code>Path</code> containing no path arguments on any of its \xe2\x80\xa6DhParse <code>::&lt;\xe2\x80\xa6&gt;</code> with mandatory leading <code>::</code>.DcGets all nodes that post-dominate <code>node</code>, if they exist.CkReturns an iterator over all the regions that appear in \xe2\x80\xa6CiReturns an iterator over a sequence of representative \xe2\x80\xa6CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa6BcSerialize a chunk of raw byte data.000CfSerialize a map entry consisting of a key and a value.0AoSerialize a tuple struct field.B`Serialize a tuple variant field.AiSerialize a struct field.BaSerialize a struct variant field.3210ChBegin to serialize a statically sized sequence whose \xe2\x80\xa6000AfSerialize a map value.0CcA thread-unsafe version of <code>set_logger</code>.CmReturns the first and all the rest of the elements of the \xe2\x80\xa6DiSwaps all elements in <code>self</code> with those in <code>other</code>.DkConverts the <code>Level</code> to the equivalent <code>LevelFilter</code>.DjConvert <code>self</code> directly into a <code>TokenStream</code> object.0CiReplace all matches with a corresponding value in the \xe2\x80\xa6DfReplaces all non-overlapping matches in <code>haystack</code> with \xe2\x80\xa6CnIterator over the type parameters in <code>self.params</code>.CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6DgRaised when a <code>Deserialize</code> enum type received a variant \xe2\x80\xa60CbThis method is called between child nodes of a \xe2\x80\xa6000AiWord wrapping algorithms.BkA deserializer holding a <code>bool</code>.0AgBreak opportunity type.CnDoes this index type assert if asked to construct an index \xe2\x80\xa6DgOverflow <code>usize::MAX</code> or other error during size computationCjA low level representation of the byte offsets of each \xe2\x80\xa60BkA deserializer holding a <code>char</code>.0BhA Unicode character class set operation.CiAn iterator over all ranges in a Unicode character class.CaThe available forms of Unicode character classes.AkProhibit line breaks before0CfThis structure compacts a JSON value with no extra \xe2\x80\xa6BbThe compiler generated an artifactDe<code>DenseIndexMap</code> specialized to the <code>ArcFamily</code>.De<code>DenseIndexMap</code> specialized to the <code>RefFamily</code>.CjA sequence of transitions used to represent a dense state.CmAn error that occurs when deserializing an object defined \xe2\x80\xa6CeA data structure that can be deserialized without \xe2\x80\xa60CkA bracketed hex literal did not correspond to a Unicode \xe2\x80\xa6BhUnrecognized flag, e.g., <code>a</code>.BjA macro invocation within an extern block.DgA possible error value while converting a <code>PathBuf</code> to a \xe2\x80\xa6CkAn invalid character was seen for a capture group name. \xe2\x80\xa6AkForm Korean syllable blocksBlA deserializer holding an <code>i128</code>.0n<code>x</code>DjConverts an existing value into a <code>Deserializer</code> from which \xe2\x80\xa60AhUse a noncontiguous NFA.CfRepresents the current state of an overlapping search.0BjThe statically resolved maximum log level.De<code>SparseIndexMap</code> specialized to the <code>RcFamily</code>.EcThe mutability of an <code>Item::Static</code> or <code>ForeignItem::Static</code>.BkA deserializer holding a <code>u128</code>.0CfMethods for determining displayed width of Unicode \xe2\x80\xa6DhAn error that occurs when the Unicode-aware <code>\\w</code> class is \xe2\x80\xa6BiA deserializer holding a <code>()</code>.0CnAn error indicating that the operation requested doesn\xe2\x80\x99t \xe2\x80\xa6CkMatch the end half of an ASCII-only word boundary. That \xe2\x80\xa60CmMatch the start of a Unicode word boundary. That is, this \xe2\x80\xa60CaFor use by <code>ToTokens</code> implementations.AmReturns the underlying slice.C`Get a the storage as a <code>&amp;mut [T]</code>AoCalled before every object key.CeBinary searches this sorted vec with a comparator \xe2\x80\xa6DiReturns the same as <code>Regex::captures_read</code>, but starts the \xe2\x80\xa60CnApply Unicode simple case folding to this character class, \xe2\x80\xa6CnExpand this character class such that it contains all case \xe2\x80\xa60CfThis configures whether to enable case insensitive \xe2\x80\xa6000CgEnable or disable the case insensitive flag by default.0DhEnable or disable the case insensitive flag (<code>i</code>) by default.DiWraps the underlying slice\xe2\x80\x99s <code>chunks_exact_mut</code> iterator \xe2\x80\xa6DaCopies the elements from <code>src</code> into <code>self</code>.DbIterator over the constant parameters in <code>self.params</code>.DgState of the <code>cfg(debug_assertions)</code> directive, enabling \xe2\x80\xa6EcHint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.000EcHint that the <code>Deserialize</code> type is expecting a <code>char</code> value.000DjHint that the <code>Deserialize</code> type is expecting an enum value \xe2\x80\xa6000EbParses an enum as an object like <code>{&quot;$KEY&quot;:$VALUE}</code>, where \xe2\x80\xa6EdHint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.000EdHint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.000DfHint that the <code>Deserialize</code> type is expecting a unit value.000EhSimilar to <code>self.drain(r).enumerate()</code> but with indices of <code>I</code> \xe2\x80\xa6B`Called after every object value.CiManually generate bindings for this type, returning a \xe2\x80\xa6CnReturns the location of the first overlapping match in the \xe2\x80\xa6EfConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without \xe2\x80\xa6DeThis attempts to extract prefixes from the given <code>Hir</code> \xe2\x80\xa6CgReturns whether byte classes are enabled, as set by \xe2\x80\xa6CgReturns whether this configuration has enabled byte \xe2\x80\xa60ClReturns multiple mutable references to disjoint indices, \xe2\x80\xa6CfReturns the look-around matcher used for this builder.BlReturn the look-around matcher for this NFA.ClFlatten an type declaration. This function will panic if \xe2\x80\xa6ChConverts the vector into an owned IdxSlice, dropping \xe2\x80\xa6ElConverts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating \xe2\x80\xa6CnReturns true if and only if the given offset in this search\xe2\x80\xa6DhReturns true if <code>self</code> is equally or more permissive than \xe2\x80\xa6DcDetermines of a <code>&amp;str</code> is <code>Sentence case</code>CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6DkTrims all literals in this seq such that only the first <code>len</code>\xe2\x80\xa6DfTrims this literal such that only the first <code>len</code> bytes \xe2\x80\xa6CiReturns the maximum haystack length supported by this \xe2\x80\xa6DiReturns the minimum haystack length that this <code>Finder</code> can \xe2\x80\xa60CnPer-character cost for lines that overflow the target line \xe2\x80\xa6BaYou must use this function in \xe2\x80\xa6DbParses zero or more occurrences of <code>T</code> separated by \xe2\x80\xa60CmReplace all matches using a closure called on each match. \xe2\x80\xa6BnReverses all of the literals in this sequence.DhThis is like <code>Regex::search_half</code>, but requires the caller toCmReturns the total number of bytes that have been searched \xe2\x80\xa6BdBegin to serialize a struct like \xe2\x80\xa6000ClSets the look-around matcher that should be used for the \xe2\x80\xa6DhReorders the entries of all <code>Value::Object</code> nested within \xe2\x80\xa6DgForwards to the slice\xe2\x80\x99s <code>sort_unstable_by</code> implementation.CiReturn the state identifier of the initial unanchored \xe2\x80\xa6CkReturns an iterator of non-overlapping matches in the givenEfRemoves every element of <code>other</code> from <code>self</code>, returning true \xe2\x80\xa6FeRemoves all ones from <code>other</code> in <code>self</code>, returning true if <code>self</code>\xe2\x80\xa6CgQueries the metadata about a file without following \xe2\x80\xa6oBuild directoryDaRender the error as an invocation of <code>compile_error!</code>.EbConverts a <code>&amp;str</code> to <code>Sentence case</code> <code>String</code>CjSerialize the given data structure as a pretty-printed \xe2\x80\xa60ClIf this class consists of only ASCII ranges, then return \xe2\x80\xa6CmSerialize the given data structure as pretty-printed JSON \xe2\x80\xa60CkReturn the next half match for a fallible search if one \xe2\x80\xa6CkExecutes an anchored leftmost forward search and writes \xe2\x80\xa6CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa6EeUnions the <code>other</code> sequence into this one by splice the <code>other</code>CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6CdSet the visited capacity used to bound backtracking.CkDisplayed width of the whitespace that must follow the wordCjWrap abstract fragments into lines with an optimal-fit \xe2\x80\xa6CmWrites the representation of a byte array. Formatters can \xe2\x80\xa6CkWrites a number that has already been rendered to a string.DfMatches any byte value except for <code>\\r</code> and <code>\\n</code>.CjMatches the UTF-8 encoding of any Unicode scalar value \xe2\x80\xa6CfAn iterator over all elements in an equivalence class.DaA deserializer holding a <code>&amp;[u8]</code>. Always calls \xe2\x80\xa60CjAn invalid character class range was found. An invalid \xe2\x80\xa6CmAn invalid range boundary was found in a character class. \xe2\x80\xa6CnA single range of characters represented by Unicode scalar \xe2\x80\xa6n<code>s</code>CmWhich parts of a HIR node\xe2\x80\x99s span should be included for \xe2\x80\xa6CcExpected a flag but got EOF, e.g., <code>(?</code>.EcA foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.DhA possible error value while converting a <code>OsString</code> to a \xe2\x80\xa6CkAn iterator over capturing groups and their names for a \xe2\x80\xa6AkForm Korean syllable blocksBmA deserializer holding an <code>isize</code>.0CjThe suggested replacement can be applied automatically \xe2\x80\xa6CmThe nest limit was exceeded. The limit stored here is the \xe2\x80\xa6CaRun cargo with <code>--no-default-features</code>EfMutability of a raw pointer (<code>*const T</code>, <code>*mut T</code>), in which \xe2\x80\xa6EjA lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.CjKeep pairs together. For pairs, break before and after \xe2\x80\xa6CbA repetition operator was applied to a missing \xe2\x80\xa6Df<code>SparseIndexMap</code> specialized to the <code>ArcFamily</code>.Df<code>SparseIndexMap</code> specialized to the <code>RefFamily</code>.CkA sequence of transitions used to represent a sparse state.DdAn iterator over all group matches in a <code>Captures</code> value.0CeA builder for constructing an AST-&gt;HIR translator.CiThis error occurs when a Unicode feature is used when \xe2\x80\xa6CmAn error indicating that a stream search was attempted on \xe2\x80\xa6BlA deserializer holding a <code>usize</code>.0Af<code>\\b{start}</code>CbMatch a Unicode-aware negation of a word boundary.0BdAdd a \xe2\x80\x9cstart capture\xe2\x80\x9d NFA state.BdAdd a \xe2\x80\x9creverse union\xe2\x80\x9d NFA state.CaFor use by <code>ToTokens</code> implementations.DjCalled before every array value.  Writes a <code>,</code> if needed to \xe2\x80\xa6CmReturns the canonical, absolute form of the path with all \xe2\x80\xa6CkReturns a fresh allocated set of capture locations that can0DhEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.00000000000000000000000000000000000000000EhLike <code>Iterator::collect</code>, except also takes as input a <code>domain</code>\xe2\x80\xa6CmGenerate the boilerplate for a newtyped index struct, for \xe2\x80\xa6CmCreates a new index type and associates it with an object \xe2\x80\xa6DiHint that the <code>Deserialize</code> type is expecting a byte array \xe2\x80\xa6000CjParses a JSON string as bytes. Note that this function \xe2\x80\xa6DjHint that the <code>Deserialize</code> type is expecting a sequence of \xe2\x80\xa6000DkReturns true if either this <code>Punctuated</code> is empty, or it has \xe2\x80\xa6ClReturns the total number of slots for explicit capturing \xe2\x80\xa6CgAppend all items in the slice to the end of our vector.CiCopy elements from a slice and append them to the vector.DgFetches a <code>FromOsStrError</code> for more about the conversion \xe2\x80\xa6CmReturns the span of a capturing group match corresponding \xe2\x80\xa6CgReturns a mutable reference to a value for a given key.0DjCreate a new \xe2\x80\x9chaystack too long\xe2\x80\x9d error. The given <code>len</code> \xe2\x80\xa6CdThis configures verbose mode for the entire pattern.CeThis configures verbose mode for all of the patterns.10BnEnable verbose mode in the regular expression.00ClReturns the total number of slots for implicit capturing \xe2\x80\xa6CjCopy elements from a slice into the vector at position \xe2\x80\xa6DbReturns all possible projections of <code>self</code> that are \xe2\x80\xa6DhInterpolates the capture references in <code>replacement</code> with theEhRemoves every element of <code>self</code> not in <code>other</code>, returning true \xe2\x80\xa6EfRemoves all ones in <code>self</code> not in <code>other</code>, returning true if \xe2\x80\xa6BgConvert this value into a deserializer.0ClGiven a closure that executes a single search, return an \xe2\x80\xa6CnConverts a <code>Utf8PathBuf</code> to a <code>PathBuf</code>.DjConvert <code>self</code> directly into a <code>TokenStream</code> object.0DeDetermine whether <code>Deserialize</code> implementations should \xe2\x80\xa6DcDetermine whether <code>Serialize</code> implementations should \xe2\x80\xa6101010CmReturns true if the given character has significance in a \xe2\x80\xa6DiReturns true if this place\xe2\x80\x99s base <code>Local</code> corresponds to \xe2\x80\xa6ChReturns true if and only if the given character is a \xe2\x80\xa6EfReturns true when <code>Look::WordEndAscii</code> is satisfied <code>at</code> the \xe2\x80\xa6CmConfigure a limit on the maximum length of any literal in \xe2\x80\xa6DfInitializes an empty <code>where</code>-clause if there is not one \xe2\x80\xa6DgThis returns <code>Ok(Some(value))</code> for the next value in the \xe2\x80\xa60ChParse the input TokenStream of a macro, triggering a \xe2\x80\xa6CiParse the arguments to the attribute, expecting it to \xe2\x80\xa6BnSee <code>Attribute::parse_nested_meta</code>.EjUsed when parsing <code>list(...)</code> syntax <strong>if</strong> the content inside \xe2\x80\xa6DjWraps the underlying slice\xe2\x80\x99s <code>rchunks_exact_mut</code> iterator \xe2\x80\xa6CkReturns an iterator over all the regions that appear in \xe2\x80\xa6ClReplace all matches using raw bytes with a corresponding \xe2\x80\xa6DkError if this is a <code>Meta::List</code> or <code>Meta::NameValue</code>.ClThis target is built only if these features are enabled. \xe2\x80\xa6DjThis is like <code>Regex::search_slots</code>, but requires the caller \xe2\x80\xa6AmSerialize a sequence element.AjSerialize a tuple element.10BmSet whether the text is strikethrough or not.DjReturns the same as <code>Regex::shortest_match</code>, but starts the \xe2\x80\xa6DjReturns the same as <code>shortest_match</code>, but starts the search \xe2\x80\xa6DjChange <code>self.subsequent_indent</code>. The subsequent indentation \xe2\x80\xa6ClIndentation used for subsequent lines of output. See the \xe2\x80\xa6DfReturns an iterator over all non-overlapping <code>Captures</code> \xe2\x80\xa6DhInvokes <code>try_reserve_exact</code> on the underlying instance of \xe2\x80\xa6DjReserve the minimum capacity for <code>additional</code> more elements \xe2\x80\xa6CnImplementation of the Line Breaking Algorithm described in \xe2\x80\xa6ClCreate a new \xe2\x80\x9cunsupported empty pattern\xe2\x80\x9d error. This \xe2\x80\xa6AoA list of all workspace membersCgWrites a character escape code to the specified writer.CdA builder for configuring an Aho-Corasick automaton.ClA backtracking regex engine that bounds its execution to \xe2\x80\xa6CmAn invalid escape sequence was found in a character class \xe2\x80\xa6CaThe type of op used in a Unicode character class.CaError type for APIs with fallible heap allocationCeA deserializer holding a <code>Cow&lt;str&gt;</code>.0BmA line of code associated with the DiagnosticB`An unrecognized escape sequence.BoAn externally-provided identifier of a functionBcA duplicate capture name was found.CkAn owned iterator over the set of matches from a regex set.0AnThe type of a special literal.Cn<code>StandardStreamLock</code> is a locked reference to a \xe2\x80\xa6CjIterator that deserializes a stream into multiple JSON \xe2\x80\xa60BmA deserializer holding a <code>String</code>.0DkA modifier on a trait bound, currently only used for the <code>?</code> \xe2\x80\xa6CjAn iterator over all non-overlapping leftmost matches, \xe2\x80\xa6CkAn iterator over all non-overlapping half matches for a \xe2\x80\xa6CkMatch the end half of a Unicode word boundary. That is, \xe2\x80\xa60CmMatch the start half of an ASCII-only word boundary. That \xe2\x80\xa60CkReturns an iterator over all the fields of the ADT that \xe2\x80\xa6BeFind a body in the target byte range.DhCalled before every object value.  A <code>:</code> should be written toChReturns true if and only if this set contains any \xe2\x80\x9c\xe2\x80\xa60CfReturns the pattern identifier of the current pattern.CfDefine a type that supports parsing and printing a \xe2\x80\xa6CeGet the next-lowest <code>Level</code> from this one.CkGet the next-lowest <code>LevelFilter</code> from this one.DhHint that the <code>Deserialize</code> type is expecting an optional \xe2\x80\xa6000DcParses a <code>null</code> as a None, and any other values as a \xe2\x80\xa6DkHint that the <code>Deserialize</code> type is expecting a string value \xe2\x80\xa6000DjHint that the <code>Deserialize</code> type is expecting a struct with \xe2\x80\xa6000ClA convenience routine for building a start configuration \xe2\x80\xa60CfCreate a mutable IdxSlice from its pointer and length.CfConstruct from the underlying type without any checks.DkCreate a new value from a <code>u32</code> without checking whether the \xe2\x80\xa60CbCreates a new index from a given <code>u32</code>.CkReturns whether automatic prefilters are enabled, as set byCeReturns the cache capacity set on this configuration.DfReturns DFA size limit, as set by <code>Config::dfa_size_limit</code>.DfReturns NFA size limit, as set by <code>Config::nfa_size_limit</code>.CnReturn the configured NFA size limit, if it exists, in the \xe2\x80\xa6C`Returns the capture configuration, as set by \xe2\x80\xa6CmReturn what kinds of capture states will be compiled into \xe2\x80\xa6CfGet the next-highest <code>Level</code> from this one.ClGet the next-highest <code>LevelFilter</code> from this one.DhInterpolates the capture references in <code>replacement</code> with theClGiven a closure that executes a single search, return an \xe2\x80\xa6DaRender the error as an invocation of <code>compile_error!</code>.DlReturns the <code>HirId</code> corresponding to a MIR <code>Location</code>.CgReturns all the locations in a <code>BasicBlock</code>.DkThe module path of the message, if it is a <code>&#39;static</code> string.DaSet <code>module_path</code> to a <code>&#39;static</code> stringCdSets the size limit, in bytes, for the one-pass DFA.E`Returns true if <code>self</code> overlaps with <code>other</code> including \xe2\x80\xa6DbReturns an iterator over all prefixes of <code>self</code>\xe2\x80\x99s \xe2\x80\xa6DfError if this is a <code>Meta::Path</code> or <code>Meta::List</code>.CkProvides conversion to and detection of screaming snake \xe2\x80\xa6CfA thread-unsafe version of <code>set_max_level</code>.CmForwards to the slice\xe2\x80\x99s <code>sort_by_cached_key</code> \xe2\x80\xa6ClCreate a new \xe2\x80\x9cunsupported stream search\xe2\x80\x9d error. This \xe2\x80\xa6CnThe input contains a string that lives at least as long as \xe2\x80\xa60CjThe workspace-level metadata object. Null if non-existent.CfWrites a raw JSON fragment that doesn\xe2\x80\x99t need any \xe2\x80\xa6BeA build script successfully executed.DgAn iterator over all capturing groups in a <code>Captures</code> value.ClRepresents the control dependencies between all pairs of \xe2\x80\xa6BjOnly the crate containing a specific file.CfEOF was found before an escape sequence was completed.CfAn iterator of overlapping matches in a particular \xe2\x80\xa60CgThe symmetric difference of two sets. The symmetric \xe2\x80\xa6CnThe Unicode class is not valid. This typically occurs when \xe2\x80\xa6CjAn error indicating that a particular type of anchored \xe2\x80\xa6CmAn error that occurs when the caller requests an anchored \xe2\x80\xa6CmA structure wrapping a Windows path prefix as well as its \xe2\x80\xa6Ai<code>\\b{end-half}</code>DlBuilds a <code>Regex</code> directly from many <code>Hir</code> expressions.CmCompile the given high level intermediate representations \xe2\x80\xa6CkReturns true if and only if this set contains any ASCII \xe2\x80\xa60DkReturns a mapping from source-level variable names to <code>Local</code>\xe2\x80\xa6CkConverts an iterator into a collection within the given \xe2\x80\xa6CnReturns DFA size limit in terms of the number of states in \xe2\x80\xa6CnReturns the line terminator for this configuration, as set \xe2\x80\xa6CiReturns the line terminator in this syntax configuration.ClReturns the line terminator that was configured for this \xe2\x80\xa6DkReturns the cached value for the given key, or runs <code>compute</code>\xe2\x80\xa60EhReturns true when <code>Look::WordEndUnicode</code> is satisfied <code>at</code> the \xe2\x80\xa6EhReturns true when <code>Look::WordStartAscii</code> is satisfied <code>at</code> the \xe2\x80\xa6DkSimilar to <code>self.iter_mut().enumerate()</code> but with indices of \xe2\x80\xa6CnReturns the union of all prefix look-around assertions for \xe2\x80\xa6CnReturns a set of all look-around assertions that appear as \xe2\x80\xa60CeName of this type in TypeScript, with type arguments.CiTransitions from the current state to the next state, \xe2\x80\xa6CkReturns the delimiter, the span of the delimiter token, \xe2\x80\xa6DfThis macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.CnParse the regular expression and return an abstract syntax \xe2\x80\xa6EbSets the line terminator for use with <code>(?m:^)</code> and <code>(?m:$)</code>.CkReturn the ID of the start state for this lazy DFA when \xe2\x80\xa60ClReturns the total number of capturing groups that appear \xe2\x80\xa600CnReturns true if and only if the underlying writer supports \xe2\x80\xa6BgThe capturing group limit was exceeded.CdThe type of a Unicode character class set operation.DgA dangling negation was used when setting flags, e.g., <code>i-</code>.CnThe negation operator was used twice, e.g., <code>-i-s</code>.DcExtension trait that adds <code>collect_indexical</code> to all \xe2\x80\xa6CnAn error indicating that an anchored search was requested, \xe2\x80\xa6CiThe start of a possible match was found. Callers must \xe2\x80\xa6DjType returned from <code>serialize_tuple_struct</code> for serializing \xe2\x80\xa6CnReturned from <code>Serializer::serialize_tuple_struct</code>.1101Cc<code>\\&gt;</code> (alias for <code>\\b{end}</code>)CmMatch the start half of a Unicode word boundary. That is, \xe2\x80\xa60CiBinary searches this sorted vec with a key extraction \xe2\x80\xa6ChReturns true if and only if this set contains any \xe2\x80\x9c\xe2\x80\xa6000ClAn algorithm to compute control-dependencies between MIR \xe2\x80\xa6CdReturns all the control dependencies within the CFG.DiHint that the <code>Deserialize</code> type is expecting a byte array \xe2\x80\xa6000C`Returns true if a type implements a given trait.ClThis configures dot-matches-new-line mode for the entire \xe2\x80\xa6000CnEnable or disable the \xe2\x80\x9cdot matches any character\xe2\x80\x9d flag \xe2\x80\xa600BjConstruct from a usize without any checks.CgReturns whether \xe2\x80\x9ccase insensitive\xe2\x80\x9d mode is enabled.BhReturns the configured visited capacity.CaConvert to a standard library error trait object.DiSimilar to <code>self.into_iter().enumerate()</code> but with indices \xe2\x80\xa6EeReturns true when <code>Look::WordAsciiNegate</code> is satisfied <code>at</code> \xe2\x80\xa6CfReturns the minimum visited capacity for the given \xe2\x80\xa6ChCalled when deserializing a variant with a single value.0DeCompute upper-right column minima in O(<em>m</em> + <em>n</em>) time.DfThis is like <code>Regex::search_captures</code>, but requires the \xe2\x80\xa6CoForwards to the slice\xe2\x80\x99s <code>sort_unstable_by_key</code> \xe2\x80\xa6CkCompute the symmetric difference of the given character \xe2\x80\xa6CfCompute the symmetric difference of the given byte \xe2\x80\xa6CnApply Unicode simple case folding to this character class, \xe2\x80\xa6CnExpand this character class such that it contains all case \xe2\x80\xa6CnReturns the location of the first overlapping match in the \xe2\x80\xa6CkExecutes a overlapping search with this automaton using \xe2\x80\xa6CmReplace all matches using a closure called on each match. \xe2\x80\xa6DdReplaces all non-overlapping matches in <code>haystack</code> by \xe2\x80\xa6CkReturns an iterator of non-overlapping matches in the givenClReturns an iterator of non-overlapping matches with this \xe2\x80\xa6CnCreate a new \xe2\x80\x9cunsupported anchored\xe2\x80\x9d error. This occurs \xe2\x80\xa6DkThis method is called between child nodes of an <code>Alternation</code>\xe2\x80\xa60CcThis method is called between child nodes of an \xe2\x80\xa60CjThe input contains a byte array that lives at least as \xe2\x80\xa60BdThe input contains a newtype struct.0DcAn error that occurs when parsing a <code>ColorChoice</code> fails.BgAn invalid hexadecimal digit was found.CmGeneric interface for converting iterators into indexical \xe2\x80\xa6CkAn iterator over capturing groups and their names for a \xe2\x80\xa6CjThis error occurs when one uses a non-ASCII byte for a \xe2\x80\xa6C`A deserializer holding a <code>MapAccess</code>.0DgAn error that occurs when a <code>PatternID</code> failed to insert \xe2\x80\xa6C`A deserializer holding a <code>SeqAccess</code>.0DkType returned from <code>serialize_tuple_variant</code> for serializing \xe2\x80\xa6CoReturned from <code>Serializer::serialize_tuple_variant</code>.1101CmWhen syntax similar to PCRE\xe2\x80\x99s look-around is used, this \xe2\x80\xa6Ak<code>\\b{start-half}</code>CmReturns true if and only if this set contains any Unicode \xe2\x80\xa60ClReturns the total number of explicit capturing groups in \xe2\x80\xa6CjFinds all the bodies that enclose the given span, from \xe2\x80\xa6CfReturns an iterator of overlapping matches. Stated \xe2\x80\xa6ChReturns whether \xe2\x80\x9cignore whitespace\xe2\x80\x9d mode is enabled.CcSet the cache capacity, in bytes, for the lazy DFA.EfReturns true when <code>Look::WordStartUnicode</code> is satisfied <code>at</code> \xe2\x80\xa6C`Returns the longest common prefix from this seq.C`Returns the longest common suffix from this seq.DkParses zero or more occurrences of <code>T</code> using the given parse \xe2\x80\xa6EkSerialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.000CnIf we are suggesting a replacement, this will contain text \xe2\x80\xa6ChReturns true if and only if the given character is a \xe2\x80\xa6ClReplace all matches using raw bytes with a corresponding \xe2\x80\xa6DfReplaces all non-overlapping matches in <code>haystack</code> with \xe2\x80\xa6BmHeuristically enable Unicode word boundaries.CiWhether the default features in this dependency are used.CmWrites a string fragment that doesn\xe2\x80\x99t need any escaping \xe2\x80\xa6ClLike <code>StandardStream</code>, but does buffered writing.CbA deserializer holding an <code>EnumAccess</code>.0DhA closing <code>&gt;</code> could not be found for a capture group name.CnThis trait allows the user to customize the heuristic used \xe2\x80\xa6CeAn error indicating that an unanchored search was \xe2\x80\xa6CjThe range provided in a counted repetition operator is \xe2\x80\xa6D`Type returned from <code>serialize_struct_variant</code> for \xe2\x80\xa6D`Returned from <code>Serializer::serialize_struct_variant</code>.1101DbSplit <code>line</code> into words using Unicode break properties.CkThis occurs when the Unicode simple case mapping tables \xe2\x80\xa6CfAn error indicating that an overlapping search was \xe2\x80\xa6Ce<code>\\&lt;</code> (alias for <code>\\b{start}</code>)BmEnable ASCII-aware case insensitive matching.000DjHint that the <code>Deserialize</code> type is expecting the name of a \xe2\x80\xa6000BnReturns one-pass DFA size limit, as set by \xe2\x80\xa6DhInterpolates the capture references in <code>replacement</code> with theClGiven a closure that executes a single search, return an \xe2\x80\xa6CjCreate a new \xe2\x80\x9cinvalid anchored search\xe2\x80\x9d error. This \xe2\x80\xa6CjReturn true if and only if this HIR is either a simple \xe2\x80\xa6EfReturns true when <code>Look::WordEndHalfAscii</code> is satisfied <code>at</code> \xe2\x80\xa6EgReturns true when <code>Look::WordUnicodeNegate</code> is satisfied <code>at</code> \xe2\x80\xa6CmShrinks this seq to its minimal size while respecting the \xe2\x80\xa6CmReplace all matches using raw bytes with a closure called \xe2\x80\xa6BjBegin to serialize a tuple struct like \xe2\x80\xa6000E`Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.000CkSearch for and replace all matches of this automaton in \xe2\x80\xa6DiReplaces all non-overlapping matches in <code>rdr</code> with strings \xe2\x80\xa6DjA deserializer holding a <code>&amp;str</code> with a lifetime tied to \xe2\x80\xa60EaAn opening <code>{</code> was found with no corresponding closing <code>}</code>.CjThis occurs when an unrecognized Unicode property name \xe2\x80\xa6DfHint that the <code>Deserialize</code> type needs to deserialize a \xe2\x80\xa6000DjHint that the <code>Deserialize</code> type is expecting a unit struct \xe2\x80\xa6000CfParse arbitrarily deep JSON structures without any \xe2\x80\xa6CkDecode this value from the bytes given using the native \xe2\x80\xa60CjDecode this small index from the bytes given using the \xe2\x80\xa611DhInterpolates the capture references in <code>replacement</code> with theCkReturns true if the given character can be escaped in a \xe2\x80\xa6DjDetermines of a <code>&amp;str</code> is <code>SCREAMING_SNAKE_CASE</code>CeConfigure a lazy DFA search to quit only when its \xe2\x80\xa6D`Begin to serialize a tuple variant like <code>E::T</code> in \xe2\x80\xa6000CaPenalty for a last line with a single short word.CaEnable specializing start states in the lazy DFA.CnWhether to compile a separate start state for each pattern \xe2\x80\xa60EiConverts a <code>&amp;str</code> to <code>SCREAMING_SNAKE_CASE</code> <code>String</code>EeConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by \xe2\x80\xa6DdReturns a collection of spans inside <code>self</code> that have \xe2\x80\xa6ClCreate a new \xe2\x80\x9cunsupported overlapping search\xe2\x80\x9d error. \xe2\x80\xa6CcAn iterator over representative bytes from each \xe2\x80\xa6DkThis occurs when a Unicode-aware Perl character class (<code>\\w</code>, \xe2\x80\xa6DhAn error that occurs when the Unicode-aware <code>\\w</code> class is \xe2\x80\xa6CjWhen octal support is disabled, this error is produced \xe2\x80\xa6CkBuild an Aho-Corasick DFA from the given noncontiguous NFA.CgBuild an Aho-Corasick contiguous NFA from the given \xe2\x80\xa6ChReturns true if and only if this set contains any \xe2\x80\x9c\xe2\x80\xa60DkHint that the <code>Deserialize</code> type is expecting a tuple struct \xe2\x80\xa6000CkReturns whether \xe2\x80\x9cdot matches new line\xe2\x80\x9d mode is enabled.CgRequest that heuristic limitations on the number of \xe2\x80\xa6DhGets the node that immediately post-dominators <code>node</code>, if \xe2\x80\xa6ClCreate a new \xe2\x80\x9cinvalid unanchored search\xe2\x80\x9d error. This \xe2\x80\xa6ClReturns true if and only if all starting states for this \xe2\x80\xa6EhReturns true when <code>Look::WordEndHalfUnicode</code> is satisfied <code>at</code> \xe2\x80\xa6EhReturns true when <code>Look::WordStartHalfAscii</code> is satisfied <code>at</code> \xe2\x80\xa6DaParses one or more occurrences of <code>T</code> separated by \xe2\x80\xa6DdSerialize a newtype struct like <code>struct Millimeters(u8)</code>.000BmSerialize newtypes without an object wrapper.DaBegin to serialize a struct variant like <code>E::S</code> in \xe2\x80\xa6000CeWhen should the a single word on the last line be \xe2\x80\xa6B`If the suggestion is approximateDcThis method is called on every <code>ClassSetItem</code> before \xe2\x80\xa60DkA deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to \xe2\x80\xa60CnBuild a forward finder using the given needle and a custom \xe2\x80\xa6CdReturns hybrid NFA/DFA cache capacity, as set by \xe2\x80\xa6ClReturns whether this configuration has enabled heuristic \xe2\x80\xa6CnConfigure a lazy DFA search to quit after a certain number \xe2\x80\xa6DkAn alternative to the primary <code>Expr::parse</code> parser (from the \xe2\x80\xa6EdSerialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.000ClConfigures construction of a lazy DFA to use the minimum \xe2\x80\xa6BkReturns an iterator of overlapping matches.ChReturns an iterator of overlapping matches with this \xe2\x80\xa6DbThis method is called on every <code>ClassSetItem</code> after \xe2\x80\xa60CiWrites the set of patterns that match anywhere in the \xe2\x80\xa60C`Treat as NS or ID for strict or normal breaking.DfHint that the <code>Deserialize</code> type is expecting a newtype \xe2\x80\xa6000C`Parses a newtype struct as the underlying value.DjHelper macro when implementing the <code>Deserializer</code> part of a \xe2\x80\xa60EfConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without \xe2\x80\xa6ClReturns the minimum lazy DFA cache capacity required for \xe2\x80\xa6DjReturns true when <code>Look::WordStartHalfUnicode</code> is satisfied \xe2\x80\xa6CmReplace all matches using raw bytes with a closure called \xe2\x80\xa6DdReplaces all non-overlapping matches in <code>haystack</code> by \xe2\x80\xa6CnExecutes an overlapping forward search and returns the end \xe2\x80\xa6CiExecutes a reverse overlapping search and returns the \xe2\x80\xa6DhAn opening <code>{</code> was not followed by a valid decimal value. \xe2\x80\xa6DkThe special word boundary syntax, <code>\\b{something}</code>, was used, \xe2\x80\xa6CjReturns, if set, the minimum number of bytes per state \xe2\x80\xa6CmReturns whether this configuration will instruct the lazy \xe2\x80\xa6CkReturns whether this configuration has enabled anchored \xe2\x80\xa60CkSearch the given reader and replace all matches of this \xe2\x80\xa6DkReplaces all non-overlapping matches in <code>rdr</code> by calling the \xe2\x80\xa6CiMacro expansion information associated with a diagnostic.CkThis occurs when an unrecognized Unicode property value \xe2\x80\xa6CkGets the MIR body and Polonius-generated borrowck facts \xe2\x80\xa6CnReturns the total number of explicit capturing groups that \xe2\x80\xa6CnThis method is called between the left hand and right hand \xe2\x80\xa60DlArguments of a function path segment: the <code>(A, B) -&gt; C</code> in \xe2\x80\xa6CjReturns, if set, the minimum number of times the cache \xe2\x80\xa6CkReturns whether the cache capacity check should be skipped.CiTransitions from the current state to the next state, \xe2\x80\xa6DhParse a pattern, possibly involving <code>|</code>, possibly including aDjParses one or more occurrences of <code>T</code> using the given parse \xe2\x80\xa6CiWrites the set of patterns that match anywhere in the \xe2\x80\xa6DgThis method is called on every <code>ClassSetBinaryOp</code> before \xe2\x80\xa60EaAngle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in \xe2\x80\xa6DfThis method is called on every <code>ClassSetBinaryOp</code> after \xe2\x80\xa60DcThis is like <code>Regex::which_overlapping_matches</code>, but \xe2\x80\xa6DkThe special word boundary syntax, <code>\\b{something}</code>, was used, \xe2\x80\xa6DkAn alternative to the primary <code>Expr::parse</code> parser (from the \xe2\x80\xa6CnOptimizes this seq while treating its literals as prefixes \xe2\x80\xa6CnOptimizes this seq while treating its literals as suffixes \xe2\x80\xa6DkThe syntax <code>\\b{</code> was observed, but afterwards the end of the \xe2\x80\xa6CaConvert to a standard library error trait object.")